<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on SJTUG - A Joyful Techie User Group</title>
    <link>https://sjtug.org/post/</link>
    <description>Recent content in Posts on SJTUG - A Joyful Techie User Group</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 08 Oct 2025 00:00:00 +0800</lastBuildDate>
    
        <atom:link href="https://sjtug.org/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Creating a New Theme</title>
      <link>https://sjtug.org/post/creating-a-new-theme/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/creating-a-new-theme/</guid>
      <description>&lt;h3 id=&#34;introduction&#34;&gt;&lt;strong&gt;Introduction&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ll start with creating a new site with a very basic template. Then we&amp;rsquo;ll add in a few pages and posts. With small variations on that, you will be able to create many different types of web sites.&lt;/p&gt;
&lt;p&gt;In this tutorial, commands that you enter will start with the &amp;ldquo;$&amp;rdquo; prompt. The output will follow. Lines that start with &amp;ldquo;#&amp;rdquo; are comments that I&amp;rsquo;ve added to explain a point. When I show updates to a file, the &amp;ldquo;:wq&amp;rdquo; on the last line means to save the file.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s an example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;package main

import &amp;quot;fmt&amp;quot;

func main() {
    fmt.Print(&amp;quot;Hello&amp;quot;)
}
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;There are a few concepts that you need to understand before creating a theme.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;skins&#34;&gt;Skins&lt;/h3&gt;
&lt;p&gt;Skins are the files responsible for the look and feel of your site. It’s the CSS that controls colors and fonts, it’s the Javascript that determines actions and reactions. It’s also the rules that Hugo uses to transform your content into the HTML that the site will serve to visitors.&lt;/p&gt;
&lt;p&gt;You have two ways to create a skin. The simplest way is to create it in the &lt;code&gt;layouts/&lt;/code&gt; directory. If you do, then you don’t have to worry about configuring Hugo to recognize it. The first place that Hugo will look for rules and files is in the &lt;code&gt;layouts/&lt;/code&gt; directory so it will always find the skin.&lt;/p&gt;
&lt;p&gt;Your second choice is to create it in a sub-directory of the &lt;code&gt;themes/&lt;/code&gt; directory. If you do, then you must always tell Hugo where to search for the skin. It’s extra work, though, so why bother with it?&lt;/p&gt;
&lt;p&gt;The difference between creating a skin in &lt;code&gt;layouts/&lt;/code&gt; and creating it in &lt;code&gt;themes/&lt;/code&gt; is very subtle. A skin in &lt;code&gt;layouts/&lt;/code&gt; can’t be customized without updating the templates and static files that it is built from. A skin created in &lt;code&gt;themes/&lt;/code&gt;, on the other hand, can be and that makes it easier for other people to use it.&lt;/p&gt;
&lt;p&gt;The rest of this tutorial will call a skin created in the &lt;code&gt;themes/&lt;/code&gt; directory a theme.&lt;/p&gt;
&lt;p&gt;Note that you can use this tutorial to create a skin in the &lt;code&gt;layouts/&lt;/code&gt; directory if you wish to. The main difference will be that you won’t need to update the site’s configuration file to use a theme.&lt;/p&gt;
&lt;h3 id=&#34;the-home-page&#34;&gt;The Home Page&lt;/h3&gt;
&lt;p&gt;The home page, or landing page, is the first page that many visitors to a site see. It is the index.html file in the root directory of the web site. Since Hugo writes files to the public/ directory, our home page is public/index.html.&lt;/p&gt;
&lt;h3 id=&#34;site-configuration-file&#34;&gt;Site Configuration File&lt;/h3&gt;
&lt;p&gt;When Hugo runs, it looks for a configuration file that contains settings that override default values for the entire site. The file can use TOML, YAML, or JSON. I prefer to use TOML for my configuration files. If you prefer to use JSON or YAML, you’ll need to translate my examples. You’ll also need to change the name of the file since Hugo uses the extension to determine how to process it.&lt;/p&gt;
&lt;p&gt;Hugo translates Markdown files into HTML. By default, Hugo expects to find Markdown files in your &lt;code&gt;content/&lt;/code&gt; directory and template files in your &lt;code&gt;themes/&lt;/code&gt; directory. It will create HTML files in your &lt;code&gt;public/&lt;/code&gt; directory. You can change this by specifying alternate locations in the configuration file.&lt;/p&gt;
&lt;h3 id=&#34;content&#34;&gt;Content&lt;/h3&gt;
&lt;p&gt;Content is stored in text files that contain two sections. The first section is the “front matter,” which is the meta-information on the content. The second section contains Markdown that will be converted to HTML.&lt;/p&gt;
&lt;h4 id=&#34;front-matter&#34;&gt;Front Matter&lt;/h4&gt;
&lt;p&gt;The front matter is information about the content. Like the configuration file, it can be written in TOML, YAML, or JSON. Unlike the configuration file, Hugo doesn’t use the file’s extension to know the format. It looks for markers to signal the type. TOML is surrounded by “&lt;code&gt;+++&lt;/code&gt;”, YAML by “&lt;code&gt;---&lt;/code&gt;”, and JSON is enclosed in curly braces. I prefer to use TOML, so you’ll need to translate my examples if you prefer YAML or JSON.&lt;/p&gt;
&lt;p&gt;The information in the front matter is passed into the template before the content is rendered into HTML.&lt;/p&gt;
&lt;h4 id=&#34;markdown&#34;&gt;Markdown&lt;/h4&gt;
&lt;p&gt;Content is written in Markdown which makes it easier to create the content. Hugo runs the content through a Markdown engine to create the HTML which will be written to the output file.&lt;/p&gt;
&lt;h3 id=&#34;template-files&#34;&gt;Template Files&lt;/h3&gt;
&lt;p&gt;Hugo uses template files to render content into HTML. Template files are a bridge between the content and presentation. Rules in the template define what content is published, where it&amp;rsquo;s published to, and how it will rendered to the HTML file. The template guides the presentation by specifying the style to use.&lt;/p&gt;
&lt;p&gt;There are three types of templates: single, list, and partial. Each type takes a bit of content as input and transforms it based on the commands in the template.&lt;/p&gt;
&lt;p&gt;Hugo uses its knowledge of the content to find the template file used to render the content. If it can’t find a template that is an exact match for the content, it will shift up a level and search from there. It will continue to do so until it finds a matching template or runs out of templates to try. If it can’t find a template, it will use the default template for the site.&lt;/p&gt;
&lt;p&gt;Please note that you can use the front matter to influence Hugo’s choice of templates.&lt;/p&gt;
&lt;h4 id=&#34;single-template&#34;&gt;Single Template&lt;/h4&gt;
&lt;p&gt;A single template is used to render a single piece of content. For example, an article or post would be a single piece of content and use a single template.&lt;/p&gt;
&lt;h4 id=&#34;list-template&#34;&gt;List Template&lt;/h4&gt;
&lt;p&gt;A list template renders a group of related content. That could be a summary of recent postings or all articles in a category. List templates can contain multiple groups.&lt;/p&gt;
&lt;p&gt;The homepage template is a special type of list template. Hugo assumes that the home page of your site will act as the portal for the rest of the content in the site.&lt;/p&gt;
&lt;h4 id=&#34;partial-template&#34;&gt;Partial Template&lt;/h4&gt;
&lt;p&gt;A partial template is a template that can be included in other templates. Partial templates must be called using the “partial” template command. They are very handy for rolling up common behavior. For example, your site may have a banner that all pages use. Instead of copying the text of the banner into every single and list template, you could create a partial with the banner in it. That way if you decide to change the banner, you only have to change the partial template.&lt;/p&gt;
&lt;h2 id=&#34;create-a-new-site&#34;&gt;Create a New Site&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s use Hugo to create a new web site. I&amp;rsquo;m a Mac user, so I&amp;rsquo;ll create mine in my home directory, in the Sites folder. If you&amp;rsquo;re using Linux, you might have to create the folder first.&lt;/p&gt;
&lt;p&gt;The &amp;ldquo;new site&amp;rdquo; command will create a skeleton of a site. It will give you the basic directory structure and a useable configuration file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo new site ~/Sites/zafta
$ cd ~/Sites/zafta
$ ls -l
total 8
drwxr-xr-x  7 quoha  staff  238 Sep 29 16:49 .
drwxr-xr-x  3 quoha  staff  102 Sep 29 16:49 ..
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Take a look in the content/ directory to confirm that it is empty.&lt;/p&gt;
&lt;p&gt;The other directories (archetypes/, layouts/, and static/) are used when customizing a theme. That&amp;rsquo;s a topic for a different tutorial, so please ignore them for now.&lt;/p&gt;
&lt;h3 id=&#34;generate-the-html-for-the-new-site&#34;&gt;Generate the HTML For the New Site&lt;/h3&gt;
&lt;p&gt;Running the &lt;code&gt;hugo&lt;/code&gt; command with no options will read all the available content and generate the HTML files. It will also copy all static files (that&amp;rsquo;s everything that&amp;rsquo;s not content). Since we have an empty site, it won&amp;rsquo;t do much, but it will do it very quickly.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo --verbose
INFO: 2014/09/29 Using config file: config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms
$ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &amp;ldquo;&lt;code&gt;--verbose&lt;/code&gt;&amp;rdquo; flag gives extra information that will be helpful when we build the template. Every line of the output that starts with &amp;ldquo;INFO:&amp;rdquo; or &amp;ldquo;WARN:&amp;rdquo; is present because we used that flag. The lines that start with &amp;ldquo;WARN:&amp;rdquo; are warning messages. We&amp;rsquo;ll go over them later.&lt;/p&gt;
&lt;p&gt;We can verify that the command worked by looking at the directory again.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls -l
total 8
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:02 public
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;See that new public/ directory? Hugo placed all generated content there. When you&amp;rsquo;re ready to publish your web site, that&amp;rsquo;s the place to start. For now, though, let&amp;rsquo;s just confirm that we have what we&amp;rsquo;d expect from a site with no content.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls -l public
total 16
-rw-r--r--  1 quoha  staff  416 Sep 29 17:02 index.xml
-rw-r--r--  1 quoha  staff  262 Sep 29 17:02 sitemap.xml
$ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Hugo created two XML files, which is standard, but there are no HTML files.&lt;/p&gt;
&lt;h3 id=&#34;test-the-new-site&#34;&gt;Test the New Site&lt;/h3&gt;
&lt;p&gt;Verify that you can run the built-in web server. It will dramatically shorten your development cycle if you do. Start it by running the &amp;ldquo;server&amp;rdquo; command. If it is successful, you will see output similar to the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo server --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms
Serving pages from /Users/quoha/Sites/zafta/public
Web Server is available at http://localhost:1313
Press Ctrl+C to stop
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Connect to the listed URL (it&amp;rsquo;s on the line that starts with &amp;ldquo;Web Server&amp;rdquo;). If everything is working correctly, you should get a page that shows the following:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;index.xml
sitemap.xml
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That&amp;rsquo;s a listing of your public/ directory. Hugo didn&amp;rsquo;t create a home page because our site has no content. When there&amp;rsquo;s no index.html file in a directory, the server lists the files in the directory, which is what you should see in your browser.&lt;/p&gt;
&lt;p&gt;Let’s go back and look at those warnings again.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
WARN: 2014/09/29 Unable to locate layout: [404.html]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That second warning is easier to explain. We haven’t created a template to be used to generate “page not found errors.” The 404 message is a topic for a separate tutorial.&lt;/p&gt;
&lt;p&gt;Now for the first warning. It is for the home page. You can tell because the first layout that it looked for was “index.html.” That’s only used by the home page.&lt;/p&gt;
&lt;p&gt;I like that the verbose flag causes Hugo to list the files that it&amp;rsquo;s searching for. For the home page, they are index.html, _default/list.html, and _default/single.html. There are some rules that we&amp;rsquo;ll cover later that explain the names and paths. For now, just remember that Hugo couldn&amp;rsquo;t find a template for the home page and it told you so.&lt;/p&gt;
&lt;p&gt;At this point, you&amp;rsquo;ve got a working installation and site that we can build upon. All that’s left is to add some content and a theme to display it.&lt;/p&gt;
&lt;h2 id=&#34;create-a-new-theme&#34;&gt;Create a New Theme&lt;/h2&gt;
&lt;p&gt;Hugo doesn&amp;rsquo;t ship with a default theme. There are a few available (I counted a dozen when I first installed Hugo) and Hugo comes with a command to create new themes.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;re going to create a new theme called &amp;ldquo;zafta.&amp;rdquo; Since the goal of this tutorial is to show you how to fill out the files to pull in your content, the theme will not contain any CSS. In other words, ugly but functional.&lt;/p&gt;
&lt;p&gt;All themes have opinions on content and layout. For example, Zafta uses &amp;ldquo;post&amp;rdquo; over &amp;ldquo;blog&amp;rdquo;. Strong opinions make for simpler templates but differing opinions make it tougher to use themes. When you build a theme, consider using the terms that other themes do.&lt;/p&gt;
&lt;h3 id=&#34;create-a-skeleton&#34;&gt;Create a Skeleton&lt;/h3&gt;
&lt;p&gt;Use the hugo &amp;ldquo;new&amp;rdquo; command to create the skeleton of a theme. This creates the directory structure and places empty files for you to fill out.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo new theme zafta

$ ls -l
total 8
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 archetypes
-rw-r--r--  1 quoha  staff   82 Sep 29 16:49 config.toml
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 content
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 layouts
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:02 public
drwxr-xr-x  2 quoha  staff   68 Sep 29 16:49 static
drwxr-xr-x  3 quoha  staff  102 Sep 29 17:31 themes

$ find themes -type f | xargs ls -l
-rw-r--r--  1 quoha  staff  1081 Sep 29 17:31 themes/zafta/LICENSE.md
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/archetypes/default.md
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/_default/list.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/_default/single.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/index.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html
-rw-r--r--  1 quoha  staff     0 Sep 29 17:31 themes/zafta/layouts/partials/header.html
-rw-r--r--  1 quoha  staff    93 Sep 29 17:31 themes/zafta/theme.toml
$ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The skeleton includes templates (the files ending in .html), license file, a description of your theme (the theme.toml file), and an empty archetype.&lt;/p&gt;
&lt;p&gt;Please take a minute to fill out the theme.toml and LICENSE.md files. They&amp;rsquo;re optional, but if you&amp;rsquo;re going to be distributing your theme, it tells the world who to praise (or blame). It&amp;rsquo;s also nice to declare the license so that people will know how they can use the theme.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/theme.toml
author = &amp;quot;michael d henderson&amp;quot;
description = &amp;quot;a minimal working template&amp;quot;
license = &amp;quot;MIT&amp;quot;
name = &amp;quot;zafta&amp;quot;
source_repo = &amp;quot;&amp;quot;
tags = [&amp;quot;tags&amp;quot;, &amp;quot;categories&amp;quot;]
:wq

## also edit themes/zafta/LICENSE.md and change
## the bit that says &amp;quot;YOUR_NAME_HERE&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that the the skeleton&amp;rsquo;s template files are empty. Don&amp;rsquo;t worry, we&amp;rsquo;ll be changing that shortly.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ find themes/zafta -name &#39;*.html&#39; | xargs ls -l
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/_default/list.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/_default/single.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/index.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/partials/footer.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/partials/header.html
$
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;update-the-configuration-file-to-use-the-theme&#34;&gt;Update the Configuration File to Use the Theme&lt;/h3&gt;
&lt;p&gt;Now that we&amp;rsquo;ve got a theme to work with, it&amp;rsquo;s a good idea to add the theme name to the configuration file. This is optional, because you can always add &amp;ldquo;-t zafta&amp;rdquo; on all your commands. I like to put it the configuration file because I like shorter command lines. If you don&amp;rsquo;t put it in the configuration file or specify it on the command line, you won&amp;rsquo;t use the template that you&amp;rsquo;re expecting to.&lt;/p&gt;
&lt;p&gt;Edit the file to add the theme, add a title for the site, and specify that all of our content will use the TOML format.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vi config.toml
theme = &amp;quot;zafta&amp;quot;
baseurl = &amp;quot;&amp;quot;
languageCode = &amp;quot;en-us&amp;quot;
title = &amp;quot;zafta - totally refreshing&amp;quot;
MetaDataFormat = &amp;quot;toml&amp;quot;
:wq

$
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;generate-the-site&#34;&gt;Generate the Site&lt;/h3&gt;
&lt;p&gt;Now that we have an empty theme, let&amp;rsquo;s generate the site again.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms
$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Did you notice that the output is different? The warning message for the home page has disappeared and we have an additional information line saying that Hugo is syncing from the theme&amp;rsquo;s directory.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s check the public/ directory to see what Hugo&amp;rsquo;s created.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ls -l public
total 16
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:56 css
-rw-r--r--  1 quoha  staff    0 Sep 29 17:56 index.html
-rw-r--r--  1 quoha  staff  407 Sep 29 17:56 index.xml
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:56 js
-rw-r--r--  1 quoha  staff  243 Sep 29 17:56 sitemap.xml
$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Notice four things:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hugo created a home page. This is the file public/index.html.&lt;/li&gt;
&lt;li&gt;Hugo created a css/ directory.&lt;/li&gt;
&lt;li&gt;Hugo created a js/ directory.&lt;/li&gt;
&lt;li&gt;Hugo claimed that it created 0 pages. It created a file and copied over static files, but didn&amp;rsquo;t create any pages. That&amp;rsquo;s because it considers a &amp;ldquo;page&amp;rdquo; to be a file created directly from a content file. It doesn&amp;rsquo;t count things like the index.html files that it creates automatically.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;the-home-page-1&#34;&gt;The Home Page&lt;/h4&gt;
&lt;p&gt;Hugo supports many different types of templates. The home page is special because it gets its own type of template and its own template file. The file, layouts/index.html, is used to generate the HTML for the home page. The Hugo documentation says that this is the only required template, but that depends. Hugo&amp;rsquo;s warning message shows that it looks for three different templates:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;WARN: 2014/09/29 Unable to locate layout: [index.html _default/list.html _default/single.html]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;If it can&amp;rsquo;t find any of these, it completely skips creating the home page. We noticed that when we built the site without having a theme installed.&lt;/p&gt;
&lt;p&gt;When Hugo created our theme, it created an empty home page template. Now, when we build the site, Hugo finds the template and uses it to generate the HTML for the home page. Since the template file is empty, the HTML file is empty, too. If the template had any rules in it, then Hugo would have used them to generate the home page.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ find . -name index.html | xargs ls -l
-rw-r--r--  1 quoha  staff  0 Sep 29 20:21 ./public/index.html
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 ./themes/zafta/layouts/index.html
$ 
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;the-magic-of-static&#34;&gt;The Magic of Static&lt;/h4&gt;
&lt;p&gt;Hugo does two things when generating the site. It uses templates to transform content into HTML and it copies static files into the site. Unlike content, static files are not transformed. They are copied exactly as they are.&lt;/p&gt;
&lt;p&gt;Hugo assumes that your site will use both CSS and JavaScript, so it creates directories in your theme to hold them. Remember opinions? Well, Hugo&amp;rsquo;s opinion is that you&amp;rsquo;ll store your CSS in a directory named css/ and your JavaScript in a directory named js/. If you don&amp;rsquo;t like that, you can change the directory names in your theme directory or even delete them completely. Hugo&amp;rsquo;s nice enough to offer its opinion, then behave nicely if you disagree.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ find themes/zafta -type d | xargs ls -ld
drwxr-xr-x  7 quoha  staff  238 Sep 29 17:38 themes/zafta
drwxr-xr-x  3 quoha  staff  102 Sep 29 17:31 themes/zafta/archetypes
drwxr-xr-x  5 quoha  staff  170 Sep 29 17:31 themes/zafta/layouts
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:31 themes/zafta/layouts/_default
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:31 themes/zafta/layouts/partials
drwxr-xr-x  4 quoha  staff  136 Sep 29 17:31 themes/zafta/static
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:31 themes/zafta/static/css
drwxr-xr-x  2 quoha  staff   68 Sep 29 17:31 themes/zafta/static/js
$ 
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;the-theme-development-cycle&#34;&gt;The Theme Development Cycle&lt;/h2&gt;
&lt;p&gt;When you&amp;rsquo;re working on a theme, you will make changes in the theme&amp;rsquo;s directory, rebuild the site, and check your changes in the browser. Hugo makes this very easy:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Purge the public/ directory.&lt;/li&gt;
&lt;li&gt;Run the built in web server in watch mode.&lt;/li&gt;
&lt;li&gt;Open your site in a browser.&lt;/li&gt;
&lt;li&gt;Update the theme.&lt;/li&gt;
&lt;li&gt;Glance at your browser window to see changes.&lt;/li&gt;
&lt;li&gt;Return to step 4.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I’ll throw in one more opinion: never work on a theme on a live site. Always work on a copy of your site. Make changes to your theme, test them, then copy them up to your site. For added safety, use a tool like Git to keep a revision history of your content and your theme. Believe me when I say that it is too easy to lose both your mind and your changes.&lt;/p&gt;
&lt;p&gt;Check the main Hugo site for information on using Git with Hugo.&lt;/p&gt;
&lt;h3 id=&#34;purge-the-public-directory&#34;&gt;Purge the public/ Directory&lt;/h3&gt;
&lt;p&gt;When generating the site, Hugo will create new files and update existing ones in the &lt;code&gt;public/&lt;/code&gt; directory. It will not delete files that are no longer used. For example, files that were created in the wrong directory or with the wrong title will remain. If you leave them, you might get confused by them later. I recommend cleaning out your site prior to generating it.&lt;/p&gt;
&lt;p&gt;Note: If you&amp;rsquo;re building on an SSD, you should ignore this. Churning on a SSD can be costly.&lt;/p&gt;
&lt;h3 id=&#34;hugos-watch-option&#34;&gt;Hugo&amp;rsquo;s Watch Option&lt;/h3&gt;
&lt;p&gt;Hugo&amp;rsquo;s &amp;ldquo;&lt;code&gt;--watch&lt;/code&gt;&amp;rdquo; option will monitor the content/ and your theme directories for changes and rebuild the site automatically.&lt;/p&gt;
&lt;h3 id=&#34;live-reload&#34;&gt;Live Reload&lt;/h3&gt;
&lt;p&gt;Hugo&amp;rsquo;s built in web server supports live reload. As pages are saved on the server, the browser is told to refresh the page. Usually, this happens faster than you can say, &amp;ldquo;Wow, that&amp;rsquo;s totally amazing.&amp;rdquo;&lt;/p&gt;
&lt;h3 id=&#34;development-commands&#34;&gt;Development Commands&lt;/h3&gt;
&lt;p&gt;Use the following commands as the basis for your workflow.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;## purge old files. hugo will recreate the public directory.
##
$ rm -rf public
##
## run hugo in watch mode
##
$ hugo server --watch --verbose
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here&amp;rsquo;s sample output showing Hugo detecting a change to the template for the home page. Once generated, the web browser automatically reloaded the page. I&amp;rsquo;ve said this before, it&amp;rsquo;s amazing.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ rm -rf public
$ hugo server --watch --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms
Watching for changes in /Users/quoha/Sites/zafta/content
Serving pages from /Users/quoha/Sites/zafta/public
Web Server is available at http://localhost:1313
Press Ctrl+C to stop
INFO: 2014/09/29 File System Event: [&amp;quot;/Users/quoha/Sites/zafta/themes/zafta/layouts/index.html&amp;quot;: MODIFY|ATTRIB]
Change detected, rebuilding site

WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 1 ms
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;update-the-home-page-template&#34;&gt;Update the Home Page Template&lt;/h2&gt;
&lt;p&gt;The home page is one of a few special pages that Hugo creates automatically. As mentioned earlier, it looks for one of three files in the theme&amp;rsquo;s layout/ directory:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;index.html&lt;/li&gt;
&lt;li&gt;_default/list.html&lt;/li&gt;
&lt;li&gt;_default/single.html&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We could update one of the default templates, but a good design decision is to update the most specific template available. That&amp;rsquo;s not a hard and fast rule (in fact, we&amp;rsquo;ll break it a few times in this tutorial), but it is a good generalization.&lt;/p&gt;
&lt;h3 id=&#34;make-a-static-home-page&#34;&gt;Make a Static Home Page&lt;/h3&gt;
&lt;p&gt;Right now, that page is empty because we don&amp;rsquo;t have any content and we don&amp;rsquo;t have any logic in the template. Let&amp;rsquo;s change that by adding some text to the template.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;$ vi themes/zafta/layouts/index.html
&lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt; 
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt; 
&amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt; 
  &amp;lt;&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt;hugo says hello!&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;p&lt;/span&gt;&amp;gt; 
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;body&lt;/span&gt;&amp;gt; 
&amp;lt;/&lt;span style=&#34;color:#f92672&#34;&gt;html&lt;/span&gt;&amp;gt; 
:wq

$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Build the web site and then verify the results.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
0 pages created 
0 tags created
0 categories created
in 2 ms

$ find public -type f -name &#39;*.html&#39; | xargs ls -l
-rw-r--r--  1 quoha  staff  78 Sep 29 21:26 public/index.html

$ cat public/index.html 
&amp;lt;!DOCTYPE html&amp;gt; 
&amp;lt;html&amp;gt; 
&amp;lt;body&amp;gt; 
  &amp;lt;p&amp;gt;hugo says hello!&amp;lt;/p&amp;gt; 
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;live-reload-1&#34;&gt;Live Reload&lt;/h4&gt;
&lt;p&gt;Note: If you&amp;rsquo;re running the server with the &lt;code&gt;--watch&lt;/code&gt; option, you&amp;rsquo;ll see different content in the file:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cat public/index.html 
&amp;lt;!DOCTYPE html&amp;gt; 
&amp;lt;html&amp;gt; 
&amp;lt;body&amp;gt; 
  &amp;lt;p&amp;gt;hugo says hello!&amp;lt;/p&amp;gt; 
&amp;lt;script&amp;gt;document.write(&#39;&amp;lt;script src=&amp;quot;http://&#39; 
        + (location.host || &#39;localhost&#39;).split(&#39;:&#39;)[0] 
    + &#39;:1313/livereload.js?mindelay=10&amp;quot;&amp;gt;&amp;lt;/&#39; 
        + &#39;script&amp;gt;&#39;)&amp;lt;/script&amp;gt;&amp;lt;/body&amp;gt; 
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When you use &lt;code&gt;--watch&lt;/code&gt;, the Live Reload script is added by Hugo. Look for live reload in the documentation to see what it does and how to disable it.&lt;/p&gt;
&lt;h3 id=&#34;build-a-dynamic-home-page&#34;&gt;Build a &amp;ldquo;Dynamic&amp;rdquo; Home Page&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;Dynamic home page?&amp;rdquo; Hugo&amp;rsquo;s a static web site generator, so this seems an odd thing to say. I mean let&amp;rsquo;s have the home page automatically reflect the content in the site every time Hugo builds it. We&amp;rsquo;ll use iteration in the template to do that.&lt;/p&gt;
&lt;h4 id=&#34;create-new-posts&#34;&gt;Create New Posts&lt;/h4&gt;
&lt;p&gt;Now that we have the home page generating static content, let&amp;rsquo;s add some content to the site. We&amp;rsquo;ll display these posts as a list on the home page and on their own page, too.&lt;/p&gt;
&lt;p&gt;Hugo has a command to generate a skeleton post, just like it does for sites and themes.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ hugo --verbose new post/first.md
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 attempting to create  post/first.md of post
INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/default.md
ERROR: 2014/09/29 Unable to Cast &amp;lt;nil&amp;gt; to map[string]interface{}

$ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;That wasn&amp;rsquo;t very nice, was it?&lt;/p&gt;
&lt;p&gt;The &amp;ldquo;new&amp;rdquo; command uses an archetype to create the post file. Hugo created an empty default archetype file, but that causes an error when there&amp;rsquo;s a theme. For me, the workaround was to create an archetypes file specifically for the post type.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/archetypes/post.md
+++
Description = &amp;quot;&amp;quot;
Tags = []
Categories = []
+++
:wq

$ find themes/zafta/archetypes -type f | xargs ls -l
-rw-r--r--  1 quoha  staff   0 Sep 29 21:53 themes/zafta/archetypes/default.md
-rw-r--r--  1 quoha  staff  51 Sep 29 21:54 themes/zafta/archetypes/post.md

$ hugo --verbose new post/first.md
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 attempting to create  post/first.md of post
INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md
INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/first.md
/Users/quoha/Sites/zafta/content/post/first.md created

$ hugo --verbose new post/second.md
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 attempting to create  post/second.md of post
INFO: 2014/09/29 curpath: /Users/quoha/Sites/zafta/themes/zafta/archetypes/post.md
INFO: 2014/09/29 creating /Users/quoha/Sites/zafta/content/post/second.md
/Users/quoha/Sites/zafta/content/post/second.md created

$ ls -l content/post
total 16
-rw-r--r--  1 quoha  staff  104 Sep 29 21:54 first.md
-rw-r--r--  1 quoha  staff  105 Sep 29 21:57 second.md

$ cat content/post/first.md 
+++
Categories = []
Description = &amp;quot;&amp;quot;
Tags = []
date = &amp;quot;2014-09-29T21:54:53-05:00&amp;quot;
title = &amp;quot;first&amp;quot;

+++
my first post

$ cat content/post/second.md 
+++
Categories = []
Description = &amp;quot;&amp;quot;
Tags = []
date = &amp;quot;2014-09-29T21:57:09-05:00&amp;quot;
title = &amp;quot;second&amp;quot;

+++
my second post

$ 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Build the web site and then verify the results.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ rm -rf public
$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 found taxonomies: map[string]string{&amp;quot;category&amp;quot;:&amp;quot;categories&amp;quot;, &amp;quot;tag&amp;quot;:&amp;quot;tags&amp;quot;}
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
2 pages created 
0 tags created
0 categories created
in 4 ms
$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The output says that it created 2 pages. Those are our new posts:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ find public -type f -name &#39;*.html&#39; | xargs ls -l
-rw-r--r--  1 quoha  staff  78 Sep 29 22:13 public/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:13 public/post/first/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:13 public/post/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:13 public/post/second/index.html
$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The new files are empty because because the templates used to generate the content are empty. The homepage doesn&amp;rsquo;t show the new content, either. We have to update the templates to add the posts.&lt;/p&gt;
&lt;h3 id=&#34;list-and-single-templates&#34;&gt;List and Single Templates&lt;/h3&gt;
&lt;p&gt;In Hugo, we have three major kinds of templates. There&amp;rsquo;s the home page template that we updated previously. It is used only by the home page. We also have &amp;ldquo;single&amp;rdquo; templates which are used to generate output for a single content file. We also have &amp;ldquo;list&amp;rdquo; templates that are used to group multiple pieces of content before generating output.&lt;/p&gt;
&lt;p&gt;Generally speaking, list templates are named &amp;ldquo;list.html&amp;rdquo; and single templates are named &amp;ldquo;single.html.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;There are three other types of templates: partials, content views, and terms. We will not go into much detail on these.&lt;/p&gt;
&lt;h3 id=&#34;add-content-to-the-homepage&#34;&gt;Add Content to the Homepage&lt;/h3&gt;
&lt;p&gt;The home page will contain a list of posts. Let&amp;rsquo;s update its template to add the posts that we just created. The logic in the template will run every time we build the site.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/index.html 
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
  {{ range first 10 .Data.Pages }}
    &amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  {{ end }}
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
:wq

$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Hugo uses the Go template engine. That engine scans the template files for commands which are enclosed between &amp;ldquo;{{&amp;rdquo; and &amp;ldquo;}}&amp;rdquo;. In our template, the commands are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;range&lt;/li&gt;
&lt;li&gt;.Title&lt;/li&gt;
&lt;li&gt;end&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The &amp;ldquo;range&amp;rdquo; command is an iterator. We&amp;rsquo;re going to use it to go through the first ten pages. Every HTML file that Hugo creates is treated as a page, so looping through the list of pages will look at every file that will be created.&lt;/p&gt;
&lt;p&gt;The &amp;ldquo;.Title&amp;rdquo; command prints the value of the &amp;ldquo;title&amp;rdquo; variable. Hugo pulls it from the front matter in the Markdown file.&lt;/p&gt;
&lt;p&gt;The &amp;ldquo;end&amp;rdquo; command signals the end of the range iterator. The engine loops back to the top of the iteration when it finds &amp;ldquo;end.&amp;rdquo; Everything between the &amp;ldquo;range&amp;rdquo; and &amp;ldquo;end&amp;rdquo; is evaluated every time the engine goes through the iteration. In this file, that would cause the title from the first ten pages to be output as heading level one.&lt;/p&gt;
&lt;p&gt;It&amp;rsquo;s helpful to remember that some variables, like .Data, are created before any output files. Hugo loads every content file into the variable and then gives the template a chance to process before creating the HTML files.&lt;/p&gt;
&lt;p&gt;Build the web site and then verify the results.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ rm -rf public
$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 found taxonomies: map[string]string{&amp;quot;tag&amp;quot;:&amp;quot;tags&amp;quot;, &amp;quot;category&amp;quot;:&amp;quot;categories&amp;quot;}
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
2 pages created 
0 tags created
0 categories created
in 4 ms
$ find public -type f -name &#39;*.html&#39; | xargs ls -l 
-rw-r--r--  1 quoha  staff  94 Sep 29 22:23 public/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:23 public/post/first/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:23 public/post/index.html
-rw-r--r--  1 quoha  staff   0 Sep 29 22:23 public/post/second/index.html
$ cat public/index.html 
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
  
    &amp;lt;h1&amp;gt;second&amp;lt;/h1&amp;gt;
  
    &amp;lt;h1&amp;gt;first&amp;lt;/h1&amp;gt;
  
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Congratulations, the home page shows the title of the two posts. The posts themselves are still empty, but let&amp;rsquo;s take a moment to appreciate what we&amp;rsquo;ve done. Your template now generates output dynamically. Believe it or not, by inserting the range command inside of those curly braces, you&amp;rsquo;ve learned everything you need to know to build a theme. All that&amp;rsquo;s really left is understanding which template will be used to generate each content file and becoming familiar with the commands for the template engine.&lt;/p&gt;
&lt;p&gt;And, if that were entirely true, this tutorial would be much shorter. There are a few things to know that will make creating a new template much easier. Don&amp;rsquo;t worry, though, that&amp;rsquo;s all to come.&lt;/p&gt;
&lt;h3 id=&#34;add-content-to-the-posts&#34;&gt;Add Content to the Posts&lt;/h3&gt;
&lt;p&gt;We&amp;rsquo;re working with posts, which are in the content/post/ directory. That means that their section is &amp;ldquo;post&amp;rdquo; (and if we don&amp;rsquo;t do something weird, their type is also &amp;ldquo;post&amp;rdquo;).&lt;/p&gt;
&lt;p&gt;Hugo uses the section and type to find the template file for every piece of content. Hugo will first look for a template file that matches the section or type name. If it can&amp;rsquo;t find one, then it will look in the _default/ directory. There are some twists that we&amp;rsquo;ll cover when we get to categories and tags, but for now we can assume that Hugo will try post/single.html, then _default/single.html.&lt;/p&gt;
&lt;p&gt;Now that we know the search rule, let&amp;rsquo;s see what we actually have available:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ find themes/zafta -name single.html | xargs ls -l
-rw-r--r--  1 quoha  staff  132 Sep 29 17:31 themes/zafta/layouts/_default/single.html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We could create a new template, post/single.html, or change the default. Since we don&amp;rsquo;t know of any other content types, let&amp;rsquo;s start with updating the default.&lt;/p&gt;
&lt;p&gt;Remember, any content that we haven&amp;rsquo;t created a template for will end up using this template. That can be good or bad. Bad because I know that we&amp;rsquo;re going to be adding different types of content and we&amp;rsquo;re going to end up undoing some of the changes we&amp;rsquo;ve made. It&amp;rsquo;s good because we&amp;rsquo;ll be able to see immediate results. It&amp;rsquo;s also good to start here because we can start to build the basic layout for the site. As we add more content types, we&amp;rsquo;ll refactor this file and move logic around. Hugo makes that fairly painless, so we&amp;rsquo;ll accept the cost and proceed.&lt;/p&gt;
&lt;p&gt;Please see the Hugo documentation on template rendering for all the details on determining which template to use. And, as the docs mention, if you&amp;rsquo;re building a single page application (SPA) web site, you can delete all of the other templates and work with just the default single page. That&amp;rsquo;s a refreshing amount of joy right there.&lt;/p&gt;
&lt;h4 id=&#34;update-the-template-file&#34;&gt;Update the Template File&lt;/h4&gt;
&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/_default/single.html 
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  {{ .Content }}
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
:wq

$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Build the web site and verify the results.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ rm -rf public
$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 found taxonomies: map[string]string{&amp;quot;tag&amp;quot;:&amp;quot;tags&amp;quot;, &amp;quot;category&amp;quot;:&amp;quot;categories&amp;quot;}
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
2 pages created 
0 tags created
0 categories created
in 4 ms

$ find public -type f -name &#39;*.html&#39; | xargs ls -l
-rw-r--r--  1 quoha  staff   94 Sep 29 22:40 public/index.html
-rw-r--r--  1 quoha  staff  125 Sep 29 22:40 public/post/first/index.html
-rw-r--r--  1 quoha  staff    0 Sep 29 22:40 public/post/index.html
-rw-r--r--  1 quoha  staff  128 Sep 29 22:40 public/post/second/index.html

$ cat public/post/first/index.html 
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;title&amp;gt;first&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;h1&amp;gt;first&amp;lt;/h1&amp;gt;
  &amp;lt;p&amp;gt;my first post&amp;lt;/p&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

$ cat public/post/second/index.html 
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
  &amp;lt;title&amp;gt;second&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;h1&amp;gt;second&amp;lt;/h1&amp;gt;
  &amp;lt;p&amp;gt;my second post&amp;lt;/p&amp;gt;

&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
$
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Notice that the posts now have content. You can go to localhost:1313/post/first to verify.&lt;/p&gt;
&lt;h3 id=&#34;linking-to-content&#34;&gt;Linking to Content&lt;/h3&gt;
&lt;p&gt;The posts are on the home page. Let&amp;rsquo;s add a link from there to the post. Since this is the home page, we&amp;rsquo;ll update its template.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/index.html
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
  {{ range first 10 .Data.Pages }}
    &amp;lt;h1&amp;gt;&amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
  {{ end }}
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Build the web site and verify the results.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ rm -rf public
$ hugo --verbose
INFO: 2014/09/29 Using config file: /Users/quoha/Sites/zafta/config.toml
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/themes/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 syncing from /Users/quoha/Sites/zafta/static/ to /Users/quoha/Sites/zafta/public/
INFO: 2014/09/29 found taxonomies: map[string]string{&amp;quot;tag&amp;quot;:&amp;quot;tags&amp;quot;, &amp;quot;category&amp;quot;:&amp;quot;categories&amp;quot;}
WARN: 2014/09/29 Unable to locate layout: [404.html theme/404.html]
0 draft content 
0 future content 
2 pages created 
0 tags created
0 categories created
in 4 ms

$ find public -type f -name &#39;*.html&#39; | xargs ls -l
-rw-r--r--  1 quoha  staff  149 Sep 29 22:44 public/index.html
-rw-r--r--  1 quoha  staff  125 Sep 29 22:44 public/post/first/index.html
-rw-r--r--  1 quoha  staff    0 Sep 29 22:44 public/post/index.html
-rw-r--r--  1 quoha  staff  128 Sep 29 22:44 public/post/second/index.html

$ cat public/index.html 
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
  
    &amp;lt;h1&amp;gt;&amp;lt;a href=&amp;quot;/post/second/&amp;quot;&amp;gt;second&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
  
    &amp;lt;h1&amp;gt;&amp;lt;a href=&amp;quot;/post/first/&amp;quot;&amp;gt;first&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
  
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;

$
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;create-a-post-listing&#34;&gt;Create a Post Listing&lt;/h3&gt;
&lt;p&gt;We have the posts displaying on the home page and on their own page. We also have a file public/post/index.html that is empty. Let&amp;rsquo;s make it show a list of all posts (not just the first ten).&lt;/p&gt;
&lt;p&gt;We need to decide which template to update. This will be a listing, so it should be a list template. Let&amp;rsquo;s take a quick look and see which list templates are available.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ find themes/zafta -name list.html | xargs ls -l
-rw-r--r--  1 quoha  staff  0 Sep 29 17:31 themes/zafta/layouts/_default/list.html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;As with the single post, we have to decide to update _default/list.html or create post/list.html. We still don&amp;rsquo;t have multiple content types, so let&amp;rsquo;s stay consistent and update the default list template.&lt;/p&gt;
&lt;h2 id=&#34;creating-top-level-pages&#34;&gt;Creating Top Level Pages&lt;/h2&gt;
&lt;p&gt;Let&amp;rsquo;s add an &amp;ldquo;about&amp;rdquo; page and display it at the top level (as opposed to a sub-level like we did with posts).&lt;/p&gt;
&lt;p&gt;The default in Hugo is to use the directory structure of the content/ directory to guide the location of the generated html in the public/ directory. Let&amp;rsquo;s verify that by creating an &amp;ldquo;about&amp;rdquo; page at the top level:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vi content/about.md 
+++
title = &amp;quot;about&amp;quot;
description = &amp;quot;about this site&amp;quot;
date = &amp;quot;2014-09-27&amp;quot;
slug = &amp;quot;about time&amp;quot;
+++

## about us

i&#39;m speechless
:wq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Generate the web site and verify the results.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ find public -name &#39;*.html&#39; | xargs ls -l
-rw-rw-r--  1 mdhender  staff   334 Sep 27 15:08 public/about-time/index.html
-rw-rw-r--  1 mdhender  staff   527 Sep 27 15:08 public/index.html
-rw-rw-r--  1 mdhender  staff   358 Sep 27 15:08 public/post/first-post/index.html
-rw-rw-r--  1 mdhender  staff     0 Sep 27 15:08 public/post/index.html
-rw-rw-r--  1 mdhender  staff   342 Sep 27 15:08 public/post/second-post/index.html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Notice that the page wasn&amp;rsquo;t created at the top level. It was created in a sub-directory named &amp;lsquo;about-time/&amp;rsquo;. That name came from our slug. Hugo will use the slug to name the generated content. It&amp;rsquo;s a reasonable default, by the way, but we can learn a few things by fighting it for this file.&lt;/p&gt;
&lt;p&gt;One other thing. Take a look at the home page.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ cat public/index.html
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;h1&amp;gt;&amp;lt;a href=&amp;quot;http://localhost:1313/post/theme/&amp;quot;&amp;gt;creating a new theme&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
    &amp;lt;h1&amp;gt;&amp;lt;a href=&amp;quot;http://localhost:1313/about-time/&amp;quot;&amp;gt;about&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
    &amp;lt;h1&amp;gt;&amp;lt;a href=&amp;quot;http://localhost:1313/post/second-post/&amp;quot;&amp;gt;second&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
    &amp;lt;h1&amp;gt;&amp;lt;a href=&amp;quot;http://localhost:1313/post/first-post/&amp;quot;&amp;gt;first&amp;lt;/a&amp;gt;&amp;lt;/h1&amp;gt;
&amp;lt;script&amp;gt;document.write(&#39;&amp;lt;script src=&amp;quot;http://&#39;
        + (location.host || &#39;localhost&#39;).split(&#39;:&#39;)[0]
		+ &#39;:1313/livereload.js?mindelay=10&amp;quot;&amp;gt;&amp;lt;/&#39;
        + &#39;script&amp;gt;&#39;)&amp;lt;/script&amp;gt;&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Notice that the &amp;ldquo;about&amp;rdquo; link is listed with the posts? That&amp;rsquo;s not desirable, so let&amp;rsquo;s change that first.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/index.html
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
  &amp;lt;h1&amp;gt;posts&amp;lt;/h1&amp;gt;
  {{ range first 10 .Data.Pages }}
    {{ if eq .Type &amp;quot;post&amp;quot;}}
      &amp;lt;h2&amp;gt;&amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
    {{ end }}
  {{ end }}

  &amp;lt;h1&amp;gt;pages&amp;lt;/h1&amp;gt;
  {{ range .Data.Pages }}
    {{ if eq .Type &amp;quot;page&amp;quot; }}
      &amp;lt;h2&amp;gt;&amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
    {{ end }}
  {{ end }}
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
:wq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Generate the web site and verify the results. The home page has two sections, posts and pages, and each section has the right set of headings and links in it.&lt;/p&gt;
&lt;p&gt;But, that about page still renders to about-time/index.html.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ find public -name &#39;*.html&#39; | xargs ls -l
-rw-rw-r--  1 mdhender  staff    334 Sep 27 15:33 public/about-time/index.html
-rw-rw-r--  1 mdhender  staff    645 Sep 27 15:33 public/index.html
-rw-rw-r--  1 mdhender  staff    358 Sep 27 15:33 public/post/first-post/index.html
-rw-rw-r--  1 mdhender  staff      0 Sep 27 15:33 public/post/index.html
-rw-rw-r--  1 mdhender  staff    342 Sep 27 15:33 public/post/second-post/index.html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Knowing that hugo is using the slug to generate the file name, the simplest solution is to change the slug. Let&amp;rsquo;s do it the hard way and change the permalink in the configuration file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vi config.toml
[permalinks]
	page = &amp;quot;/:title/&amp;quot;
	about = &amp;quot;/:filename/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Generate the web site and verify that this didn&amp;rsquo;t work. Hugo lets &amp;ldquo;slug&amp;rdquo; or &amp;ldquo;URL&amp;rdquo; override the permalinks setting in the configuration file. Go ahead and comment out the slug in content/about.md, then generate the web site to get it to be created in the right place.&lt;/p&gt;
&lt;h2 id=&#34;sharing-templates&#34;&gt;Sharing Templates&lt;/h2&gt;
&lt;p&gt;If you&amp;rsquo;ve been following along, you probably noticed that posts have titles in the browser and the home page doesn&amp;rsquo;t. That&amp;rsquo;s because we didn&amp;rsquo;t put the title in the home page&amp;rsquo;s template (layouts/index.html). That&amp;rsquo;s an easy thing to do, but let&amp;rsquo;s look at a different option.&lt;/p&gt;
&lt;p&gt;We can put the common bits into a shared template that&amp;rsquo;s stored in the themes/zafta/layouts/partials/ directory.&lt;/p&gt;
&lt;h3 id=&#34;create-the-header-and-footer-partials&#34;&gt;Create the Header and Footer Partials&lt;/h3&gt;
&lt;p&gt;In Hugo, a partial is a sugar-coated template. Normally a template reference has a path specified. Partials are different. Hugo searches for them along a TODO defined search path. This makes it easier for end-users to override the theme&amp;rsquo;s presentation.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/partials/header.html
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
	&amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
:wq

$ vi themes/zafta/layouts/partials/footer.html
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
:wq
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;update-the-home-page-template-to-use-the-partials&#34;&gt;Update the Home Page Template to Use the Partials&lt;/h3&gt;
&lt;p&gt;The most noticeable difference between a template call and a partials call is the lack of path:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ template &amp;quot;theme/partials/header.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;versus&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ partial &amp;quot;header.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Both pass in the context.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s change the home page template to use these new partials.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/index.html
{{ partial &amp;quot;header.html&amp;quot; . }}

  &amp;lt;h1&amp;gt;posts&amp;lt;/h1&amp;gt;
  {{ range first 10 .Data.Pages }}
    {{ if eq .Type &amp;quot;post&amp;quot;}}
      &amp;lt;h2&amp;gt;&amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ .Title }}&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
    {{ end }}
  {{ end }}

  &amp;lt;h1&amp;gt;pages&amp;lt;/h1&amp;gt;
  {{ range .Data.Pages }}
    {{ if or (eq .Type &amp;quot;page&amp;quot;) (eq .Type &amp;quot;about&amp;quot;) }}
      &amp;lt;h2&amp;gt;&amp;lt;a href=&amp;quot;{{ .Permalink }}&amp;quot;&amp;gt;{{ .Type }} - {{ .Title }} - {{ .RelPermalink }}&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;
    {{ end }}
  {{ end }}

{{ partial &amp;quot;footer.html&amp;quot; . }}
:wq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Generate the web site and verify the results. The title on the home page is now &amp;ldquo;your title here&amp;rdquo;, which comes from the &amp;ldquo;title&amp;rdquo; variable in the config.toml file.&lt;/p&gt;
&lt;h3 id=&#34;update-the-default-single-template-to-use-the-partials&#34;&gt;Update the Default Single Template to Use the Partials&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/_default/single.html
{{ partial &amp;quot;header.html&amp;quot; . }}

  &amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  {{ .Content }}

{{ partial &amp;quot;footer.html&amp;quot; . }}
:wq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Generate the web site and verify the results. The title on the posts and the about page should both reflect the value in the markdown file.&lt;/p&gt;
&lt;h2 id=&#34;add-date-published-to-posts&#34;&gt;Add “Date Published” to Posts&lt;/h2&gt;
&lt;p&gt;It&amp;rsquo;s common to have posts display the date that they were written or published, so let&amp;rsquo;s add that. The front matter of our posts has a variable named &amp;ldquo;date.&amp;rdquo; It&amp;rsquo;s usually the date the content was created, but let&amp;rsquo;s pretend that&amp;rsquo;s the value we want to display.&lt;/p&gt;
&lt;h3 id=&#34;add-date-published-to-the-template&#34;&gt;Add “Date Published” to the Template&lt;/h3&gt;
&lt;p&gt;We&amp;rsquo;ll start by updating the template used to render the posts. The template code will look like:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ .Date.Format &amp;quot;Mon, Jan 2, 2006&amp;quot; }}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Posts use the default single template, so we&amp;rsquo;ll change that file.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/_default/single.html
{{ partial &amp;quot;header.html&amp;quot; . }}

  &amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  &amp;lt;h2&amp;gt;{{ .Date.Format &amp;quot;Mon, Jan 2, 2006&amp;quot; }}&amp;lt;/h2&amp;gt;
  {{ .Content }}

{{ partial &amp;quot;footer.html&amp;quot; . }}
:wq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Generate the web site and verify the results. The posts now have the date displayed in them. There&amp;rsquo;s a problem, though. The &amp;ldquo;about&amp;rdquo; page also has the date displayed.&lt;/p&gt;
&lt;p&gt;As usual, there are a couple of ways to make the date display only on posts. We could do an &amp;ldquo;if&amp;rdquo; statement like we did on the home page. Another way would be to create a separate template for posts.&lt;/p&gt;
&lt;p&gt;The &amp;ldquo;if&amp;rdquo; solution works for sites that have just a couple of content types. It aligns with the principle of &amp;ldquo;code for today,&amp;rdquo; too.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s assume, though, that we&amp;rsquo;ve made our site so complex that we feel we have to create a new template type. In Hugo-speak, we&amp;rsquo;re going to create a section template.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s restore the default single template before we forget.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ mkdir themes/zafta/layouts/post
$ vi themes/zafta/layouts/_default/single.html
{{ partial &amp;quot;header.html&amp;quot; . }}

  &amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  {{ .Content }}

{{ partial &amp;quot;footer.html&amp;quot; . }}
:wq
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now we&amp;rsquo;ll update the post&amp;rsquo;s version of the single template. If you remember Hugo&amp;rsquo;s rules, the template engine will use this version over the default.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ vi themes/zafta/layouts/post/single.html
{{ partial &amp;quot;header.html&amp;quot; . }}

  &amp;lt;h1&amp;gt;{{ .Title }}&amp;lt;/h1&amp;gt;
  &amp;lt;h2&amp;gt;{{ .Date.Format &amp;quot;Mon, Jan 2, 2006&amp;quot; }}&amp;lt;/h2&amp;gt;
  {{ .Content }}

{{ partial &amp;quot;footer.html&amp;quot; . }}
:wq

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that we removed the date logic from the default template and put it in the post template. Generate the web site and verify the results. Posts have dates and the about page doesn&amp;rsquo;t.&lt;/p&gt;
&lt;h3 id=&#34;dont-repeat-yourself&#34;&gt;Don&amp;rsquo;t Repeat Yourself&lt;/h3&gt;
&lt;p&gt;DRY is a good design goal and Hugo does a great job supporting it. Part of the art of a good template is knowing when to add a new template and when to update an existing one. While you&amp;rsquo;re figuring that out, accept that you&amp;rsquo;ll be doing some refactoring. Hugo makes that easy and fast, so it&amp;rsquo;s okay to delay splitting up a template.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Migrate to Hugo from Jekyll</title>
      <link>https://sjtug.org/post/migrate-from-jekyll/</link>
      <pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/migrate-from-jekyll/</guid>
      <description>&lt;h2 id=&#34;move-static-content-to-static&#34;&gt;Move static content to &lt;code&gt;static&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Jekyll has a rule that any directory not starting with &lt;code&gt;_&lt;/code&gt; will be copied as-is to the &lt;code&gt;_site&lt;/code&gt; output. Hugo keeps all static content under &lt;code&gt;static&lt;/code&gt;. You should therefore move it all there.
With Jekyll, something that looked like&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/
    ▾ images/
        logo.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;should become&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;▾ &amp;lt;root&amp;gt;/
    ▾ static/
        ▾ images/
            logo.png
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as &lt;code&gt;CNAME&lt;/code&gt;) to be moved to &lt;code&gt;static&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;create-your-hugo-configuration-file&#34;&gt;Create your Hugo configuration file&lt;/h2&gt;
&lt;p&gt;Hugo can read your configuration as JSON, YAML or TOML. Hugo supports parameters custom configuration too. Refer to the &lt;a href=&#34;https://sjtug.org/overview/configuration/&#34;&gt;Hugo configuration documentation&lt;/a&gt; for details.&lt;/p&gt;
&lt;h2 id=&#34;set-your-configuration-publish-folder-to-_site&#34;&gt;Set your configuration publish folder to &lt;code&gt;_site&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;The default is for Jekyll to publish to &lt;code&gt;_site&lt;/code&gt; and for Hugo to publish to &lt;code&gt;public&lt;/code&gt;. If, like me, you have &lt;a href=&#34;http://blog.blindgaenger.net/generate_github_pages_in_a_submodule.html&#34;&gt;&lt;code&gt;_site&lt;/code&gt; mapped to a git submodule on the &lt;code&gt;gh-pages&lt;/code&gt; branch&lt;/a&gt;, you&amp;rsquo;ll want to do one of two alternatives:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Change your submodule to point to map &lt;code&gt;gh-pages&lt;/code&gt; to public instead of &lt;code&gt;_site&lt;/code&gt; (recommended).&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; git submodule deinit _site
 git rm _site
 git submodule add -b gh-pages git@github.com:your-username/your-repo.git public
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Or, change the Hugo configuration to use &lt;code&gt;_site&lt;/code&gt; instead of &lt;code&gt;public&lt;/code&gt;.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt; {
     ..
     &amp;quot;publishdir&amp;quot;: &amp;quot;_site&amp;quot;,
     ..
 }
&lt;/code&gt;&lt;/pre&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;convert-jekyll-templates-to-hugo-templates&#34;&gt;Convert Jekyll templates to Hugo templates&lt;/h2&gt;
&lt;p&gt;That&amp;rsquo;s the bulk of the work right here. The documentation is your friend. You should refer to &lt;a href=&#34;http://jekyllrb.com/docs/templates/&#34;&gt;Jekyll&amp;rsquo;s template documentation&lt;/a&gt; if you need to refresh your memory on how you built your blog and &lt;a href=&#34;https://sjtug.org/layout/templates/&#34;&gt;Hugo&amp;rsquo;s template&lt;/a&gt; to learn Hugo&amp;rsquo;s way.&lt;/p&gt;
&lt;p&gt;As a single reference data point, converting my templates for &lt;a href=&#34;http://heyitsalex.net/&#34;&gt;heyitsalex.net&lt;/a&gt; took me no more than a few hours.&lt;/p&gt;
&lt;h2 id=&#34;convert-jekyll-plugins-to-hugo-shortcodes&#34;&gt;Convert Jekyll plugins to Hugo shortcodes&lt;/h2&gt;
&lt;p&gt;Jekyll has &lt;a href=&#34;http://jekyllrb.com/docs/plugins/&#34;&gt;plugins&lt;/a&gt;; Hugo has &lt;a href=&#34;https://sjtug.org/doc/shortcodes/&#34;&gt;shortcodes&lt;/a&gt;. It&amp;rsquo;s fairly trivial to do a port.&lt;/p&gt;
&lt;h3 id=&#34;implementation&#34;&gt;Implementation&lt;/h3&gt;
&lt;p&gt;As an example, I was using a custom &lt;a href=&#34;https://github.com/alexandre-normand/alexandre-normand/blob/74bb12036a71334fdb7dba84e073382fc06908ec/_plugins/image_tag.rb&#34;&gt;&lt;code&gt;image_tag&lt;/code&gt;&lt;/a&gt; plugin to generate figures with caption when running Jekyll. As I read about shortcodes, I found Hugo had a nice built-in shortcode that does exactly the same thing.&lt;/p&gt;
&lt;p&gt;Jekyll&amp;rsquo;s plugin:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-ruby&#34; data-lang=&#34;ruby&#34;&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;module&lt;/span&gt; Jekyll
      &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ImageTag&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Liquid&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Tag&lt;/span&gt;
        @url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
        @caption &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
        @class &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
        @link &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;nil&lt;/span&gt;
        &lt;span style=&#34;color:#e6db74&#34;&gt;//&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Patterns&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;IMAGE_URL_WITH_CLASS_AND_CAPTION&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/(\w+)(\s+)((https?:\/\/|\/)(\S+))(\s+)&amp;#34;(.*?)&amp;#34;(\s+)-&amp;gt;((https?:\/\/|\/)(\S+))(\s*)/i&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;IMAGE_URL_WITH_CAPTION&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/((https?:\/\/|\/)(\S+))(\s+)&amp;#34;(.*?)&amp;#34;/i&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;IMAGE_URL_WITH_CLASS&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/(\w+)(\s+)((https?:\/\/|\/)(\S+))/i&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;IMAGE_URL&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;/((https?:\/\/|\/)(\S+))/i&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initialize&lt;/span&gt;(tag_name, markup, tokens)
          &lt;span style=&#34;color:#66d9ef&#34;&gt;super&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; markup &lt;span style=&#34;color:#f92672&#34;&gt;=~&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;IMAGE_URL_WITH_CLASS_AND_CAPTION_AND_LINK&lt;/span&gt;
            @class   &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $1
            @url     &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $3
            @caption &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $7
            @link &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $9
          &lt;span style=&#34;color:#66d9ef&#34;&gt;elsif&lt;/span&gt; markup &lt;span style=&#34;color:#f92672&#34;&gt;=~&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;IMAGE_URL_WITH_CLASS_AND_CAPTION&lt;/span&gt;
            @class   &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $1
            @url     &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $3
            @caption &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $7
          &lt;span style=&#34;color:#66d9ef&#34;&gt;elsif&lt;/span&gt; markup &lt;span style=&#34;color:#f92672&#34;&gt;=~&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;IMAGE_URL_WITH_CAPTION&lt;/span&gt;
            @url     &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $1
            @caption &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $5
          &lt;span style=&#34;color:#66d9ef&#34;&gt;elsif&lt;/span&gt; markup &lt;span style=&#34;color:#f92672&#34;&gt;=~&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;IMAGE_URL_WITH_CLASS&lt;/span&gt;
            @class &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $1
            @url   &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $3
          &lt;span style=&#34;color:#66d9ef&#34;&gt;elsif&lt;/span&gt; markup &lt;span style=&#34;color:#f92672&#34;&gt;=~&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;IMAGE_URL&lt;/span&gt;
            @url &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $1
          &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;render&lt;/span&gt;(context)
          &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; @class
            source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;figure class=&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;@class&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;gt;&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
            source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;figure&amp;gt;&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; @link
            source &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;a href=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;@link&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt;&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
          source &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;img src=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;@url&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;gt;&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; @link
            source &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;/a&amp;gt;&amp;#34;&lt;/span&gt;
          &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
          source &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;figcaption&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;@caption&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;lt;/figcaption&amp;gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; @caption
          source &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;/figure&amp;gt;&amp;#34;&lt;/span&gt;
          source
        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
      &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;Liquid&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Template&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;register_tag(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;image&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Jekyll&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ImageTag&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;is written as this Hugo shortcode:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!-- image --&amp;gt;
&amp;lt;figure {{ with .Get &amp;quot;class&amp;quot; }}class=&amp;quot;{{.}}&amp;quot;{{ end }}&amp;gt;
    {{ with .Get &amp;quot;link&amp;quot;}}&amp;lt;a href=&amp;quot;{{.}}&amp;quot;&amp;gt;{{ end }}
        &amp;lt;img src=&amp;quot;{{ .Get &amp;quot;src&amp;quot; }}&amp;quot; {{ if or (.Get &amp;quot;alt&amp;quot;) (.Get &amp;quot;caption&amp;quot;) }}alt=&amp;quot;{{ with .Get &amp;quot;alt&amp;quot;}}{{.}}{{else}}{{ .Get &amp;quot;caption&amp;quot; }}{{ end }}&amp;quot;{{ end }} /&amp;gt;
    {{ if .Get &amp;quot;link&amp;quot;}}&amp;lt;/a&amp;gt;{{ end }}
    {{ if or (or (.Get &amp;quot;title&amp;quot;) (.Get &amp;quot;caption&amp;quot;)) (.Get &amp;quot;attr&amp;quot;)}}
    &amp;lt;figcaption&amp;gt;{{ if isset .Params &amp;quot;title&amp;quot; }}
        {{ .Get &amp;quot;title&amp;quot; }}{{ end }}
        {{ if or (.Get &amp;quot;caption&amp;quot;) (.Get &amp;quot;attr&amp;quot;)}}&amp;lt;p&amp;gt;
        {{ .Get &amp;quot;caption&amp;quot; }}
        {{ with .Get &amp;quot;attrlink&amp;quot;}}&amp;lt;a href=&amp;quot;{{.}}&amp;quot;&amp;gt; {{ end }}
            {{ .Get &amp;quot;attr&amp;quot; }}
        {{ if .Get &amp;quot;attrlink&amp;quot;}}&amp;lt;/a&amp;gt; {{ end }}
        &amp;lt;/p&amp;gt; {{ end }}
    &amp;lt;/figcaption&amp;gt;
    {{ end }}
&amp;lt;/figure&amp;gt;
&amp;lt;!-- image --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;usage&#34;&gt;Usage&lt;/h3&gt;
&lt;p&gt;I simply changed:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{% image full http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg &amp;quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were &amp;quot;having fun&amp;quot; and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.&amp;quot; -&amp;gt;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/ %}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;to this (this example uses a slightly extended version named &lt;code&gt;fig&lt;/code&gt;, different than the built-in &lt;code&gt;figure&lt;/code&gt;):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{% fig class=&amp;quot;full&amp;quot; src=&amp;quot;http://farm5.staticflickr.com/4136/4829260124_57712e570a_o_d.jpg&amp;quot; title=&amp;quot;One of my favorite touristy-type photos. I secretly waited for the good light while we were having fun and took this. Only regret: a stupid pole in the top-left corner of the frame I had to clumsily get rid of at post-processing.&amp;quot; link=&amp;quot;http://www.flickr.com/photos/alexnormand/4829260124/in/set-72157624547713078/&amp;quot; %}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As a bonus, the shortcode named parameters are, arguably, more readable.&lt;/p&gt;
&lt;h2 id=&#34;finishing-touches&#34;&gt;Finishing touches&lt;/h2&gt;
&lt;h3 id=&#34;fix-content&#34;&gt;Fix content&lt;/h3&gt;
&lt;p&gt;Depending on the amount of customization that was done with each post with Jekyll, this step will require more or less effort. There are no hard and fast rules here except that &lt;code&gt;hugo server --watch&lt;/code&gt; is your friend. Test your changes and fix errors as needed.&lt;/p&gt;
&lt;h3 id=&#34;clean-up&#34;&gt;Clean up&lt;/h3&gt;
&lt;p&gt;You&amp;rsquo;ll want to remove the Jekyll configuration at this point. If you have anything else that isn&amp;rsquo;t used, delete it.&lt;/p&gt;
&lt;h2 id=&#34;a-practical-example-in-a-diff&#34;&gt;A practical example in a diff&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://heyitsalex.net/&#34;&gt;Hey, it&amp;rsquo;s Alex&lt;/a&gt; was migrated in less than a &lt;em&gt;father-with-kids day&lt;/em&gt; from Jekyll to Hugo. You can see all the changes (and screw-ups) by looking at this &lt;a href=&#34;https://github.com/alexandre-normand/alexandre-normand/compare/869d69435bd2665c3fbf5b5c78d4c22759d7613a...b7f6605b1265e83b4b81495423294208cc74d610&#34;&gt;diff&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>致远集群维护公告</title>
      <link>https://sjtug.org/post/mirror-news/2025-10-08-zhiyuan-system-maintainance/</link>
      <pubDate>Wed, 08 Oct 2025 00:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2025-10-08-zhiyuan-system-maintainance/</guid>
      <description>&lt;p&gt;各位镜像站用户，&lt;/p&gt;
&lt;p&gt;致远镜像站将在2025年10月10日（UTC+8）晚上11点至次日凌晨5点进行维护，内容为系统升级与日常维护，届时致远镜像站上的镜像可能出现短暂的不可用。&lt;/p&gt;
&lt;p&gt;本次维护的影响范围是 mirrors.sjtug.sjtu.edu.cn 上的所有软件源。&lt;/p&gt;
&lt;p&gt;我们对给您带来的不便表示歉意，感谢您的理解与支持。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>思源集群维护公告</title>
      <link>https://sjtug.org/post/mirror-news/2025-09-27-dns-migration/</link>
      <pubDate>Sat, 27 Sep 2025 00:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2025-09-27-dns-migration/</guid>
      <description>&lt;p&gt;思源镜像站将在2025年9月28日（UTC+8）上午10点至下午5点进行维护，内容为DNS解析切换和存储优化，届时思源镜像站上的镜像可能出现短暂不可用。&lt;/p&gt;
&lt;p&gt;本次维护的影响范围是 mirror.sjtu.edu.cn 上的所有软件源。&lt;/p&gt;
&lt;p&gt;我们对给您带来的不便表示歉意，感谢您的理解与支持。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>移除 Intel Extension for Pytorch 镜像</title>
      <link>https://sjtug.org/post/mirror-news/2025-08-31-remove-intel-extension-for-pytorch/</link>
      <pubDate>Sun, 31 Aug 2025 00:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2025-08-31-remove-intel-extension-for-pytorch/</guid>
      <description>&lt;p&gt;由于 Intel Extension for Pytorch 已经在 PyPI 以及 Intel 托管存储提供预构建轮子，我们已重定向该镜像至 Intel 托管存储，并将在一段时间后彻底移除。&lt;/p&gt;
&lt;p&gt;请目前使用该镜像的用户迁移至 Intel 托管存储（参考 &lt;a href=&#34;https://pytorch-extension.intel.com&#34;&gt;https://pytorch-extension.intel.com&lt;/a&gt;），或使用 SJTUG 提供的 PyPI 镜像源（参考 &lt;a href=&#34;https://mirror.sjtu.edu.cn/docs/pypi/web/simple&#34;&gt;https://mirror.sjtu.edu.cn/docs/pypi/web/simple&lt;/a&gt;）。&lt;/p&gt;
&lt;p&gt;如有任何问题或建议，请随时联系我们。感谢您的支持与关注！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>思源镜像站存储集群维护</title>
      <link>https://sjtug.org/post/mirror-news/2025-07-25-storage-migration/</link>
      <pubDate>Sat, 26 Jul 2025 00:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2025-07-25-storage-migration/</guid>
      <description>&lt;p&gt;各位 SJTUG 镜像站用户，&lt;/p&gt;
&lt;p&gt;为提升镜像站服务质量，保证镜像站服务稳定性，SJTUG 思源站点的存储集群将于下周一（2025年7月28日 UTC+8）进行供电优化等维护工作。&lt;/p&gt;
&lt;p&gt;迁移期间，SJTUG 思源站点上的所有磁盘存储的软件源将处于不可用状态，维护时间段暂定于2025年7月28日中午12:00至次日凌晨6:00（UTC+8）。&lt;/p&gt;
&lt;p&gt;镜像站维护团队将在维护工作结束后尽快恢复服务，期间部分镜像源将重定向到 &lt;a href=&#34;https://mirrorz.org&#34;&gt;mirrorz.org&lt;/a&gt; 处理，感谢 &lt;a href=&#34;https://mirrorz.org&#34;&gt;mirrorz.org&lt;/a&gt; 的协助。&lt;/p&gt;
&lt;p&gt;我们对给您带来的不便表示歉意，感谢您的理解与支持。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>思源镜像站存储故障</title>
      <link>https://sjtug.org/post/mirror-news/2025-05-10-storage-fault/</link>
      <pubDate>Sat, 10 May 2025 18:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2025-05-10-storage-fault/</guid>
      <description>&lt;p&gt;各位 SJTUG 镜像站用户，&lt;/p&gt;
&lt;p&gt;由于思源镜像站主要存储发生故障，SJTUG 思源站点上的所有软件源处于不可用状态。镜像站维护团队正积极调查故障原因，目前判断需要下周一（2025年5月12日 UTC+8）进入机房行进一步排查，最早需要40个小时后恢复。&lt;/p&gt;
&lt;p&gt;我们正采取临时措施，将部分镜像源重定向到 &lt;a href=&#34;https://mirrorz.org&#34;&gt;mirrorz.org&lt;/a&gt; 处理，感谢 &lt;a href=&#34;https://mirrorz.org&#34;&gt;mirrorz&lt;/a&gt; 的协助。&lt;/p&gt;
&lt;p&gt;本次故障的影响范围是 mirror.sjtu.edu.cn 上存储于 &lt;code&gt;data55T&lt;/code&gt; 磁盘中的所有软件源。&lt;/p&gt;
&lt;p&gt;我们对给您带来的不便表示歉意，感谢您的理解与支持。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>思源镜像站存储故障</title>
      <link>https://sjtug.org/post/mirror-news/2025-03-25-storage-fault/</link>
      <pubDate>Tue, 25 Mar 2025 18:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2025-03-25-storage-fault/</guid>
      <description>&lt;p&gt;各位 SJTUG 镜像站用户，&lt;/p&gt;
&lt;p&gt;由于思源镜像站主要存储发生故障，SJTUG 思源站点上的所有软件源处于不可用状态。镜像站维护团队正积极调查故障原因，目前判断需要明天（2025年3月26日 UTC+8）进入机房行进一步排查，最早需要16个小时后恢复。&lt;/p&gt;
&lt;p&gt;我们正采取临时措施，将部分镜像源重定向到 &lt;a href=&#34;https://mirrorz.org&#34;&gt;mirrorz.org&lt;/a&gt; 处理，感谢 &lt;a href=&#34;https://mirrorz.org&#34;&gt;mirrorz&lt;/a&gt; 的协助。&lt;/p&gt;
&lt;p&gt;本次故障的影响范围是 mirror.sjtu.edu.cn 上存储的所有软件源。&lt;/p&gt;
&lt;p&gt;我们对给您带来的不便表示歉意，感谢您的理解与支持。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像站将于11月28日凌晨0时维护</title>
      <link>https://sjtug.org/post/mirror-news/2024-11-28-maintain/</link>
      <pubDate>Wed, 27 Nov 2024 04:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2024-11-28-maintain/</guid>
      <description>&lt;p&gt;各位 SJTUG 镜像站用户，&lt;/p&gt;
&lt;p&gt;由于思源镜像站存储架构变化，SJTUG 镜像站预计于 2024年11月28日凌晨0时至4时 UTC+8 进行架构迁移，届时服务将可能出现短时间的不可用，希望大家予以谅解。&lt;/p&gt;
&lt;p&gt;本次维护的影响范围是 mirror.sjtu.edu.cn 上存储的所有软件源。&lt;/p&gt;
&lt;p&gt;感谢您对 SJTUG 镜像站的关注。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>移除废弃的 Homebrew 分支镜像 &amp; 维护简报</title>
      <link>https://sjtug.org/post/mirror-news/2024-07-10-remove-deprecated-brew-casks/</link>
      <pubDate>Wed, 10 Jul 2024 03:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2024-07-10-remove-deprecated-brew-casks/</guid>
      <description>&lt;p&gt;在 5 月我们曾通知您，我们将移除 Linuxbrew Core 镜像。现在由于 Homebrew Cask Drivers, Homebrew Cask Fonts 及 Homebrew Cask Versions 已经被合并入 Homebrew Cask，我们决定同时移除这些镜像。若您的 Linuxbrew 在近 1 年内未更新过，可能会受到影响。&lt;/p&gt;
&lt;p&gt;另，近期我们对镜像进行了以下维护操作：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修复了 CVE-2024-6387&lt;/li&gt;
&lt;li&gt;将 Zhiyuan 服务器从 Fedora 38 升级至 Fedora 40&lt;/li&gt;
&lt;li&gt;新增 &lt;a href=&#34;https://mirror.sjtu.edu.cn/racket/&#34;&gt;racket 安装器镜像&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;新增 &lt;a href=&#34;https://mirror.sjtu.edu.cn/github/intel-extension-for-pytorch&#34;&gt;intel-extension-for-pytorch&lt;/a&gt; 镜像 (&lt;a href=&#34;https://github.com/sjtug/mirror-requests/issues/364&#34;&gt;mirror-requests#364&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;修复 ghcup 签名问题 (&lt;a href=&#34;https://github.com/sjtug/mirror-requests/issues/365&#34;&gt;mirror-requests#365&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如有任何问题或建议，请随时联系我们。感谢您的支持与关注！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像站将于7月4日上午4时维护</title>
      <link>https://sjtug.org/post/mirror-news/2024-07-04-maintain/</link>
      <pubDate>Tue, 02 Jul 2024 04:30:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2024-07-04-maintain/</guid>
      <description>&lt;p&gt;SJTUG 软件源镜像站的两台服务器将于 2024年7月4日周二 上午1时 UTC+8 进行服务器架构升级，停机窗口详见下文。届时服务将会出现短时间的不可用，希望大家予以谅解。&lt;/p&gt;
&lt;p&gt;本次维护的影响范围是 mirrors.sjtug.sjtu.edu.cn 和 mirror.sjtu.edu.cn 上存储的所有软件源。&lt;/p&gt;
&lt;p&gt;本次维护将会对服务器上的镜像站软件架构进行升级，以提供更好的使用体验。升级内容包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将致远镜像服务器的操作系统从 Fedora 38 升级到 Fedora 40。&lt;/li&gt;
&lt;li&gt;对思源镜像服务器的 Debian 12 操作系统应用内核更新。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本次维护的服务不可用时间窗口预计如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2024年7月4日 上午1时起，我们将对致远镜像站 (mirrors.sjtug.sjtu.edu.cn) 进行主版本升级。系统升级将在 2 小时内完成，期间将停止服务。如出现兼容性问题，可能会中断更长时间。&lt;/li&gt;
&lt;li&gt;2023年7月4日 上午1时起，我们将对思源镜像站 (mirror.sjtu.edu.cn) 进行内核升级。系统升级将在 30 分钟内完成，期间将停止服务。如出现兼容性问题，可能会中断更长时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢您对 SJTUG 镜像站的关注。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像站自6月3日起公网服务不可用</title>
      <link>https://sjtug.org/post/mirror-news/2024-06-03-maintain/</link>
      <pubDate>Mon, 03 Jun 2024 00:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2024-06-03-maintain/</guid>
      <description>&lt;p&gt;由于上游校园主干网络临时维护，SJTUG 软件源镜像站 (mirror.sjtu.edu.cn 及 mirrors.sjtug.sjtu.edu.cn) 目前公网服务中断。&lt;/p&gt;
&lt;p&gt;本次服务中断的影响范围是 mirror.sjtu.edu.cn 及 mirrors.sjtug.sjtu.edu.cn 上存储的所有软件源。&lt;/p&gt;
&lt;p&gt;本次维护的服务不可用时间窗口预计如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2024年6月3日 (周一) 至 2024年6月6日（周四）：上游校园主干网络维护&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢您对 SJTUG 镜像站的关注。&lt;/p&gt;
&lt;p&gt;2024年6月6日更新：维护已完成，镜像站已恢复服务。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>移除 Linuxbrew Core</title>
      <link>https://sjtug.org/post/mirror-news/2024-05-30-remove-linuxbrew-core/</link>
      <pubDate>Thu, 30 May 2024 04:30:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2024-05-30-remove-linuxbrew-core/</guid>
      <description>&lt;p&gt;由于 Linuxbrew Core 在 2021 年已经被合并入 Homebrew Core，且上游仓库在 3 个月前已经删除，我们决定移除 Linuxbrew Core 镜像。若您的 Linuxbrew 在近 3 年内未更新过，可能会受到影响。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>新增若干新镜像</title>
      <link>https://sjtug.org/post/mirror-news/2024-03-13-new-mirrors/</link>
      <pubDate>Wed, 13 Mar 2024 15:30:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2024-03-13-new-mirrors/</guid>
      <description>&lt;p&gt;近两年来，我站添加了若干新的仓库，以更好地满足老师与同学们的学术、工作及生活需求&lt;/p&gt;
&lt;p&gt;Aug 2021 - 2022:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;debian-ports (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/281&#34;&gt;PR #281&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;homebrew-bundle.git (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/288&#34;&gt;PR #288&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2023 - 2024:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;crates.io sparse index (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/358&#34;&gt;PR #358&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;opencloudos&lt;/li&gt;
&lt;li&gt;termux (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/386&#34;&gt;PR #386&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;openkylin (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/385&#34;&gt;PR #385&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;immortalwrt (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/392&#34;&gt;PR #392&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;pop-os (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/394&#34;&gt;PR #394&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;packman (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/398&#34;&gt;PR #398&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;debian-cdimage (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/403&#34;&gt;PR #403&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;leopard.sh (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/414&#34;&gt;PR #414&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;anthon (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/419&#34;&gt;PR #419&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;endeavouros (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/426&#34;&gt;PR #426&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;elan (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/427&#34;&gt;PR #427&lt;/a&gt;) &amp;amp; lean4 (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/428&#34;&gt;PR #428&lt;/a&gt;, 在此感谢 &lt;a href=&#34;https://github.com/alissa-tung&#34;&gt;@alissa-tung&lt;/a&gt; (&lt;a href=&#34;https://github.com/timechess&#34;&gt;@timechess&lt;/a&gt; 的协助！)&lt;/li&gt;
&lt;li&gt;Office Tool Plus (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/444&#34;&gt;PR #444&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;nspawn (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/446&#34;&gt;PR #446&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2024 -:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;alhp (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/459&#34;&gt;PR #459&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;registry.k8s.io (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/461&#34;&gt;PR #461&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;bmclapi (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/462&#34;&gt;PR #462&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;同时，我们也适当下架了一些利用率较低或已被废弃的镜像&lt;/p&gt;
&lt;p&gt;2022 - 2023:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;linuxbrew-bottles (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/311&#34;&gt;PR #311&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;download.flutter.io (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/332&#34;&gt;PR #332&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;mageia (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/333&#34;&gt;PR #333&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2024 -:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;k8s.gcr.io (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/461&#34;&gt;PR #461&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;scientificlinux (&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/457&#34;&gt;PR #457&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外，我们也对架构进行了综合升级&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将更多仓库接入对象存储，依托交大云对象存储实现扩容与更灵活高效的服务 (&lt;a href=&#34;https://github.com/sjtug/rsync-sjtug&#34;&gt;rsync-sjtug&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;支持 mirrorz，为用户提供更智能的分流及更友好的帮助服务 (&lt;a href=&#34;https://mirrorz.org/&#34;&gt;mirrorz&lt;/a&gt; 及 &lt;a href=&#34;https://help.mirrors.cernet.edu.cn/&#34;&gt;mirrorz-help&lt;/a&gt;，在此感谢 &lt;a href=&#34;https://github.com/ZenithalHourlyRate&#34;&gt;@ZenithalHourlyRate&lt;/a&gt; 及 &lt;a href=&#34;https://github.com/taoky&#34;&gt;@taoky&lt;/a&gt; 的协助)&lt;/li&gt;
&lt;li&gt;Siyuan 镜像服务器升级至 Debian 12，Zhiyuan 镜像服务器升级至 Fedora 38&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欢迎大家使用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>新增 registry.k8s.io &amp; 废弃 k8s.gcr.io</title>
      <link>https://sjtug.org/post/mirror-news/2024-02-16-k8s-registry/</link>
      <pubDate>Fri, 16 Feb 2024 04:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2024-02-16-k8s-registry/</guid>
      <description>&lt;p&gt;kubernetes 官方在约一年前退役了 k8s.gcr.io，并将仓库迁移至 registry.k8s.io。如今，我们开始对 registry.k8s.io 的同步，并在 mirrors.sjtug.sjtu.edu.cn/registry.k8s.io 及 registry-k8s-io.mirrors.sjtug.sjtu.edu.cn 两个位置提供服务。&lt;/p&gt;
&lt;p&gt;为兼容现有用户，mirrors.sjtug.sjtu.edu.cn/k8s.gcr.io 及 k8s-gcr-io.mirrors.sjtug.sjtu.edu.cn 将被重定向至新位置，旧仓库的使用将不会受到影响。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>移除 scientific linux</title>
      <link>https://sjtug.org/post/mirror-news/2024-02-08-remove-scientific/</link>
      <pubDate>Thu, 08 Feb 2024 22:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2024-02-08-remove-scientific/</guid>
      <description>&lt;p&gt;由于 scientific linux 已经停止支持多年，近一个月未见活跃用户，我们决定将其下线。所有指向 scientific 镜像的流量已被重定向至中国科学技术大学开源镜像站 (&lt;a href=&#34;https://mirrors.ustc.edu.cn/&#34;&gt;https://mirrors.ustc.edu.cn/&lt;/a&gt;)。在此感谢中科大开源镜像站的协助！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>致远服务器失去同步 &amp; 重定向 julia 镜像</title>
      <link>https://sjtug.org/post/mirror-news/2023-12-19-redirect-julia/</link>
      <pubDate>Tue, 19 Dec 2023 02:20:00 -0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2023-12-19-redirect-julia/</guid>
      <description>&lt;p&gt;由于致远服务器 (mirrors.sjtug.sjtu.edu.cn) 存储盘满，其上所有仓库于 2 天前同步中断。我们正在释放存储空间，受影响的仓库预计会在 12 小时内恢复同步。&lt;/p&gt;
&lt;p&gt;另，由于 julia 仓库占用空间极大 (6TB)，用户量较低，我们正在考虑将其同步方式转换为反向代理+缓存。在转换期间，所有指向 julia 镜像的流量将会被重定向至北京大学开源镜像站 (&lt;a href=&#34;https://mirrors.pku.edu.cn/&#34;&gt;https://mirrors.pku.edu.cn/&lt;/a&gt;)。在此感谢北京大学开源镜像站的协助！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>思源镜像站 11/03 服务异常中断</title>
      <link>https://sjtug.org/post/mirror-news/2023-11-03-outage/</link>
      <pubDate>Thu, 02 Nov 2023 12:08:00 -0700</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2023-11-03-outage/</guid>
      <description>&lt;p&gt;由于上游交大云服务故障，思源镜像站 (mirror.sjtu.edu.cn) 于 11/03 1:12 至 05:07 服务中断，总故障时间 3 小时 55 分钟。在此过程中，致远镜像站 (mirrors.sjtug.sjtu.edu.cn) 的部分存储服务也受到影响导致无法访问。现在本站所有服务已经恢复正常。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像站将于9月19-20日上午4时维护</title>
      <link>https://sjtug.org/post/mirror-news/2023-09-19-maintain/</link>
      <pubDate>Tue, 12 Sep 2023 17:30:00 -0700</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2023-09-19-maintain/</guid>
      <description>&lt;p&gt;SJTUG 软件源镜像站的两台服务器将分别于 2023年9月19日周二 上午4时 UTC+8 及 2023年9月20日周三 上午4时 UTC+8 进行服务器架构升级，停机窗口详见下文。届时服务将会出现短时间的不可用，希望大家予以谅解。&lt;/p&gt;
&lt;p&gt;本次维护的影响范围是 mirrors.sjtug.sjtu.edu.cn 和 mirror.sjtu.edu.cn 上存储的所有软件源。&lt;/p&gt;
&lt;p&gt;本次维护将会对服务器上的镜像站软件架构进行升级，以提供更好的使用体验。升级内容包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将致远镜像服务器的操作系统从 Fedora 37 升级到 Fedora 38。&lt;/li&gt;
&lt;li&gt;将思源镜像服务器的操作系统从 Debian 11 升级到 Debian 12。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本次维护的服务不可用时间窗口预计如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2023年9月19日 上午4时起，我们将对致远镜像站 (mirrors.sjtug.sjtu.edu.cn) 进行主版本升级。系统升级将在 2 小时内完成，期间将停止服务。如出现兼容性问题，可能会中断更长时间。&lt;/li&gt;
&lt;li&gt;2023年9月20日 上午4时起，我们将对思源镜像站 (mirror.sjtu.edu.cn) 进行主版本升级。系统升级将在 2 小时内完成，期间将停止服务。如出现兼容性问题，可能会中断更长时间。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢您对 SJTUG 镜像站的关注。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG x 交大超算 6 月吃吃喝喝与技术分享</title>
      <link>https://sjtug.org/post/2023-06-19-hpc-llm-train/</link>
      <pubDate>Mon, 19 Jun 2023 21:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2023-06-19-hpc-llm-train/</guid>
      <description>&lt;p&gt;本周一 (19日) 14:00 在电院E咖三楼进行的 SJTUG 吃吃喝喝和技术分享活动圆满结束～&lt;/p&gt;
&lt;p&gt;本次分享的嘉宾是方禹舜同学，题目是“面向超算集群的大语言模型并行训练初探”，活动中探讨了如何突破计算和内存资源的限制，采用并行化方法训练以大语言模型为首的各类大规模模型，并简短介绍了上海交通大学学生超算队的活动及相关超算赛事。&lt;/p&gt;
&lt;p&gt;现场提供了小吃以及 SJTUG 贴纸。日后的吃吃喝喝活动不出意外也会继续提供以上福利，欢迎蹭饭！感谢 &lt;a href=&#34;https://net.sjtu.edu.cn&#34;&gt;交大网络信息中心&lt;/a&gt;(&lt;a href=&#34;https://hpc.sjtu.edu.cn/&#34;&gt;交大高性能计算中心&lt;/a&gt;) 对本次活动的赞助！&lt;/p&gt;
&lt;p&gt;本次分享在 b 站上进行了直播，录播已经上传到 &lt;a href=&#34;https://www.dropbox.com/scl/fi/wk0sej7xrj39hwa4l6wiq/2023-06-19-14-16-41.mp4?dl=0&amp;amp;rlkey=2apx0eamrgcanzcddwrnuekkd&#34;&gt;Dropbox&lt;/a&gt;。slides 已经上传到 &lt;a href=&#34;https://github.com/sjtug/sharing&#34;&gt;https://github.com/sjtug/sharing&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://sjtug.org/images/2023-06.in-event.jpeg&#34; alt=&#34;in-event&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>pop-os</title>
      <link>https://sjtug.org/post/mirror-help/pop-os/</link>
      <pubDate>Thu, 08 Jun 2023 18:27:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/pop-os/</guid>
      <description>&lt;p&gt;PopOS 是 system76 公司基于 ubuntu 开发的衍生版，具有称为 COSMIC 的定制 GNOME桌面环境，内置大量的库和开发工具。&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s@http://apt.pop-os.org/@https://mirror.sjtu.edu.cn/pop-os/@g&amp;#39;&lt;/span&gt; /etc/apt/sources.list.d/pop-os-apps.sources
sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s@http://apt.pop-os.org/@https://mirror.sjtu.edu.cn/pop-os/@g&amp;#39;&lt;/span&gt; /etc/apt/sources.list.d/pop-os-release.sources
sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s@http://apt.pop-os.org/@https://mirror.sjtu.edu.cn/@g&amp;#39;&lt;/span&gt; /etc/apt/sources.list.d/system.sources
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>镜像站自6月3日起公网服务不可用</title>
      <link>https://sjtug.org/post/mirror-news/2023-06-03-maintain/</link>
      <pubDate>Sat, 03 Jun 2023 16:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2023-06-03-maintain/</guid>
      <description>&lt;p&gt;由于上游校园主干网络临时维护，SJTUG 软件源镜像站 (mirror.sjtu.edu.cn 及 mirrors.sjtug.sjtu.edu.cn) 目前公网服务中断。&lt;/p&gt;
&lt;p&gt;本次服务中断的影响范围是 mirror.sjtu.edu.cn 及 mirrors.sjtug.sjtu.edu.cn 上存储的所有软件源。&lt;/p&gt;
&lt;p&gt;本次维护的服务不可用时间窗口预计如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2023年6月3日 (周六) 至 2023年6月5日（周一）：上游校园主干网络维护&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢您对 SJTUG 镜像站的关注。&lt;/p&gt;
&lt;p&gt;2023年6月3日 19:00 更新：不可用时间窗口更新&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像站将于2月22日下午4时及2月23日上午8时15分维护</title>
      <link>https://sjtug.org/post/mirror-news/2023-02-23-maintain/</link>
      <pubDate>Mon, 20 Feb 2023 09:30:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2023-02-23-maintain/</guid>
      <description>&lt;p&gt;SJTUG 软件源镜像站的致远服务器 (mirrors.sjtug.sjtu.edu.cn) 将于 2023年2月22日周三 至 2023年2月23日周四 UTC+8 部分时段进行服务器架构升级，停机窗口详见下文。届时服务将会出现短时间的不可用，希望大家予以谅解。&lt;/p&gt;
&lt;p&gt;本次维护的影响范围是 mirrors.sjtug.sjtu.edu.cn 上存储的所有软件源。&lt;/p&gt;
&lt;p&gt;本次维护将会对服务器上的镜像站软件架构进行升级，以提供更好的使用体验。升级内容包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将致远镜像服务器的操作系统从 Fedora 35 升级到 Fedora 37。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本次维护的服务不可用时间窗口预计如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2023年2月22日 下午4时起，我们将对致远镜像站进行初期升级。初期升级将在 30 分钟内完成，期间可能会出现服务中断的情况。&lt;/li&gt;
&lt;li&gt;2023年2月23日 上午4时起，我们将对致远镜像站进行主版本升级。系统升级将在 2 小时内完成，期间将停止服务。如出现兼容性问题，可能会中断更长时间。&lt;/li&gt;
&lt;li&gt;2023年2月23日 上午8时15分起，我们将更新配置。系统配置将在 1 小时内完成，期间可能会出现服务中断的情况。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢您对 SJTUG 镜像站的关注。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像站将于2月17日上午8时45分维护</title>
      <link>https://sjtug.org/post/mirror-news/2023-02-17-maintain/</link>
      <pubDate>Wed, 15 Feb 2023 17:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2023-02-17-maintain/</guid>
      <description>&lt;p&gt;SJTUG 软件源镜像站的致远服务器 (mirrors.sjtug.sjtu.edu.cn) 将于 2023年2月17日周五 上午8时45分 UTC+8 进行硬件检修。在此期间服务会中断大约一小时。&lt;/p&gt;
&lt;p&gt;本次维护的影响范围是 mirrors.sjtug.sjtu.edu.cn 上存储的所有软件源。与此同时，思源服务器 (mirror.sjtu.edu.cn) 上的软件源将不受影响。&lt;/p&gt;
&lt;p&gt;本次维护将会对服务器上的硬件进行维护，以提供更好的使用体验。&lt;/p&gt;
&lt;p&gt;本次维护的服务不可用时间窗口预计如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2023年2月17日 (周五) 上午8时45分：我们将使致远服务器离线并进行硬件维护，在此期间服务会中断约一小时。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢您对 SJTUG 镜像站的关注。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像站于10月16日至10月24日公网服务不可用</title>
      <link>https://sjtug.org/post/mirror-news/2022-10-16-maintain/</link>
      <pubDate>Sun, 16 Oct 2022 00:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2022-10-16-maintain/</guid>
      <description>&lt;p&gt;接上海交通大学网络信息中心通知，由于上游校园主干网络维护，SJTUG 软件源镜像站 (mirror.sjtu.edu.cn 及 mirrors.sjtug.sjtu.edu.cn) 目前公网服务中断。&lt;/p&gt;
&lt;p&gt;本次服务中断的影响范围是 mirror.sjtu.edu.cn 及 mirrors.sjtug.sjtu.edu.cn 上存储的所有软件源。&lt;/p&gt;
&lt;p&gt;本次维护的服务不可用时间窗口预计如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2022年10月16日 (周日) 至 2022年10月24日（周一）：上游校园主干网络维护&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢您对 SJTUG 镜像站的关注。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像站于6月2日至6月6日公网服务不可用</title>
      <link>https://sjtug.org/post/mirror-news/2022-06-02-maintain/</link>
      <pubDate>Thu, 02 Jun 2022 21:30:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2022-06-02-maintain/</guid>
      <description>&lt;p&gt;接上海交通大学网络信息中心通知，由于上游校园主干网络维护，SJTUG 软件源镜像站 (mirror.sjtu.edu.cn 及 mirrors.sjtug.sjtu.edu.cn) 目前公网服务中断。&lt;/p&gt;
&lt;p&gt;本次服务中断的影响范围是 mirror.sjtu.edu.cn 及 mirrors.sjtug.sjtu.edu.cn 上存储的所有软件源。&lt;/p&gt;
&lt;p&gt;本次维护的服务不可用时间窗口预计如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2022年6月2日 (周四) 至 2022年6月6日（周一）：上游校园主干网络维护&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢您对 SJTUG 镜像站的关注。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG x Naive Systems 11 月吃吃喝喝与技术分享</title>
      <link>https://sjtug.org/post/2021-11-20-rust-sharing/</link>
      <pubDate>Sat, 20 Nov 2021 20:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2021-11-20-rust-sharing/</guid>
      <description>&lt;p&gt;下周五 (26日) 18:30 将在电院E咖二楼进行 SJTUG 吃吃喝喝和技术分享活动，欢迎大家参加～&lt;/p&gt;
&lt;p&gt;本次分享的嘉宾是冷亦君同学，题目是“Use Abella to prove equivalence of datalog rules in Polonius (the new Rust borrow checker)”。
届时现场会提供小吃、SJTUG 贴纸、以及来自 Naive Systems 的纪念品。感谢 &lt;a href=&#34;https://www.naivesystems.com&#34;&gt;Naive Systems&lt;/a&gt; 对本次活动的赞助！活动安排如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;18:30 - 19:30 技术分享时间&lt;/li&gt;
&lt;li&gt;19:30 - 20:30 小吃和闲聊时间&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;电院E咖的位置在电子信息与电气工程学院 2 号楼和 3 号楼之间。&lt;/p&gt;
&lt;p&gt;本次分享没有直播，下次一定。slides 已经上传到 &lt;a href=&#34;https://github.com/sjtug/sharing&#34;&gt;https://github.com/sjtug/sharing&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://sjtug.org/images/2021-11.in-event.jpeg&#34; alt=&#34;in-event&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像站将于11月14日周日上午4时维护</title>
      <link>https://sjtug.org/post/mirror-news/2021-11-05-maintain/</link>
      <pubDate>Fri, 05 Nov 2021 13:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2021-11-05-maintain/</guid>
      <description>&lt;p&gt;SJTUG 软件源镜像站的致远服务器 (mirrors.sjtug.sjtu.edu.cn) 将于 2021年11月14日周日 上午4时 UTC+8 进行系统升级。在此期间服务会中断大约半小时。&lt;/p&gt;
&lt;p&gt;本次维护的影响范围是 mirrors.sjtug.sjtu.edu.cn 上存储的所有软件源。&lt;/p&gt;
&lt;p&gt;本次维护将会对服务器上的镜像站软件架构进行升级，以提供更好的使用体验。升级内容包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将致远镜像服务器的操作系统从 Fedora 33 升级到 Fedora 35。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本次维护的服务不可用时间窗口预计如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2021年11月12日 (周五) 上午8时：我们将升级服务器上的软件包，并进行重启，为周日的升级做准备。期间服务可能会中断 5 分钟。&lt;/li&gt;
&lt;li&gt;2021年11月14日 (周日) 上午4时：服务器将重启进行系统升级，在此期间服务会中断大约半小时。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢您对 SJTUG 镜像站的关注。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像站10月7日9时起服务不可用 (已恢复)</title>
      <link>https://sjtug.org/post/mirror-news/2021-10-07-outage/</link>
      <pubDate>Thu, 07 Oct 2021 09:45:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2021-10-07-outage/</guid>
      <description>&lt;p&gt;由于 mirrors.sjtug.sjtu.edu.cn 升级时出现问题，镜像站服务目前处于不完全可用状态。我们正在调查服务器升级失败的原因，并尝试重启服务器。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;上午11时更新：初步确定服务器无法启动的原因是意外将三年前的 grub 配置覆盖了最新配置，导致无法正常进入系统。正在尝试重新生成 grub 引导配置。&lt;/li&gt;
&lt;li&gt;下午3时更新：我们已经进入 Fedora recovery mode 进行修复工作。&lt;/li&gt;
&lt;li&gt;8日上午9时更新：服务已经恢复。我们还将做一些维护工作，期间可能有服务中断。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>关于近期 HTTPS 证书问题的相关提示 (已更新证书)</title>
      <link>https://sjtug.org/post/mirror-news/2021-10-04-cert/</link>
      <pubDate>Mon, 04 Oct 2021 00:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2021-10-04-cert/</guid>
      <description>&lt;p&gt;SJTUG 软件源镜像使用 Let&amp;rsquo;s Encrypt 签发的 HTTPS 证书提供服务。2021 年 9 月 30 日晚上 10 时，用于交叉签名根证书的 &lt;a href=&#34;https://letsencrypt.org/docs/dst-root-ca-x3-expiration-september-2021/&#34;&gt;DST Root CA X3 过期&lt;/a&gt;。因此，在老版本系统中，您可能会碰到错误的“证书过期”提示。&lt;/p&gt;
&lt;p&gt;如果您在更新软件包时遇到困难，可以参考对应软件源的帮助文档，先将软件源设置成 HTTP 协议访问；而后参考 &lt;a href=&#34;https://github.com/tuna/issues/issues/1342#issuecomment-931412628&#34;&gt;TUNA 的解决方案&lt;/a&gt; 更新您的系统，从而从 SJTUG 镜像站获取最新的软件更新。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;10月12日0时更新：mirrors.sjtug.sjtu.edu.cn 已经去掉了 DST Root CA X3，证书链仅保留 ISRG Root X1。&lt;/li&gt;
&lt;li&gt;10月12日0时更新：mirror.sjtu.edu.cn 已经去掉了 DST Root CA X3，证书链仅保留 ISRG Root X1。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>镜像站将于10月6-7日上午8时维护</title>
      <link>https://sjtug.org/post/mirror-news/2021-09-26-maintain/</link>
      <pubDate>Sun, 26 Sep 2021 13:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2021-09-26-maintain/</guid>
      <description>&lt;p&gt;SJTUG 软件源镜像站的两台服务器将分别于 2021年10月6日 上午8时 UTC+8 和 2021年10月7日 上午8时 UTC+8 起进行服务器架构升级，届时服务将会出现短时间的不可用，希望大家予以谅解。&lt;/p&gt;
&lt;p&gt;本次维护的影响范围是 mirrors.sjtug.sjtu.edu.cn 和 mirror.sjtu.edu.cn 上存储的所有软件源。&lt;/p&gt;
&lt;p&gt;本次维护将会对服务器上的镜像站软件架构进行升级，以提供更好的使用体验。升级内容包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将致远镜像服务器的操作系统从 Fedora 31 升级到 Fedora 33。&lt;/li&gt;
&lt;li&gt;将思源镜像服务器的操作系统从 Debian 10 升级到 Debian 11。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本次维护的服务不可用时间窗口预计如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;2021年10月6日 上午8时起，我们将首先维护思源镜像站 (mirror.sjtu.edu.cn)。Debian 系统升级将在 30 分钟内完成，期间可能会出现服务中断的情况。&lt;/li&gt;
&lt;li&gt;之后将进行机器重启，思源镜像站的所有服务可能会出现 5 分钟左右的中断。如出现兼容性问题，可能会中断更长时间。&lt;/li&gt;
&lt;li&gt;2021年10月7日 上午4时起，我们将维护致远镜像站 (mirrors.sjtug.sjtu.edu.cn)。Fedora 系统升级将在 2 小时内完成，期间将停止服务。&lt;/li&gt;
&lt;li&gt;2021年10月7日 上午8时起，我们将更新配置。Fedora 系统配置将在 30 分钟内完成，期间可能会出现服务中断的情况。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;感谢您对 SJTUG 镜像站的关注。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;更新：致远镜像站将升级到 Fedora 33 而非 Fedora 34。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;更新：致远镜像站将会在 4 时起停机更新，而非 8 时。&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>新增 DGL, Fedora Rawhide, OpenBSD, Raspbian Addons, Ubuntu Kylin, Ubuntu Cloud Images, Zorinos ISOs 镜像</title>
      <link>https://sjtug.org/post/mirror-news/2021-08-26-new-mirrors/</link>
      <pubDate>Thu, 26 Aug 2021 15:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2021-08-26-new-mirrors/</guid>
      <description>&lt;p&gt;SJTUG 软件源镜像在近期添加了一批新的镜像源。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;添加 Raspbian Addons 镜像。&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/261&#34;&gt;PR#261&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;添加 Fedora Rawhide 镜像 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/264&#34;&gt;PR#264&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;添加 DGL (anaconda/cloud/dglteam) 镜像 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/268&#34;&gt;PR#268&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;添加 OpenBSD 镜像 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/269&#34;&gt;PR#269&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;添加 Ubuntu Kylin 镜像 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/270&#34;&gt;PR#270&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;添加 Zorinos ISOs 镜像 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/271&#34;&gt;PR#271&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;添加 Ubuntu Cloud Images 镜像 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/275&#34;&gt;PR#275&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;与此同时，我们也做了一些功能上的更新：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;修复了 ghcup 的同步。 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/274&#34;&gt;PR#274&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Caddy Web Server 升级到了 2.4.3。 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/271&#34;&gt;PR#271&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Zhiyuan 镜像服务器 (mirrors.sjtug) 支持 IPv6。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欢迎大家使用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>docker-ce</title>
      <link>https://sjtug.org/post/mirror-help/docker-ce/</link>
      <pubDate>Sat, 21 Aug 2021 00:33:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/docker-ce/</guid>
      <description>&lt;h1 id=&#34;docker-community-edition-镜像使用帮助&#34;&gt;Docker Community Edition 镜像使用帮助&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;注意: 本镜像只提供 Debian/Ubuntu/Fedora/CentOS/RHEL 的 docker 软件包，非 dockerhub&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;debianubuntu-用户&#34;&gt;Debian/Ubuntu 用户&lt;/h2&gt;
&lt;p&gt;以下内容根据 &lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce/&#34;&gt;TUNA文档&lt;/a&gt; 修改而来。&lt;/p&gt;
&lt;p&gt;如果你过去安装过 docker，先删掉:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt-get remove docker docker-engine docker.io
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;首先安装依赖:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt-get install apt-transport-https ca-certificates curl gnupg2 software-properties-common
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据你的发行版，下面的内容有所不同。你使用的发行版：&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Debian&lt;/summary&gt;
信任 Docker 的 GPG 公钥:
&lt;pre&gt;curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add -&lt;/pre&gt;
对于 amd64 架构的计算机，添加软件仓库:
&lt;pre&gt;
sudo add-apt-repository \
   &#34;deb [arch=amd64] https://mirror.sjtu.edu.cn/docker-ce/linux/debian \
   $(lsb_release -cs) \
   stable&#34;
&lt;/pre&gt;
如果你用的是树莓派或其它ARM架构计算机，请运行:
&lt;pre&gt;
echo &#34;deb [arch=armhf] https://mirror.sjtu.edu.cn/docker-ce/linux/debian \
     $(lsb_release -cs) stable&#34; | \
    sudo tee /etc/apt/sources.list.d/docker.list
&lt;/pre&gt;
最后安装
&lt;pre&gt;
sudo apt-get update
sudo apt-get install docker-ce
&lt;/pre&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;Ubuntu&lt;/summary&gt;
信任 Docker 的 GPG 公钥:
&lt;pre&gt;curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -&lt;/pre&gt;
对于 amd64 架构的计算机，添加软件仓库:
&lt;pre&gt;
sudo add-apt-repository \
   &#34;deb [arch=amd64] https://mirror.sjtu.edu.cn/docker-ce/linux/ubuntu \
   $(lsb_release -cs) \
   stable&#34;
&lt;/pre&gt;
如果你用的是树莓派或其它ARM架构计算机，请运行:
&lt;pre&gt;
echo &#34;deb [arch=armhf] https://mirror.sjtu.edu.cn/docker-ce/linux/ubuntu \
     $(lsb_release -cs) stable&#34; | \
    sudo tee /etc/apt/sources.list.d/docker.list
&lt;/pre&gt;
最后安装
&lt;pre&gt;
sudo apt-get update
sudo apt-get install docker-ce
&lt;/pre&gt;
&lt;/details&gt;
&lt;h2 id=&#34;fedoracentosrhel&#34;&gt;Fedora/CentOS/RHEL&lt;/h2&gt;
&lt;p&gt;以下内容根据&lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/help/docker-ce/&#34;&gt;TUNA文档&lt;/a&gt;修改而来。&lt;/p&gt;
&lt;p&gt;如果你之前安装过 docker，请先删掉&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum remove docker docker-common docker-selinux docker-engine
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装一些依赖&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo yum install -y yum-utils device-mapper-persistent-data lvm2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根据你的发行版下载repo文件:&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;CentOS/RHEL&lt;/summary&gt;
&lt;pre&gt;
wget -O /etc/yum.repos.d/docker-ce.repo https://download.docker.com/linux/centos/docker-ce.repo
&lt;/pre&gt;
&lt;/details&gt;
&lt;details&gt;&lt;summary&gt;Fedora&lt;/summary&gt;
&lt;pre&gt;
wget -O /etc/yum.repos.d/docker-ce.repo https://download.docker.com/linux/fedora/docker-ce.repo
&lt;/pre&gt;
&lt;/details&gt;
&lt;p&gt;把软件仓库地址替换为 SJTUG:&lt;/p&gt;
&lt;pre&gt;
sudo sed -i &#39;s+download.docker.com+mirror.sjtu.edu.cn/docker-ce+&#39; /etc/yum.repos.d/docker-ce.repo
&lt;/pre&gt;
&lt;p&gt;最后安装:&lt;/p&gt;
&lt;pre&gt;
sudo yum makecache fast
sudo yum install docker-ce
&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>新增 AlmaLinux, Armbian, Fedora development, ghcup, Linux kernel, Rocky Linux 镜像</title>
      <link>https://sjtug.org/post/mirror-news/2021-05-25-new-mirrors/</link>
      <pubDate>Tue, 25 May 2021 14:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2021-05-25-new-mirrors/</guid>
      <description>&lt;p&gt;SJTUG 软件源镜像在近期添加了一批新的镜像源。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;添加 ghcup 镜像。&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/225&#34;&gt;PR#225&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;添加 Armbian 和 AlmaLinux 镜像 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/227&#34;&gt;PR#227&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;添加 Linux kernel 镜像 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/228&#34;&gt;PR#228&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;添加了 Fedora development 镜像 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/236&#34;&gt;PR#236&lt;/a&gt; &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/238&#34;&gt;PR#238&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;添加了 Rocky Linux 镜像 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/246&#34;&gt;PR#246&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;与此同时，我们也做了一些功能上的更新：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Homebrew 支持从 ghcr.io 同步。 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/245&#34;&gt;PR#245&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Rsync 的磁盘限制大大减小，可以为下游提供文件同步服务了。 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/240&#34;&gt;PR#240&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;git 源切换到了 git.sjtu.edu.cn 提供服务，用户体验更好。 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/249&#34;&gt;PR#249&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Caddy Web Server 升级到了 2.4.0。 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/248&#34;&gt;PR#248&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欢迎大家使用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>alpine</title>
      <link>https://sjtug.org/post/mirror-help/alpine/</link>
      <pubDate>Sat, 17 Apr 2021 17:44:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/alpine/</guid>
      <description>&lt;p&gt;Alpine Linux 是一个面向安全，轻量级的基于musl libc与busybox项目的Linux发行版。&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/dl-cdn.alpinelinux.org/mirrors.sjtug.sjtu.edu.cn/g&amp;#39;&lt;/span&gt; /etc/apk/repositories
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>ghcup</title>
      <link>https://sjtug.org/post/mirror-help/ghcup/</link>
      <pubDate>Tue, 30 Mar 2021 23:50:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/ghcup/</guid>
      <description>&lt;p&gt;Ghcup 是一种用于安装 Haskell 的工具，它使得用户可以轻易地在 GNU/Linux、macOS 和 FreeBSD 上安装特定版本的 ghc，并从零开始搭建好一个全新的 Haskell 开发环境（包括 cabal 与 HLS 支持）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用说明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;创建 &lt;code&gt;~/.ghcup/config.yaml&lt;/code&gt; 并输入以下内容&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;url-source:
    OwnSource: &amp;quot;https://mirror.sjtu.edu.cn/ghcup/yaml/ghcup/data/ghcup-0.0.8.yaml&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果您尚未安装 ghcup，请在完成以上步骤后，于终端中执行以下指令（请不要以 root 用户执行），随后跟随屏幕上的指引完成安装。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl --proto &#39;=https&#39; --tlsv1.2 -LsSf https://mirror.sjtu.edu.cn/ghcup/script/install.sh | sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;若您希望使用官网的安装器,请执行以下指令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;curl --proto &#39;=https&#39; --tlsv1.2 -sSf https://get-ghcup.haskell.org | GHCUP_BASE_URL=&amp;quot;https://mirror.sjtu.edu.cn/ghcup/packages/~ghcup&amp;quot; sh
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;故障排除&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ghcup 出现形如 &lt;code&gt;[ Error ] JSON decoding failed with: AesonException&lt;/code&gt; 的错误&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这可能是由于本机 ghcup 版本与配置文件版本不匹配造成。
ghcup 于 0.1.15.1 版本前使用 0.0.4 版本的配置文件，此版本及之后的版本使用 0.0.5+ 版本的配置文件。
请尝试将 &lt;code&gt;config.yaml&lt;/code&gt; 中的 &lt;code&gt;ghcup-0.0.6.yaml&lt;/code&gt; 改为 &lt;code&gt;ghcup-0.0.4.yaml&lt;/code&gt; （抑或反之）后重试。&lt;/p&gt;
&lt;p&gt;请注意，ghcup 上游倾向于仅更新最新版本配置文件中的内容，当版本发生变化后请及时更新配置文件版本。&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;通过 ghcup 安装软件包时出现 &lt;code&gt;Error: Download failed ...&lt;/code&gt; 错误&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这一错误可能是由于您的 ghcup 版本过老，使用的配置文件已经长久未更新，其中包含的软件包版本过旧所致。我们将尽力保留旧版本的软件包，但当存储空间不足时，可能随时删除旧文件。本镜像站仅保证同步最新版本配置文件中包含的软件包。&lt;/p&gt;
&lt;p&gt;当出现上述现象时，请首先尝试更新 ghcup 的版本，并根据 &lt;code&gt;故障排除 1&lt;/code&gt; 的指示修改配置文件。若 ghcup 已无法更新，可以尝试删除 &lt;code&gt;~/.ghcup&lt;/code&gt; 整个文件夹（这一操作将删除 ghcup 以及所有通过 ghcup 安装的软件），并根据 &lt;code&gt;使用说明&lt;/code&gt; 重新安装最新版本的 ghcup。&lt;/p&gt;
&lt;p&gt;若完成以上步骤后问题仍未解决，请至 &lt;a href=&#34;https://github.com/sjtug/mirror-requests&#34;&gt;此处&lt;/a&gt; 向我们反馈 BUG。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>新增 conda-forge/osx-arm64, GIMP, MacPorts, VSCodium 镜像</title>
      <link>https://sjtug.org/post/mirror-news/2021-03-23-new-mirrors/</link>
      <pubDate>Tue, 23 Mar 2021 14:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2021-03-23-new-mirrors/</guid>
      <description>&lt;p&gt;SJTUG 软件源镜像在本月添加了一批新的镜像源。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;conda-forge 添加了 Apple M1 平台支持。&lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/222&#34;&gt;PR#222&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GIMP &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/220&#34;&gt;PR#220&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;MacPorts &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/216&#34;&gt;PR#216&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;VSCodium &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/208&#34;&gt;PR#208&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;与此同时，我们也做了一些功能上的更新：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;存储在 SJTU S3 上的软件源现在可以浏览所有文件了。 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/212&#34;&gt;PR#212&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Flutter 切换到了新上游。 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/209&#34;&gt;PR#209&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;openSUSE 添加到了官方源。 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-unified/pull/215&#34;&gt;PR#215&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欢迎大家使用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG 2021 年春季招新</title>
      <link>https://sjtug.org/post/2021-03-09-welcome/</link>
      <pubDate>Tue, 09 Mar 2021 23:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2021-03-09-welcome/</guid>
      <description>&lt;p&gt;SJTUG (上海交通大学 Linux 用户组) 是一个非盈利的技术组织。只要你对 *nix 相关技术感兴趣、有热情，即可成为我们的一员。&lt;/p&gt;
&lt;p&gt;成为 SJTUG 的一员，即可参与：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不定期的技术分享活动。&lt;/li&gt;
&lt;li&gt;不确定的学期吃锅活动。&lt;/li&gt;
&lt;li&gt;参与维护软件源镜像站。（仅限校内成员）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;加入 SJTUG 成员所在的讨论组，即可成为 SJTUG 的一员。相关的活动通知也会同步发送到这些位置。目前 SJTUG 的成员主要出现在这些地方：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SJTUG 微信群。由于群人数即将达到限制，目前仅能通过邀请入群。&lt;/li&gt;
&lt;li&gt;2021 年新建的 QQ 群。群号 715273806。&lt;/li&gt;
&lt;li&gt;电报群。首先，关注 &lt;a href=&#34;https://t.me/sjtug_mirrors_news&#34;&gt;SJTUG 镜像站的通知频道&lt;/a&gt;。而后，加入频道关联的群组。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;期待您的加入！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>新增 Bioconductor, openEuler, Void Linux, Wireshark 镜像</title>
      <link>https://sjtug.org/post/mirror-news/2021-03-06-new-mirrors/</link>
      <pubDate>Sat, 06 Mar 2021 18:40:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2021-03-06-new-mirrors/</guid>
      <description>&lt;p&gt;近期，SJTUG 的镜像同步工具 mirror-clone &lt;a href=&#34;https://github.com/sjtug/mirror-clone/pull/57&#34;&gt;添加了 Rsync 支持&lt;/a&gt;。
在此基础上，我们增加了 Bioconductor, Void Linux 和 Wireshark 镜像。这三个镜像都存储在 SJTU 对象存储服务上。
从这些软件源下载软件时，您会被自动重定向到 SJTU 对象存储服务。&lt;/p&gt;
&lt;p&gt;我们还增加了 openEuler 镜像，存储在思源 (mirror.sjtu.edu.cn) 服务器上。&lt;/p&gt;
&lt;p&gt;您可以参阅镜像站首页的帮助文档，配置相关软件使用 SJTUG 镜像。&lt;/p&gt;
&lt;p&gt;与此同时，由于致远服务器压力过大，我们将部分软件源迁移到了其他存储中。您可以调整相关软件的设置，以取得最好的使用体验。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;manjaro 迁移到了思源服务器。&lt;/li&gt;
&lt;li&gt;archlinux 迁移到了思源服务器。&lt;/li&gt;
&lt;li&gt;ctan 迁移到了思源服务器。&lt;/li&gt;
&lt;li&gt;anaconda 迁移到了 SJTU 对象存储服务。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欢迎大家使用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>qt</title>
      <link>https://sjtug.org/post/mirror-help/qt/</link>
      <pubDate>Mon, 22 Feb 2021 11:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/qt/</guid>
      <description>&lt;p&gt;通常来说，Qt 在线安装器会自动选择最近的镜像，因此无需做特殊设置即可使用 SJTUG Qt 镜像。&lt;/p&gt;
&lt;p&gt;你可以通过下面的方法手动指定 Qt 镜像。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使用离线安装器安装：在 &lt;a href=&#34;https://www.qt.io/offline-installers&#34;&gt;Offline Installers&lt;/a&gt; 页面中找到需要下载的版本，并将链接中的
&lt;code&gt;http://download.qt.io&lt;/code&gt; 替换为 &lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/qt&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;使用在线安装器安装：参考 &lt;a href=&#34;https://wiki.qt.io/Online_Installer_4.x#Selecting_a_mirror_for_opensource&#34;&gt;Qt Wiki&lt;/a&gt;，
在命令行中给安装器提供 &lt;code&gt;--mirror https://mirrors.sjtug.sjtu.edu.cn/qt&lt;/code&gt; 的参数。比如在 macOS 上：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;./qt-unified-macOS-x86_64-4.0.1-1-online.app/Contents/MacOS/qt-unified-macOS-x86_64-4.0.1-1-online --mirror https://mirrors.sjtug.sjtu.edu.cn/qt
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>镜像站将于2月17日上午8时维护</title>
      <link>https://sjtug.org/post/mirror-news/2021-02-10-maintain/</link>
      <pubDate>Wed, 10 Feb 2021 13:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2021-02-10-maintain/</guid>
      <description>&lt;p&gt;SJTUG 软件源镜像站致远镜像服务器将于 2021年2月17日 上午8时 UTC+8 起进行服务器架构升级，届时服务将会出现短时间的不可用，希望大家予以谅解。&lt;/p&gt;
&lt;p&gt;本次维护的影响范围是 mirrors.sjtug.sjtu.edu.cn 上存储的所有软件源。&lt;/p&gt;
&lt;p&gt;本次维护将会对服务器上的镜像站软件架构进行升级，以提供更好的使用体验。升级内容包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 ftp.sjtu.edu.cn 的反向代理源更改为思源镜像服务器的对应镜像。&lt;/li&gt;
&lt;li&gt;解决部分目录重定向到错误路径导致 404 的问题。&lt;/li&gt;
&lt;li&gt;停止提供 nodejs-release, maven-central, npm-registry, google-fonts 服务，相关服务会重定向到上游。
技术详情可以参阅 &lt;a href=&#34;https://github.com/sjtug/mirror-docker-siyuan/projects/1&#34;&gt;Zhiyuan Migration Project&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;本次维护的服务不可用时间窗口预计如下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;维护前 24 小时停止 rsync 服务，使得上游不再将用户重定向到本镜像站。&lt;/li&gt;
&lt;li&gt;Web 服务器重启将在 5 分钟内完成。在此期间，所有软件源均不可用。&lt;/li&gt;
&lt;li&gt;同步服务重启将在 30 分钟内完成。在此期间，前端将无法显示同步状态。&lt;/li&gt;
&lt;li&gt;涉及到子域名的服务（如 Docker 反代、anaconda）可能无法立即正常提供服务，在 1 小时内可以恢复。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在新年来临之际，我谨代表 SJTUG 镜像站维护人员，祝大家在即将到来的一年里，阖家欢乐，万事如意。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fedora-ostree</title>
      <link>https://sjtug.org/post/mirror-help/fedora-ostree/</link>
      <pubDate>Mon, 04 Jan 2021 22:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/fedora-ostree/</guid>
      <description>&lt;p&gt;fedora-ostree 是 Fedora Silverblue (原 Atomic Workstation) 的智能缓存。
Fedora Silverblue 通过 rpm-ostree 管理整个系统。
当您第一次请求镜像中的资源时，如果文件没有被镜像服务器缓存，我们会将您重定向回原站，
并在后台进行缓存。目前镜像服务器上已经预先缓存了所有 fedora-ostree 仓库的分支。&lt;/p&gt;
&lt;p&gt;使用方法：编辑 &lt;code&gt;/etc/ostree/remotes.d/fedora.conf&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-plain&#34; data-lang=&#34;plain&#34;&gt;[remote &amp;#34;fedora&amp;#34;]
url=https://mirror.sjtu.edu.cn/fedora-ostree
gpg-verify=true
gpgkeypath=/etc/pki/rpm-gpg/
# contenturl=mirrorlist=https://ostree.fedoraproject.org/mirrorlist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>flathub</title>
      <link>https://sjtug.org/post/mirror-help/flathub/</link>
      <pubDate>Mon, 04 Jan 2021 22:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/flathub/</guid>
      <description>&lt;p&gt;Flathub 镜像是 &lt;a href=&#34;https://flathub.org&#34;&gt;flathub.org&lt;/a&gt; 的智能缓存。当您请求镜像中的资源时，
如果文件没有被镜像服务器缓存，我们会将您重定向回原站，并在后台进行缓存。
目前镜像服务器上已经预先缓存了所有 Flathub 软件的分支。&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo flatpak remote-modify flathub --url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://mirror.sjtu.edu.cn/flathub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果出现错误可尝试：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget https://mirror.sjtu.edu.cn/flathub/flathub.gpg
sudo flatpak remote-modify --gpg-import&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;flathub.gpg flathub
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;目前 sel.flathub.org 已经重定向到 SJTUG 镜像站。如果您原先使用该服务器作为 Flathub 上游，
无需做任何设置即可使用。&lt;/p&gt;
&lt;p&gt;Flathub 中部分软件由于重分发授权问题，需要从官方服务器下载，无法使用镜像站加速。比如
NVIDIA 驱动、JetBrains 系列软件等。如果您的使用体验不佳，请及时通过 GitHub 或邮件向我们反馈。&lt;/p&gt;
&lt;p&gt;如果您中断了某次安装，重新下载可能会出现找不到文件的问题。您可以使用 &lt;code&gt;flatpak repair&lt;/code&gt; 解决相关的问题。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>新增 apache, DragonFlyBSD 等镜像</title>
      <link>https://sjtug.org/post/mirror-news/2021-01-04-siyuan-available/</link>
      <pubDate>Mon, 04 Jan 2021 16:30:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2021-01-04-siyuan-available/</guid>
      <description>&lt;p&gt;SJTUG 的新服务器“思源 (Siyuan)”服务器已经在 &lt;a href=&#34;https://mirror.sjtu.edu.cn&#34;&gt;https://mirror.sjtu.edu.cn&lt;/a&gt; 上线。
该服务器兼容原 &lt;a href=&#34;https://ftp.sjtu.edu.cn&#34;&gt;ftp.sjtu.edu.cn&lt;/a&gt; 服务器提供的服务，并在此基础上增加了许多软件源镜像。
原先的 &lt;a href=&#34;https://ftp.sjtu.edu.cn&#34;&gt;ftp.sjtu.edu.cn&lt;/a&gt; 将在近几个月内解析至 SJTUG 思源镜像服务器。&lt;/p&gt;
&lt;p&gt;新服务器兼容以下 18 个 &lt;a href=&#34;https://ftp.sjtu.edu.cn&#34;&gt;ftp.sjtu.edu.cn&lt;/a&gt; 上的软件源镜像。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;centos&lt;/li&gt;
&lt;li&gt;debian&lt;/li&gt;
&lt;li&gt;debian-cd&lt;/li&gt;
&lt;li&gt;debian-security&lt;/li&gt;
&lt;li&gt;deepin&lt;/li&gt;
&lt;li&gt;deepin-cd&lt;/li&gt;
&lt;li&gt;fedora/linux&lt;/li&gt;
&lt;li&gt;fedora/epel&lt;/li&gt;
&lt;li&gt;fedora-secondary&lt;/li&gt;
&lt;li&gt;linuxmint&lt;/li&gt;
&lt;li&gt;linuxmint-cd&lt;/li&gt;
&lt;li&gt;mageia&lt;/li&gt;
&lt;li&gt;opensuse&lt;/li&gt;
&lt;li&gt;openvz&lt;/li&gt;
&lt;li&gt;remi&lt;/li&gt;
&lt;li&gt;scientific&lt;/li&gt;
&lt;li&gt;ubuntu&lt;/li&gt;
&lt;li&gt;ubuntu-cd&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;新服务器新增了以下 8 个镜像。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;apache&lt;/li&gt;
&lt;li&gt;docker-ce&lt;/li&gt;
&lt;li&gt;ubuntu-cdimage&lt;/li&gt;
&lt;li&gt;ubuntu-ports&lt;/li&gt;
&lt;li&gt;openwrt&lt;/li&gt;
&lt;li&gt;rpmfusion&lt;/li&gt;
&lt;li&gt;dragonflybsd/dports&lt;/li&gt;
&lt;li&gt;dragonflybsd/iso-images&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;与此同时，我们也上线了大量常用 git 仓库镜像。&lt;/p&gt;
&lt;p&gt;欢迎大家继续使用 SJTUG 镜像站。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>新增 FreeCAD 镜像与 GitHub Release 智能缓存</title>
      <link>https://sjtug.org/post/mirror-news/2021-01-02-add-github-release-freecad/</link>
      <pubDate>Sat, 02 Jan 2021 09:55:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2021-01-02-add-github-release-freecad/</guid>
      <description>&lt;p&gt;FreeCAD 镜像可以在 &lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/github-release/FreeCAD/FreeCAD/releases/download/?mirror_intel_list&#34;&gt;这里&lt;/a&gt; 访问，我们已经全量同步了近 3 个版本。&lt;/p&gt;
&lt;p&gt;目前 GitHub Release 智能缓存只开放了 FreeCAD 项目的缓存。您可以在 &lt;a href=&#34;https://github.com/sjtug/mirror-requests/issues&#34;&gt;mirror-requests&lt;/a&gt; 中通过 issue 的方式请求添加新的 GitHub Release 镜像。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dart 与 Flutter 镜像源已全量同步</title>
      <link>https://sjtug.org/post/mirror-news/2020-12-25-fix-flutter/</link>
      <pubDate>Fri, 25 Dec 2020 13:15:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2020-12-25-fix-flutter/</guid>
      <description>&lt;p&gt;在 Flutter 中文社区的大力支持下，我们修复了 Dart 与 Flutter 镜像访问不稳定的问题。请参考帮助文档进行配置。欢迎大家继续使用 SJTUG 镜像源。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Guix 镜像源正式上线</title>
      <link>https://sjtug.org/post/mirror-news/2020-12-21-release-guix/</link>
      <pubDate>Mon, 21 Dec 2020 15:30:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2020-12-21-release-guix/</guid>
      <description>&lt;p&gt;在 Guix 中文社区的大力支持下，我们上线了 Guix 镜像源。Guix 镜像源的实现方式是智能缓存。当镜像站用户第一次请求某个资源时，它会被永久缓存在镜像站服务器上。&lt;/p&gt;
&lt;p&gt;Guix 镜像源分为 git 镜像和 substitute 镜像，请参考帮助文档进行配置。欢迎大家使用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>PyPI 全量同步镜像源重新上线</title>
      <link>https://sjtug.org/post/mirror-news/2020-12-08-add-pypi/</link>
      <pubDate>Thu, 10 Dec 2020 13:30:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2020-12-08-add-pypi/</guid>
      <description>&lt;p&gt;继 SJTUG 镜像源智能缓存上线后，我们从清华大学开源软件镜像站 (TUNA) 全量同步了 PyPI 软件源。感谢上海交通大学网络信息中心和 TUNA 的支持。欢迎大家继续使用 PyPI 镜像源。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG 镜像源智能缓存正式上线</title>
      <link>https://sjtug.org/post/mirror-news/2020-12-07-announcing-new-arch/</link>
      <pubDate>Mon, 07 Dec 2020 12:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2020-12-07-announcing-new-arch/</guid>
      <description>&lt;p&gt;SJTUG 镜像在近期进行了一次更新。我们开发了智能缓存工具 &lt;a href=&#34;https://github.com/sjtug/mirror-intel&#34;&gt;mirror-intel&lt;/a&gt;，
并将部分反向代理软件源移植到了智能缓存系统上。&lt;/p&gt;
&lt;p&gt;智能缓存的后端是由上海交通大学网络信息中心提供的对象存储服务。&lt;/p&gt;
&lt;p&gt;当您访问智能缓存软件源时，服务器会先检测文件是否在对象存储中。如果存在，请求会直接被重定向到 &lt;a href=&#34;https://s3.jcloud.sjtu.edu.cn&#34;&gt;https://s3.jcloud.sjtu.edu.cn&lt;/a&gt; 。
否则，请求会被重定向到上游；与此同时，智能缓存会将文件同步到对象存储中。&lt;/p&gt;
&lt;p&gt;目前通过智能缓存提供服务的软件源镜像包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;rust-static (rustup 镜像源)。上游为 &lt;a href=&#34;https://static.rust-lang.org&#34;&gt;https://static.rust-lang.org&lt;/a&gt; 。近三个月的工具链均已缓存。&lt;/li&gt;
&lt;li&gt;crates.io (cargo 包管理器镜像源)。上游为 &lt;a href=&#34;https://static.crates.io&#34;&gt;https://static.crates.io&lt;/a&gt; 。所有包都已缓存。&lt;/li&gt;
&lt;li&gt;homebrew-bottles。上游为清华大学开源软件镜像站 (TUNA)。所有包都已缓存。&lt;/li&gt;
&lt;li&gt;pypi-packages。上游为清华大学开源软件镜像站 (TUNA)。正在同步中。&lt;/li&gt;
&lt;li&gt;flathub, fedora-ostree, fedora-iot 均使用官方 ostree 上游。所有分支都已缓存。ostree 镜像还在测试阶段，正式版会在近几个月内发布。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欢迎大家的使用～&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>gcr.io</title>
      <link>https://sjtug.org/post/mirror-help/gcr-io/</link>
      <pubDate>Fri, 23 Oct 2020 10:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/gcr-io/</guid>
      <description>&lt;p&gt;该镜像是 gcr.io 反代。将所有需要用到 gcr.io 的地址换成 gcr-io.mirrors.sjtug.sjtu.edu.cn 即可。比如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;docker pull gcr-io.mirrors.sjtug.sjtu.edu.cn/google_containers/echoserver:1.4
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>git/opam-repository.git</title>
      <link>https://sjtug.org/post/mirror-help/opam-git/</link>
      <pubDate>Tue, 13 Oct 2020 19:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/opam-git/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://opam.ocaml.org&#34;&gt;opam&lt;/a&gt; 是 OCaml 的包管理器。SJTUG 提供 opam 的反代服务。&lt;/p&gt;
&lt;p&gt;首次使用 opam，可以使用 SJTUG 镜像源初始化 opam。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;opam init default https://mirrors.sjtug.sjtu.edu.cn/git/opam-repository.git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使用下面的指令，可以将默认源替换为 SJTUG 镜像。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;opam repo set-url default https://mirrors.sjtug.sjtu.edu.cn/git/opam-repository.git --all --set-default
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>新增 emacs-elpa 与 msys2 镜像</title>
      <link>https://sjtug.org/post/mirror-news/2020-09-28-new-mirrors/</link>
      <pubDate>Mon, 28 Sep 2020 14:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2020-09-28-new-mirrors/</guid>
      <description>&lt;p&gt;SJTUG 镜像在最近两个月中新增了下面两个镜像。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;emacs-elpa (包含 GNU ELPA, MELPA, MELPA Stable, Marmalade, Org, Sunrise Commander ELPA, user42 ELPA)，上游 emacs-china。&lt;/li&gt;
&lt;li&gt;msys2&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;九月中旬，镜像站的反向代理服务出现了一些稳定性问题。我们更换了反向代理方式，提高了 crates.io 等镜像的稳定性。&lt;/p&gt;
&lt;p&gt;在 @johnnychen94 的帮助下，镜像站解决了 julia 镜像缺失文件的问题。&lt;/p&gt;
&lt;p&gt;Qt 镜像已加入官方源。在使用官方安装器进行安装时，国内用户会自动使用 SJTUG 镜像站下载文件。&lt;/p&gt;
&lt;p&gt;Ubuntu, Debian 等 apt 源禁用了 https 自动跳转，现在可以直接使用 http 协议访问。&lt;/p&gt;
&lt;p&gt;欢迎大家使用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>emacs-elpa</title>
      <link>https://sjtug.org/post/mirror-help/emacs-elpa/</link>
      <pubDate>Fri, 14 Aug 2020 14:55:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/emacs-elpa/</guid>
      <description>&lt;p&gt;emacs-elpa 包含了 GNU ELPA, NonGNU ELPA, MELPA, MELPA Stable, Org 这 5 个镜像。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;ELPA&lt;/th&gt;
&lt;th&gt;镜像地址&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://elpa.gnu.org/&#34;&gt;GNU ELPA&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/gnu/&#34;&gt;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/gnu/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://elpa.gnu.org/nongnu/&#34;&gt;NonGNU ELPA&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/nongnu/&#34;&gt;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/nongnu/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://melpa.org/&#34;&gt;MELPA&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/melpa/&#34;&gt;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/melpa/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://stable.melpa.org/#/&#34;&gt;MELPA Stable&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/stable-melpa/&#34;&gt;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/stable-melpa/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://orgmode.org/elpa.html&#34;&gt;Org&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/org/&#34;&gt;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/org/&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;使用方法&#34;&gt;使用方法&lt;/h2&gt;
&lt;p&gt;根据你的需求，设置 &lt;code&gt;package-archives&lt;/code&gt; ，比如用 GNU ELPA 和 MELPA：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;setq&lt;/span&gt; package-archives &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gnu&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/gnu/&amp;#34;&lt;/span&gt;)
                         (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;melpa&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/melpa/&amp;#34;&lt;/span&gt;)))

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;spacemacs-用户&#34;&gt;Spacemacs 用户&lt;/h3&gt;
&lt;h4 id=&#34;master-分支&#34;&gt;master 分支&lt;/h4&gt;
&lt;p&gt;添加下面的代码到  &lt;code&gt;.spacemacs&lt;/code&gt;  的  &lt;code&gt;dotspacemacs/user-init()&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;setq&lt;/span&gt; configuration-layer--elpa-archives
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;melpa-cn&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/melpa/&amp;#34;&lt;/span&gt;)
      (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;org-cn&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/org/&amp;#34;&lt;/span&gt;)
      (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gnu-cn&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/gnu/&amp;#34;&lt;/span&gt;)))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;develop-分支&#34;&gt;develop 分支&lt;/h4&gt;
&lt;p&gt;使用 &lt;code&gt;configuration-layer-elpa-archives&lt;/code&gt; 代替原来的 &lt;code&gt;configuration-layer--elpa-archives&lt;/code&gt; （ &lt;code&gt;--&lt;/code&gt; 换成 &lt;code&gt;-&lt;/code&gt; ）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;setq&lt;/span&gt; configuration-layer-elpa-archives
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;((&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;melpa-cn&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/melpa/&amp;#34;&lt;/span&gt;)
      (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;org-cn&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/org/&amp;#34;&lt;/span&gt;)
      (&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gnu-cn&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/gnu/&amp;#34;&lt;/span&gt;)))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;cask-用户&#34;&gt;Cask 用户&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/cask/cask&#34;&gt;Cask&lt;/a&gt; 是一个 Emacs Lisp 的项目管理工具。这里还是以 GNU ELPA 和 MELPA 为例，在添加下面的代码到 Cask&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-lisp&#34; data-lang=&#34;lisp&#34;&gt;(source &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gnu&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/gnu/&amp;#34;&lt;/span&gt;)
(source &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;melpa&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirrors.sjtug.sjtu.edu.cn/emacs-elpa/melpa/&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;本镜像上游为 &lt;a href=&#34;https://elpa.emacs-china.org&#34;&gt;https://elpa.emacs-china.org&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;SJTUG 不提供 rsync 镜像。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>新增 archlinuxarm, julia, mongodb, Qt 镜像</title>
      <link>https://sjtug.org/post/mirror-news/2020-08-05-new-mirrors/</link>
      <pubDate>Wed, 05 Aug 2020 18:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2020-08-05-new-mirrors/</guid>
      <description>&lt;p&gt;SJTUG 镜像源近期迎来了一大批更新。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;改变了 archlinux 镜像的同步方式，实时性更强。&lt;/li&gt;
&lt;li&gt;新增 archlinuxarm 源。&lt;/li&gt;
&lt;li&gt;在 anaconda 中新增了 PyTorch 源。&lt;/li&gt;
&lt;li&gt;新增 julia 源。该镜像源将成为中国大陆境内官方 Pkg Server 的上游之一。&lt;/li&gt;
&lt;li&gt;新增 mongodb 源。&lt;/li&gt;
&lt;li&gt;新增 Qt 源。我们近期在联系 Qt，希望将镜像加入官方镜像列表中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;欢迎大家体验！&lt;/p&gt;
&lt;p&gt;2019-2020 年我们还新增/修复了下面这些镜像：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;增强了 anaconda 同步的稳定性，修复了部分源 404 的问题。&lt;/li&gt;
&lt;li&gt;修复了 CRAN 的同步问题。&lt;/li&gt;
&lt;li&gt;修复了 crates.io 的重定向问题。&lt;/li&gt;
&lt;li&gt;修复了 dart-package 的重定向问题。&lt;/li&gt;
&lt;li&gt;pypi 改为反代。&lt;/li&gt;
&lt;li&gt;修复了 maven 的访问问题。&lt;/li&gt;
&lt;li&gt;新增了 google-fonts 反代。&lt;/li&gt;
&lt;li&gt;新增了 packagist 元数据。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>julia</title>
      <link>https://sjtug.org/post/mirror-help/julia/</link>
      <pubDate>Wed, 05 Aug 2020 12:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/julia/</guid>
      <description>&lt;p&gt;SJTUG 目前提供了 Julia 的官方包注册表 &lt;a href=&#34;https://github.com/JuliaRegistries/General&#34;&gt;General&lt;/a&gt; 镜像来加速 Julia 包的安装。&lt;/p&gt;
&lt;p&gt;关于 Julia 的安装，请使用 &lt;code&gt;julia-releases&lt;/code&gt; 镜像。&lt;/p&gt;
&lt;p&gt;注：本镜像的使用需要 Julia &lt;code&gt;v1.4.0&lt;/code&gt; 或更新的版本。&lt;/p&gt;
&lt;h2 id=&#34;使用方式&#34;&gt;使用方式&lt;/h2&gt;
&lt;p&gt;只需要设置环境变量 &lt;code&gt;JULIA_PKG_SERVER=https://mirrors.sjtug.sjtu.edu.cn/julia&lt;/code&gt; 即可切换镜像。若成功切换镜像，则能通过 &lt;code&gt;versioninfo()&lt;/code&gt; 查询到相关信息，例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; versioninfo()
Julia Version &lt;span style=&#34;color:#ae81ff&#34;&gt;1.5.0&lt;/span&gt;
Commit &lt;span style=&#34;color:#ae81ff&#34;&gt;96786e22&lt;/span&gt;cc (&lt;span style=&#34;color:#ae81ff&#34;&gt;2020&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;08&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;01&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;44&lt;/span&gt; UTC)
Platform Info&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
  OS&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; macOS (x86_64&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;apple&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;darwin18&lt;span style=&#34;color:#ae81ff&#34;&gt;.7.0&lt;/span&gt;)
  CPU&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Intel(R) Core(TM) i9&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9880&lt;/span&gt;H CPU &lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;@&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2.30&lt;/span&gt;GHz
  WORD_SIZE&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;
  LIBM&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; libopenlibm
  LLVM&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; libLLVM&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9.0.1&lt;/span&gt; (ORCJIT, skylake)
Environment&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
  JULIA_PKG_SERVER &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; https&lt;span style=&#34;color:#f92672&#34;&gt;://&lt;/span&gt;mirrors&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sjtug&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sjtu&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;edu&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;cn&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;julia
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;若不设置该环境变量则默认使用官方服务器 &lt;code&gt;pkg.julialang.org&lt;/code&gt; 作为上游。本镜像站是其国内服务器的数据上游之一。&lt;/p&gt;
&lt;h3 id=&#34;临时使用&#34;&gt;临时使用&lt;/h3&gt;
&lt;p&gt;不同系统和命令行下设置环境变量的方式各不相同，在命令行下可以通过以下方式来临时修改环境变量&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux Bash: &lt;code&gt;export JULIA_PKG_SERVER=https://mirrors.sjtug.sjtu.edu.cn/julia&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Windows Powershell: &lt;code&gt;$env:JULIA_PKG_SERVER = &#39;https://mirrors.sjtug.sjtu.edu.cn/julia&#39;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;也可以利用 JuliaCN 社区维护的中文本地化工具包 &lt;a href=&#34;https://github.com/JuliaCN/JuliaZH.jl&#34;&gt;JuliaZH&lt;/a&gt; 来进行切换：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; JuliaZH &lt;span style=&#34;color:#75715e&#34;&gt;# 在 using 时会自动切换到国内的镜像站&lt;/span&gt;
JuliaZH&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;set_mirror(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SJTUG&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#75715e&#34;&gt;# 也可以选择手动切换到 BFSU 镜像&lt;/span&gt;
JuliaZH&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mirrors &lt;span style=&#34;color:#75715e&#34;&gt;# 查询记录的上游信息&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;永久使用&#34;&gt;永久使用&lt;/h3&gt;
&lt;p&gt;不同系统和命令行下永久设定环境变量的方式也不相同，例如 Linux Bash 下可以通过修改 &lt;code&gt;~/.bashrc&lt;/code&gt; 文件实现该目的：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# ~/.bashrc
export JULIA_PKG_SERVER=https://mirrors.sjtug.sjtu.edu.cn/julia
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;此外，这里再提供一种针对 Julia 的全平台通用的方式：&lt;code&gt;$JULIA_DEPOT_PATH/config/startup.jl&lt;/code&gt;
( 默认为 &lt;code&gt;~/.julia/config/startup.jl&lt;/code&gt; ) 文件定义了每次启动 Julia 时都会执行的命令，编辑该文件，添加以下内容即可：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# ~/.julia/config/startup.jl&lt;/span&gt;
ENV[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JULIA_PKG_SERVER&amp;#34;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirrors.sjtug.sjtu.edu.cn/julia&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;也可以选择使用 &lt;code&gt;JuliaZH&lt;/code&gt; 来一键修改/创建 &lt;code&gt;startup.jl&lt;/code&gt; 文件：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; JuliaZH&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generate_startup(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SJTUG&amp;#34;&lt;/span&gt;)
┌ Info&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; 添加 PkgServer
│   服务器地址 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirrors.sjtug.sjtu.edu.cn/julia&amp;#34;&lt;/span&gt;
└   配置文件 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/root/.julia/config/startup.jl&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;若要临时禁止，可以通过 &lt;code&gt;julia --startup-file=no&lt;/code&gt; 来取消执行 &lt;code&gt;startup.jl&lt;/code&gt; 文件。&lt;/p&gt;
&lt;h2 id=&#34;常见问题&#34;&gt;常见问题&lt;/h2&gt;
&lt;h3 id=&#34;加快-condajl-相关操作的速度&#34;&gt;加快 Conda.jl 相关操作的速度&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;Conda.jl&lt;/code&gt; 的加速分为两部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;conda&lt;/code&gt; 的安装：如果系统中没有找到 &lt;code&gt;conda&lt;/code&gt; 的话，&lt;code&gt;Conda.jl&lt;/code&gt; 会下载并安装一份 miniconda。如果这一步下载非常缓慢的话，你可以提前从 &lt;a href=&#34;https://mirrors.bfsu.edu.cn/anaconda/archive/&#34;&gt;BFSU 镜像站&lt;/a&gt;下载并安装 anaconda，然后通过设置环境变量 &lt;code&gt;CONDA_JL_HOME=$HOME/anaconda3&lt;/code&gt; 来指定 &lt;code&gt;Conda.jl&lt;/code&gt; 所使用的&lt;code&gt;conda&lt;/code&gt;，这样就避免重复下载 &lt;code&gt;miniconda&lt;/code&gt;. （&lt;code&gt;$HOME/anaconda3&lt;/code&gt;是 anaconda3 的默认安装位置，你可能需要根据具体情况进行调整。）&lt;/li&gt;
&lt;li&gt;&lt;code&gt;conda add&lt;/code&gt; 等操作的加速：这个只需要配置 anaconda 镜像源即可，即修改 &lt;code&gt;~/.condarc&lt;/code&gt; 文件。具体的配置可以查看镜像站中 anaconda 镜像的使用说明。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;为什么有些包的下载还是很慢&#34;&gt;为什么有些包的下载还是很慢？&lt;/h3&gt;
&lt;p&gt;有两类数据不会被镜像：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在 &lt;code&gt;deps/build.jl&lt;/code&gt; 文件中硬编码的下载地址，例如 &lt;a href=&#34;https://github.com/jheinen/GR.jl/blob/70f025d5cb439d036409f1985107cb5e1615097f/deps/build.jl#L116&#34;&gt;GR&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;在 &lt;code&gt;Artifacts.toml&lt;/code&gt; 中没有给出 &lt;code&gt;download&lt;/code&gt; 项的资源, 例如 &lt;a href=&#34;https://github.com/JuliaImages/TestImages.jl/blob/eaa94348df619c65956e8cfb0032ecddb7a29d3a/Artifacts.toml&#34;&gt;TestImages&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在安装包含这两类数据的包时，其数据依然是从原始地址进行下载，因此若网络不稳定则可能会在 &lt;code&gt;build&lt;/code&gt; 阶段报错。&lt;/p&gt;
&lt;h3 id=&#34;为什么注册表还是从原地址下载&#34;&gt;为什么注册表还是从原地址下载？&lt;/h3&gt;
&lt;p&gt;Julia &lt;code&gt;v1.4.0&lt;/code&gt; 之前的版本采用的是 &lt;code&gt;git clone&lt;/code&gt; 的方式拉取注册表。为了保持兼容性，如果现有的注册表是一个完整的 git 仓库的话，
那么即使设置了 PkgServer 作为上游镜像也依然会通过 &lt;code&gt;git&lt;/code&gt; 来进行更新，换句话说，不会通过镜像站来下载注册表数据。&lt;/p&gt;
&lt;p&gt;以默认注册表 &lt;code&gt;General&lt;/code&gt; 为例，只需要手动将其重置到镜像站即可：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;删除当前注册表：&lt;code&gt;(@v1.4) pkg&amp;gt; registry rm General&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;从镜像站重新下载数据：&lt;code&gt;(@v1.4) pkg&amp;gt; registry add General&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;为什么有些包还是从原地址下载&#34;&gt;为什么有些包还是从原地址下载？&lt;/h3&gt;
&lt;p&gt;镜像站只镜像注册表中记录的包，因此如果某些包是通过指定 URL 的方式来安装的话，那么该包的更新不会从镜像站进行下载。
这常见于那些还未注册的包及其版本，例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;]add Flux&lt;span style=&#34;color:#75715e&#34;&gt;#master&lt;/span&gt;
]add https&lt;span style=&#34;color:#f92672&#34;&gt;://&lt;/span&gt;github&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;com&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;FluxML&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jl&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;git
Pkg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(PackageSpec(url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://github.com/FluxML/Flux.jl.git&amp;#34;&lt;/span&gt;))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>julia-releases</title>
      <link>https://sjtug.org/post/mirror-help/julia-releases/</link>
      <pubDate>Wed, 05 Aug 2020 12:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/julia-releases/</guid>
      <description>&lt;h2 id=&#34;julia-二进制安装程序&#34;&gt;Julia 二进制安装程序&lt;/h2&gt;
&lt;p&gt;Julia 是一个全新的以科学计算为核心的通用编程语言，本镜像为其二进制发行程序。关于 Julia 下各种工具包的安装，请使用 &lt;code&gt;julia&lt;/code&gt; 镜像。&lt;/p&gt;
&lt;p&gt;这里仅镜像 &lt;a href=&#34;https://julialang.org/downloads/&#34;&gt;JuliaLang Downloads&lt;/a&gt; 中提供的稳定发行版以及 rc 版本。每日构建的测试版 (nightlies) 以及
&lt;a href=&#34;http://junolab.org/&#34;&gt;Juno&lt;/a&gt;/&lt;a href=&#34;https://juliacomputing.com/products/juliapro&#34;&gt;Julia Pro&lt;/a&gt;等 IDE 版本不包括在内。&lt;/p&gt;
&lt;p&gt;尽管一些包管理工具（例如 &lt;code&gt;apt&lt;/code&gt;, &lt;code&gt;pacman&lt;/code&gt;, &lt;code&gt;conda&lt;/code&gt;, &lt;code&gt;choco&lt;/code&gt;) 中提供有 Julia，但是这些工具或多或少都存在一些由二进制
依赖导致的问题，因此官方推荐的方式是根据自己的使用平台下载相应的二进制程序，然后通过解压的方式进行手动安装。&lt;/p&gt;
&lt;h2 id=&#34;julia-一键安装&#34;&gt;Julia 一键安装&lt;/h2&gt;
&lt;p&gt;对于习惯命令行的用户而言，&lt;a href=&#34;https://github.com/johnnychen94/jill.py&#34;&gt;jill.py&lt;/a&gt; 是一个社区维护的全平台下一键安装
Julia 的命令行工具。&lt;/p&gt;
&lt;p&gt;安装/更新 &lt;code&gt;jill&lt;/code&gt;： &lt;code&gt;pip install jill --user -U&lt;/code&gt; (需要 Python &lt;code&gt;3.6&lt;/code&gt; 或更新的版本)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装 Julia：&lt;code&gt;jill install [VERSION] [--upstream UPSTREAM] [--confirm]&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;jill install&lt;/code&gt;：最新的 &lt;code&gt;x.y.z&lt;/code&gt; 版本&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jill install --confirm&lt;/code&gt;：无需交互确认直接安装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jill install --upstream SJTUG&lt;/code&gt;：从本镜像站下载并安装&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jill install 1.5&lt;/code&gt;：安装最新的 &lt;code&gt;1.5.z&lt;/code&gt; 版本&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;查询现存的上游镜像：&lt;code&gt;jill upstream&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;帮助文档：&lt;code&gt;jill [COMMAND] --help&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;jill --help&lt;/code&gt;：查询存在的 &lt;code&gt;jill&lt;/code&gt; 命令&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jill install --help&lt;/code&gt;：查询 &lt;code&gt;install&lt;/code&gt; 命令的使用方式&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;利用 &lt;code&gt;jill&lt;/code&gt; 安装完成后即可通过在命令行执行 &lt;code&gt;julia&lt;/code&gt;/&lt;code&gt;julia-1&lt;/code&gt;/&lt;code&gt;julia-1.5&lt;/code&gt; 来启动不同版本的 Julia.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>mongodb</title>
      <link>https://sjtug.org/post/mirror-help/mongodb/</link>
      <pubDate>Sat, 01 Aug 2020 23:30:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/mongodb/</guid>
      <description>&lt;p&gt;mongodb 源是 &lt;a href=&#34;http://repo.mongodb.org&#34;&gt;repo.mongodb.org&lt;/a&gt; 的全量同步。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用说明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;请参照官方教程配置并安装 &lt;a href=&#34;https://docs.mongodb.com/manual/administration/install-on-linux/&#34;&gt;https://docs.mongodb.com/manual/administration/install-on-linux/&lt;/a&gt;。
在安装过程中，把 &lt;code&gt;https://repo.mongodb.org/&lt;/code&gt; 替换为 &lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/mongodb/&lt;/code&gt;。比如在 Ubuntu focal 中使用时，可以执行以下指令。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget -qO - https://www.mongodb.org/static/pgp/server-4.4.asc | apt-key add -
echo &amp;quot;deb [ arch=amd64,arm64 ] https://mirrors.sjtug.sjtu.edu.cn/mongodb/apt/ubuntu/ focal/mongodb-org/4.4 multiverse&amp;quot; | tee /etc/apt/sources.list.d/mongodb-org-4.4.list
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>crates.io</title>
      <link>https://sjtug.org/post/mirror-help/crates.io/</link>
      <pubDate>Thu, 09 Jul 2020 01:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/crates.io/</guid>
      <description>&lt;p&gt;编辑 &lt;code&gt;~/.cargo/config.toml&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[source]

[source.mirror]
registry = &amp;quot;sparse+https://mirrors.sjtug.sjtu.edu.cn/crates.io-index/&amp;quot;

[source.crates-io]
replace-with = &amp;quot;mirror&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;若您的 cargo 版本低于 1.68，请使用以下配置&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[source]

[source.mirror]
registry = &amp;quot;https://mirrors.sjtug.sjtu.edu.cn/git/crates.io-index/&amp;quot;

[source.crates-io]
replace-with = &amp;quot;mirror&amp;quot;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>git/crates.io-index</title>
      <link>https://sjtug.org/post/mirror-help/creates.io.git/</link>
      <pubDate>Thu, 09 Jul 2020 01:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/creates.io.git/</guid>
      <description>&lt;p&gt;编辑 &lt;code&gt;~/.cargo/config&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[source]

[source.mirror]
registry = &amp;quot;https://mirrors.sjtug.sjtu.edu.cn/git/crates.io-index/&amp;quot;

[source.crates-io]
replace-with = &amp;quot;mirror&amp;quot;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>cran</title>
      <link>https://sjtug.org/post/mirror-help/cran/</link>
      <pubDate>Sat, 04 Jul 2020 15:33:04 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/cran/</guid>
      <description>&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;在安装时指定 repo。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;install.packages&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lattice&amp;#34;&lt;/span&gt;, repos&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirrors.sjtug.sjtu.edu.cn/cran/&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 &lt;code&gt;.Rprofile&lt;/code&gt; 中设置默认 repo。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-R&#34; data-lang=&#34;R&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;options&lt;/span&gt;(repos&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;structure&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;c&lt;/span&gt;(CRAN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirrors.sjtug.sjtu.edu.cn/cran/&amp;#34;&lt;/span&gt;)))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>镜像站将于4月20日凌晨2点维护</title>
      <link>https://sjtug.org/post/mirror-news/2020-04-18-maintain/</link>
      <pubDate>Sat, 18 Apr 2020 19:00:00 -0400</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2020-04-18-maintain/</guid>
      <description>&lt;p&gt;SJTUG 软件源镜像站 将在 2020年4月20日 凌晨2时 UTC+8起进行服务器维护，届时服务将会出现短时间的不可用，希望大家予以谅解。预计维护时间：2小时。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>关于19年10月软件源日志泄漏的通告</title>
      <link>https://sjtug.org/post/mirror-news/2019-10-10-data-leak/</link>
      <pubDate>Thu, 10 Oct 2019 19:37:00 -0700</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2019-10-10-data-leak/</guid>
      <description>&lt;h1 id=&#34;发生了什么&#34;&gt;发生了什么&lt;/h1&gt;
&lt;p&gt;由于镜像状态页面的Access Token未被合理限权，未授权外部用户可以查看软件源的所有日志。&lt;/p&gt;
&lt;h1 id=&#34;范围&#34;&gt;范围&lt;/h1&gt;
&lt;p&gt;2018年4月3日2019年10月10日的日志，其中可能会对用户造成影响的内容包括：用户的IP、访问时间与路径&lt;/p&gt;
&lt;h1 id=&#34;目前采取的措施&#34;&gt;目前采取的措施&lt;/h1&gt;
&lt;p&gt;目前已经此漏洞已被以下措施修复：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;注销了之前未被限权的Access Token&lt;/li&gt;
&lt;li&gt;更换了日志账户的Account Token&lt;/li&gt;
&lt;li&gt;在完成日志权限模型之前，暂时停止日志上传&lt;/li&gt;
&lt;li&gt;更换了泄漏的代理后端的IP，并换用了随机性更强的域名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;之后将会更加审慎处理相关信息的接口，保障数据安全。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pypi镜像源改为反代</title>
      <link>https://sjtug.org/post/mirror-news/2019-10-09-remove-pypi/</link>
      <pubDate>Wed, 09 Oct 2019 22:23:00 -0700</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2019-10-09-remove-pypi/</guid>
      <description>&lt;p&gt;由于PyPI镜像占用空间过大，经过权衡我们决定放弃PyPI的全量镜像。出于兼容性考虑，https://mirrors.sjtug.sjtu.edu.cn/pypi/web 现在反代 &lt;a href=&#34;https://pypi.org&#34;&gt;https://pypi.org&lt;/a&gt; （与原有URL相同，已有用户不必进行更改）。有需要的用户可以迁移到其他镜像或继续使用反代服务。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG 技术分享：Build system, lazy evaluation and incremental computation</title>
      <link>https://sjtug.org/post/2019-09-18-build-system/</link>
      <pubDate>Thu, 12 Sep 2019 16:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2019-09-18-build-system/</guid>
      <description>&lt;p&gt;在9月18日我们将会进行一次SJTUG技术分享以及开学吃锅活动！&lt;/p&gt;
&lt;p&gt;本次带来技术分享的是张震学长，技术分享结束后是吃锅活动，欢迎大家参加技术分享/吃锅/both！&lt;/p&gt;
&lt;p&gt;技术分享活动时间：9月18日 18:00-19:00
地点：新图书馆 E216&lt;/p&gt;
&lt;p&gt;标题：Build system, lazy evaluation and incremental computation&lt;/p&gt;
&lt;p&gt;摘要：什么是 Build System（构建系统）的本质？工程实践中为什么有 make、bazel 等众多“轮子”？它们之间的区别是什么？Build system 和更为基础的 Lazy Evaluation（惰性求值）和 Incremental Computation（增量计算）这两种紧密联系的计算概念又有何联系？如何在你的开发实践中运用惰性求值和增量计算？这些概念在浏览器布局引擎、自动代码生成等应用里有什么样的应用？这次分享活动将从实际代码出发来探讨这些话题，并思考算法开发的未来趋势。&lt;/p&gt;
&lt;p&gt;届时会通过 teamviewer、&lt;a href=&#34;https://live.bilibili.com/6254516&#34;&gt;bilibili 直播间&lt;/a&gt; 等进行现场直播，slides 会上传到 &lt;a href=&#34;https://github.com/sjtug/sharing&#34;&gt;https://github.com/sjtug/sharing&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像站将于21日凌晨2点维护</title>
      <link>https://sjtug.org/post/mirror-news/2019-06-19-maintain/</link>
      <pubDate>Wed, 19 Jun 2019 13:51:00 -0700</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2019-06-19-maintain/</guid>
      <description>&lt;p&gt;SJTUG 软件源镜像站 将在 2019年6月21日 凌晨2时 UTC+8起进行服务器维护，届时服务将会出现短时间的不可用，希望大家予以谅解。预计维护时间：2小时。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG 技术分享：任务型对话概览</title>
      <link>https://sjtug.org/post/2019-04-01-task-oriented-dialogue/</link>
      <pubDate>Mon, 01 Apr 2019 19:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2019-04-01-task-oriented-dialogue/</guid>
      <description>&lt;p&gt;周一（4月1日）晚 19:00 将在 图书馆主馆 E312 进行 SJTUG 技术分享，欢迎大家带电脑前来参加。本次分享内容为：&lt;/p&gt;
&lt;p&gt;任务型对话概览 @ 刘啸远&lt;/p&gt;
&lt;p&gt;届时会通过 teamviewer、&lt;a href=&#34;https://live.bilibili.com/6254516&#34;&gt;bilibili 直播间&lt;/a&gt; 等进行现场直播，slides 会上传到 &lt;a href=&#34;https://github.com/sjtug/sharing&#34;&gt;https://github.com/sjtug/sharing&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像站已支持TLS v1.3访问</title>
      <link>https://sjtug.org/post/mirror-news/2019-03-06-tls-1.3/</link>
      <pubDate>Wed, 06 Mar 2019 20:00:00 -0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2019-03-06-tls-1.3/</guid>
      <description>&lt;p&gt;镜像站现已正式支持TLS 1.3访问。使用 curl &amp;gt;= 7.52.0 的软件会自动采用TLS 1.3以降低访问延时。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像站已于01/05恢复正常</title>
      <link>https://sjtug.org/post/mirror-news/2019-01-04-outage/</link>
      <pubDate>Fri, 04 Jan 2019 20:30:00 -0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2019-01-04-outage/</guid>
      <description>&lt;p&gt;由于网页服务器异常crash，镜像站于1月4日14时到5日3时期间无法正常访问。目前已经修复，欢迎大家继续使用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG 技术分享：C&#43;&#43;中的运行期与编译期多态</title>
      <link>https://sjtug.org/post/2018-12-15-polymorphism-in-cpp/</link>
      <pubDate>Sat, 08 Dec 2018 19:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2018-12-15-polymorphism-in-cpp/</guid>
      <description>&lt;p&gt;下周六（15日）晚 19:00 将在 李政道图书馆 209 进行 SJTUG 技术分享，欢迎大家带电脑前来参加。本次分享内容为：&lt;/p&gt;
&lt;p&gt;C++中的运行期与编译期多态 (Runtime and Compile-Time Polymorphism) in C++ @ 任云玮&lt;/p&gt;
&lt;p&gt;届时会通过 teamviewer、&lt;a href=&#34;https://live.bilibili.com/6254516&#34;&gt;bilibili 直播间&lt;/a&gt; 等进行现场直播，slides 会上传到 &lt;a href=&#34;https://github.com/sjtug/sharing&#34;&gt;https://github.com/sjtug/sharing&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像站11/22 6:31开始服务暂时不可用</title>
      <link>https://sjtug.org/post/mirror-news/2018-11-22-outage/</link>
      <pubDate>Thu, 22 Nov 2018 05:55:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2018-11-22-outage/</guid>
      <description>&lt;p&gt;镜像站在11/22早6:31开始，服务暂时不可用，目前我们正在调查原因。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像站将在 11/22 凌晨3时 UTC&#43;8维护</title>
      <link>https://sjtug.org/post/mirror-news/2018-11-20-maintain/</link>
      <pubDate>Tue, 20 Nov 2018 11:55:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2018-11-20-maintain/</guid>
      <description>&lt;p&gt;SJTUG 软件源镜像站 将在2018年11月22日 凌晨3时 UTC+8起进行服务器维护，届时服务将会出现短时间的不可用，希望大家予以谅解。预计维护时间：1小时。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>新增homebrew与raspbian/raspberrypi镜像</title>
      <link>https://sjtug.org/post/mirror-news/2018-06-15-raspbian-homebrew/</link>
      <pubDate>Fri, 15 Jun 2018 15:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2018-06-15-raspbian-homebrew/</guid>
      <description>&lt;p&gt;新增了MacOS的homebrew包管理器与适用于树莓派的raspbian/raspberrypi仓库的镜像。&lt;/p&gt;
&lt;p&gt;欢迎大家查看&lt;code&gt;git/homebrew-{core/cask}.git&lt;/code&gt;、&lt;code&gt;homebrew-bottles&lt;/code&gt;与&lt;code&gt;raspbian&lt;/code&gt;/&lt;code&gt;raspberrypi&lt;/code&gt;了解如何使用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG 2018 暑期课堂预告</title>
      <link>https://sjtug.org/post/2018-06-06-summer-class/</link>
      <pubDate>Wed, 06 Jun 2018 19:35:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2018-06-06-summer-class/</guid>
      <description>&lt;p&gt;6-30 Update: 请大家注意，由于社总安排变更，上课地点改为东中院 1-103&lt;/p&gt;
&lt;p&gt;Update: 课程具体时间地点安排已更新&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.wjx.top/m/24873152.aspx&#34;&gt;报名链接点这里&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;课程安排情况（社总信息）：&lt;a href=&#34;https://mp.weixin.qq.com/s/OiJNz16c3uQoRc8vkn7CxA&#34;&gt;https://mp.weixin.qq.com/s/OiJNz16c3uQoRc8vkn7CxA&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;SJTUG 本次暑假小学期再次开设了夏季课堂，面向对编程及相关技术感兴趣的同学进行 5~6 次分享，主讲人除 SJTUG 成员外，预计还将邀请在业界的学长做 Guest Talk/Sharing，以下是主要内容预告（暂定，持续更新中）：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;活动&lt;/th&gt;
&lt;th&gt;时间&lt;/th&gt;
&lt;th&gt;地点&lt;/th&gt;
&lt;th&gt;主讲人&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Tutorial&lt;/td&gt;
&lt;td&gt;07.03 19:00&lt;/td&gt;
&lt;td&gt;东中院 1-103&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://evensgn.com&#34;&gt;@Evensgn&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Git 使用教学&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sharing&lt;/td&gt;
&lt;td&gt;07.06 19:00&lt;/td&gt;
&lt;td&gt;东中院 1-103&lt;/td&gt;
&lt;td&gt;@littleRound&lt;/td&gt;
&lt;td&gt;计算机工作原理漫谈&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Guest Talk&lt;/td&gt;
&lt;td&gt;07.10 19:00&lt;/td&gt;
&lt;td&gt;东中院 1-103&lt;/td&gt;
&lt;td&gt;周健，依图科技研发总监，上海交大计算机系学士、硕士；亚洲首个世界大学生程序设计竞赛世界冠军&lt;/td&gt;
&lt;td&gt;从摩尔定律到行星级的智能系统————漫谈 AI 时代的过去、现在和将来&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sharing&lt;/td&gt;
&lt;td&gt;07.13 19:00&lt;/td&gt;
&lt;td&gt;东中院 1-103&lt;/td&gt;
&lt;td&gt;@footoredo&lt;/td&gt;
&lt;td&gt;浅谈密码学与密码&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sharing&lt;/td&gt;
&lt;td&gt;07.17 19:00&lt;/td&gt;
&lt;td&gt;东中院 1-103&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://io-meter.com&#34;&gt;@茄子(ant_sz)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;基于 KV Store 的实时多维数据分析&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Guest Sharing&lt;/td&gt;
&lt;td&gt;07.20 19:00&lt;/td&gt;
&lt;td&gt;东中院 1-103&lt;/td&gt;
&lt;td&gt;施闻轩，PingCAP 工程师&lt;/td&gt;
&lt;td&gt;A small bite of Rust&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;欢迎感兴趣的同学们参加！&lt;/p&gt;
&lt;p&gt;暑期课堂结束之后，所有讲者的 slides 会在我们的&lt;a href=&#34;https://github.com/sjtug/sharing&#34;&gt;Github仓库&lt;/a&gt; 公开，欢迎大家 Star～&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ROS源上游故障</title>
      <link>https://sjtug.org/post/mirror-news/2018-06-04-ros-failure/</link>
      <pubDate>Mon, 04 Jun 2018 19:40:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2018-06-04-ros-failure/</guid>
      <description>&lt;p&gt;今天中午12:00左右，ROS上游唯一的Rsync源出现故障无法进行同步，大部分国内镜像站都会受到影响。已经同步的包仍然可以正常下载，但12:00以后的更新将无法反馈到用户。目前我们在密切观察这一现象，若短时间内rsync源无法恢复，我们将会尝试切换到apt-cache源。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像源维护完成</title>
      <link>https://sjtug.org/post/mirror-news/2018-05-29-maintain-complete/</link>
      <pubDate>Tue, 29 May 2018 23:30:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2018-05-29-maintain-complete/</guid>
      <description>&lt;p&gt;SJTUG 镜像源在今天晚上 11:00 ~ 11:21 按计划进行了例行维护，在维护期间服务暂时不可用，目前已经恢复正常。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像站将在05/29 晚11:00 UTC&#43;8维护</title>
      <link>https://sjtug.org/post/mirror-news/2018-05-29-maintain/</link>
      <pubDate>Tue, 29 May 2018 11:55:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2018-05-29-maintain/</guid>
      <description>&lt;p&gt;SJTUG 软件源镜像站 将在2018年5月29日晚11:00 UTC+8起进行服务器维护，届时服务将会出现短时间的不可用，希望大家予以谅解。维护时间据估计不会超过30分钟。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG 镜像源加入 GNU、CTAN 官方镜像源列表</title>
      <link>https://sjtug.org/post/mirror-news/2018-05-17-gnu-ctan-repo/</link>
      <pubDate>Thu, 17 May 2018 21:40:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2018-05-17-gnu-ctan-repo/</guid>
      <description>&lt;p&gt;SJTUG 软件源镜像站 v2 正式上线后，现已加入 GNU、CTAN 官方镜像源列表：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.gnu.org/prep/ftp.html&#34;&gt;GNU Mirror List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ctan.org/mirrors&#34;&gt;CTAN Sites&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG 2018 第 4 次分享：合作训练（Cooperative Training）</title>
      <link>https://sjtug.org/post/2018-05-12-cooperative-training/</link>
      <pubDate>Tue, 08 May 2018 19:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2018-05-12-cooperative-training/</guid>
      <description>&lt;p&gt;本周六（12日）晚 19:00 将在 图书馆主馆 E216 进行本学期第 4 次分享，欢迎大家带电脑前来参加。本次分享内容为：&lt;/p&gt;
&lt;p&gt;合作训练：CoT Cooperative Training @ 卢思迪&lt;/p&gt;
&lt;p&gt;届时会通过 teamviewer、&lt;a href=&#34;https://live.bilibili.com/6254516&#34;&gt;bilibili 直播间&lt;/a&gt; 等进行现场直播，slides 会上传到 &lt;a href=&#34;https://github.com/sjtug/sharing&#34;&gt;https://github.com/sjtug/sharing&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像源域名更换为mirrors.sjtug.sjtu.edu.cn</title>
      <link>https://sjtug.org/post/mirror-news/2018-05-07-domain-update/</link>
      <pubDate>Mon, 07 May 2018 15:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2018-05-07-domain-update/</guid>
      <description>&lt;p&gt;欢迎大家之后使用新域名访问&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG 2018 第 3 次分享：Rust 中的内存安全</title>
      <link>https://sjtug.org/post/2018-04-22-memory-safety-in-rust/</link>
      <pubDate>Sat, 14 Apr 2018 19:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2018-04-22-memory-safety-in-rust/</guid>
      <description>&lt;p&gt;本周日（22日）晚 19:00 将在 图书馆主馆 E309 进行本学期第 3 次分享，欢迎大家带电脑前来参加。本次分享内容为：&lt;/p&gt;
&lt;p&gt;Rust 中的内存安全 @ 张宇宁&lt;/p&gt;
&lt;p&gt;届时会通过teamviewer等进行现场直播，slides 会上传到 &lt;a href=&#34;https://github.com/sjtug/sharing&#34;&gt;https://github.com/sjtug/sharing&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG 2018第二次分享：Concatenative Programming 初探</title>
      <link>https://sjtug.org/post/2018-03-31-concatenative-programming/</link>
      <pubDate>Mon, 26 Mar 2018 21:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2018-03-31-concatenative-programming/</guid>
      <description>&lt;p&gt;本周六（31日）晚 19:00 将在 图书馆主馆 E216 进行本学期第二次分享，欢迎大家带电脑前来参加。本次分享内容为：&lt;/p&gt;
&lt;p&gt;Concatenative Programming 初探 @ 王竹阳&lt;/p&gt;
&lt;p&gt;届时会通过teamviewer等进行现场直播，slides 会上传到 &lt;a href=&#34;https://github.com/sjtug/sharing&#34;&gt;https://github.com/sjtug/sharing&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG 2018第一次分享：FOSS历史与Web开发入门</title>
      <link>https://sjtug.org/post/2018-03-10-intro/</link>
      <pubDate>Sat, 10 Mar 2018 21:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2018-03-10-intro/</guid>
      <description>&lt;p&gt;本周六（10日）晚7点将在 图书馆主馆 E210 进行本学期第一次分享，欢迎大家带电脑前来参加。内容有：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Linux 入门与开源社区 @ 骆铮&lt;/li&gt;
&lt;li&gt;Python Web Application 开发入门 @ 范舟&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;届时会通过teamviewer等进行现场直播，slides 会上传到 &lt;a href=&#34;https://github.com/sjtug/sharing&#34;&gt;https://github.com/sjtug/sharing&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>镜像源v2 Beta版上线！</title>
      <link>https://sjtug.org/post/mirror-news/2018-03-04-v2-beta/</link>
      <pubDate>Sun, 04 Mar 2018 22:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2018-03-04-v2-beta/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Haskell小课堂 01</title>
      <link>https://sjtug.org/post/2017-11-02-haskell-talk-01/</link>
      <pubDate>Thu, 02 Nov 2017 22:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2017-11-02-haskell-talk-01/</guid>
      <description>&lt;p&gt;Haskell 是一门默认惰性求值的纯函数式语言，在 stackoverflow 的统计中它是程序员在夜晚和双休日使用最多的语言。本周六的 Haskell 小课堂将带大家简单了解一下 Haskell 的语法和特性，以及代数数据类型、模式匹配、typeclass 等基础知识，为后续课程作铺垫。本次小课堂旨在从入门到入门，不需要前置知识。&lt;/p&gt;
&lt;p&gt;本周六下午3:00将由王竹阳同学在新图B118给大家带来Haskell小课堂的第一节课程，欢迎同学们前来探讨。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG例行分享：系统性能的测量与分析</title>
      <link>https://sjtug.org/post/2017-10-28-performance-measurement/</link>
      <pubDate>Sat, 28 Oct 2017 19:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2017-10-28-performance-measurement/</guid>
      <description>&lt;p&gt;本周六将由贾枭学长给大家分享系统性能的测量与分析的常用思路与技巧，欢迎大家前来。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/sjtug/sharing/tree/master/2017-10-28&#34;&gt;Slides下载&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>暑期课堂学生分流</title>
      <link>https://sjtug.org/post/2017-06-25-summer-class-schedule/</link>
      <pubDate>Sun, 25 Jun 2017 21:57:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2017-06-25-summer-class-schedule/</guid>
      <description>&lt;p&gt;由于暑期课堂报名人数接近90人，教室无法容纳这么多的人数，因此我们不得不采取分流措施。选择这门课的老师与同学建议按照以下表格前来上课。&lt;/p&gt;
&lt;p&gt;当然，如果您有特别感兴趣的话题可以随时来听，但可能会发生没有座位的情况。&lt;/p&gt;
&lt;h2 id=&#34;建议在第14周6月29日7月20日前来的老师与同学的手机后4位&#34;&gt;建议在第1、4周（6月29日/7月20日）前来的老师与同学的手机后4位&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;0076
0158
0203
1025
1991
2073
2180
2529
2537
2701
3081
3136
3253
3739
4746
5042
5301
5397
5425
5532
6265
6527
6708
6723
6985
7035
7051
7076
7586
7683
8038
8189
8851
9108
9481
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;以及学号是B045090027，没有填写手机号的同学&lt;/p&gt;
&lt;h2 id=&#34;建议在第23周7月7日7月13日前来的老师与同学的手机后4位&#34;&gt;建议在第2、3周（7月7日/7月13日）前来的老师与同学的手机后4位&lt;/h2&gt;
&lt;pre&gt;&lt;code&gt;0039
0069
0153
0159
0200
0320
0709
0874
1160
1172
1362
1691
1716
2127
2530
2596
2913
3215
3580
3680
4486
4648
4782
5028
5163
5209
5336
5585
5732
5831
5996
6090
6217
6241
6321
7065
7076
7317
7450
7597
7598
7931
7959
8127
8360
8525
8676
8972
9150
9371
9731
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>2017-SJTUG暑期课堂课程主页</title>
      <link>https://sjtug.org/post/2017-06-24-summer-class-portal/</link>
      <pubDate>Sat, 24 Jun 2017 20:29:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2017-06-24-summer-class-portal/</guid>
      <description>&lt;p&gt;这里是SJTUG 2017暑期课堂的课程主页，之后所有的课程时间、地点以本页为准，相关的资料也会在本页发放。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;UPDATE(06-25): &lt;a href=&#34;https://sjtug.org/post/2017-06-25-summer-class-schedule&#34;&gt;人员分流名单&lt;/a&gt;已经公布，请尽快查看自己的时间
UPDATE(06-29)：更新第一周课件及第二周时间地点
UPDATE(07-01)：更新第二周主题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;6月29日开源与自由软件历史&#34;&gt;6月29日/开源与自由软件历史&lt;/h2&gt;
&lt;p&gt;时间：6月29日（19周周四）18:00&lt;/p&gt;
&lt;p&gt;地点：东上309&lt;/p&gt;
&lt;p&gt;主讲人：&lt;a href=&#34;https://intmainreturn0.com&#34;&gt;@htfy96&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;课件：&lt;a href=&#34;http://sjtug.org/sharing/2017-06-29/&#34;&gt;在线查看&lt;/a&gt; &lt;a href=&#34;https://github.com/sjtug/sharing/tree/master/2017-06-29&#34;&gt;下载&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;7月7日git使用&#34;&gt;7月7日/Git使用&lt;/h2&gt;
&lt;p&gt;时间：&lt;strong&gt;7月7日（20周周五）20:30&lt;/strong&gt;（有更改）&lt;/p&gt;
&lt;p&gt;地点：东中4-302&lt;/p&gt;
&lt;p&gt;主讲人：&lt;a href=&#34;https://io-meter.com&#34;&gt;@茄子(ant_sz)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;课件：N/A&lt;/p&gt;
&lt;h2 id=&#34;7月13日game-theory-and-mechanism&#34;&gt;7月13日/Game Theory and Mechanism&lt;/h2&gt;
&lt;p&gt;时间：7月13日（21周周四）18:00&lt;/p&gt;
&lt;p&gt;地点：东上309&lt;/p&gt;
&lt;p&gt;主讲人：&lt;a href=&#34;javascript:;&#34;&gt;@Phijack&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;课件：N/A&lt;/p&gt;
&lt;h2 id=&#34;7月20日haskell-school-of-music&#34;&gt;7月20日/Haskell School of Music&lt;/h2&gt;
&lt;p&gt;时间：7月20日（22周周四）18:00&lt;/p&gt;
&lt;p&gt;地点：东上309&lt;/p&gt;
&lt;p&gt;主讲人：&lt;a href=&#34;http://codeworm96.github.io&#34;&gt;@codeworm96&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;课件：N/A&lt;/p&gt;
&lt;h2 id=&#34;获取最新资讯&#34;&gt;获取最新资讯&lt;/h2&gt;
&lt;p&gt;可以通过&lt;a href=&#34;http://sjtug.org/tags/summer_school/index.xml&#34;&gt;RSS订阅&lt;/a&gt;或关注我们的微信号@sjtunix获取最新资讯：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://sjtug.org/images/wechat_qrcode.jpg&#34; alt=&#34;wechat_qrcode&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG暑期课堂报名中！</title>
      <link>https://sjtug.org/post/2017-06-12-summer-class/</link>
      <pubDate>Mon, 12 Jun 2017 15:58:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2017-06-12-summer-class/</guid>
      <description>&lt;p&gt;UPDATE: &lt;a href=&#34;http://sjtug.org/post/2017-06-24-summer-class-portal/&#34;&gt;课程主页&lt;/a&gt;已经开通！&lt;/p&gt;
&lt;p&gt;SJTUG本次暑假开设了夏季第二课堂，将面向初学者与感兴趣同学的进行3～4次分享，主要内容见下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;日期&lt;/th&gt;
&lt;th&gt;地点&lt;/th&gt;
&lt;th&gt;主讲人&lt;/th&gt;
&lt;th&gt;内容&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;6月29日（19周周四）&lt;/td&gt;
&lt;td&gt;东上309&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://intmainreturn0.com&#34;&gt;@htfy96&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;开源与自由软件历史。以几个人物作为主线科普自由软件及其相关运动的起伏与发展，不需要代码水平的科普性质讲座。&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7月6日（20周周四）&lt;/td&gt;
&lt;td&gt;待定&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://io-meter.com&#34;&gt;@茄子(ant_sz)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;待定&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7月13日（21周周四）&lt;/td&gt;
&lt;td&gt;东上309&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;javascript:;&#34;&gt;@Phijack&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Game Theory and Mechanism&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7月20日（22周周四）&lt;/td&gt;
&lt;td&gt;东上309&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://codeworm96.github.io&#34;&gt;@codeworm96&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Haskell School of Music，探索用程序语言的方式对音乐进行抽象，不要求编程或音乐理论基础。&lt;a href=&#34;http://codeworm96.github.io/posts/2017-06-15-HSoM.html&#34;&gt;详细介绍点此&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;课堂将保证小规模，确保来的同学都有当面指导的机会。欢迎对技术感兴趣的同学来参加！我们尤其欢迎在Linux、自由软件、函数式编程等领域有兴趣的同学。&lt;/p&gt;
&lt;p&gt;强烈建议加最后的微信群以获取资料与课前信息。&lt;/p&gt;
&lt;p&gt;不管你是否已经毕业，还是只能来几节课，都欢迎填写这张表格报名：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wj.qq.com/s/1401085/f0a5&#34; target=&#34;_blank&#34; rel=&#34;nofollow&#34; style=&#34;color:#fff;font-size:20px; background:#5badf0;padding: 10px 20px 10px 20px;&#34;&gt;立即报名&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;之后，所有的Slides都会在我们的&lt;a href=&#34;https://github.com/sjtug/sharing&#34;&gt;Github仓库&lt;/a&gt;公开，欢迎Star～&lt;/p&gt;
&lt;p&gt;欢迎想来的同学长按识别二维码加群或加微信69oulciV@：
&lt;img src=&#34;https://user-images.githubusercontent.com/8121231/27035049-82b2b8c2-4fb2-11e7-84f9-ccf2c05be98c.jpg&#34; alt=&#34;SJTUG Summer Class2017&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GPG Sign Party &amp; Yubikey安利</title>
      <link>https://sjtug.org/post/2017-03-09-gpg-sign-party/</link>
      <pubDate>Thu, 09 Mar 2017 22:11:40 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2017-03-09-gpg-sign-party/</guid>
      <description>&lt;p&gt;本周日(12日)下午3点到5点，在新图E216将举行GPG Sign Party&amp;amp;Yubikey安利活动。将手把手教大家签发/交换密钥与加密、签名信息，欢迎参加！&lt;/p&gt;
&lt;p&gt;校内同学点击&lt;a href=&#34;http://studyroom.lib.sjtu.edu.cn/reserve_plus.asp&#34;&gt;这里加入学习室&lt;/a&gt;。
申请单号94388，密码165165&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG开学聚餐</title>
      <link>https://sjtug.org/post/2017-02-21-hotpot/</link>
      <pubDate>Tue, 21 Feb 2017 19:41:47 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2017-02-21-hotpot/</guid>
      <description>&lt;p&gt;又到了开学聚餐的时间啦！这次聚餐还是定在欧尚部落情，在本周六（25日）晚5:30GMT+8于拖鞋门前旗杆下集合。欢迎各位过来吃锅！&lt;/p&gt;
&lt;p&gt;如果时间安排不合适，可以填写&lt;a href=&#34;https://goo.gl/forms/tXNbYezH0pOeAHe83&#34;&gt;这个表单&lt;/a&gt;。如果时间冲突的同学多的话可能会进行调整&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>sjtug.org写作指南</title>
      <link>https://sjtug.org/post/2017-01-15-writing-guide/</link>
      <pubDate>Sun, 15 Jan 2017 23:12:56 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2017-01-15-writing-guide/</guid>
      <description>&lt;p&gt;这里介绍了一下发布新文章的步骤&lt;/p&gt;
&lt;h2 id=&#34;安装hugo-或直接新建文章&#34;&gt;安装Hugo, 或直接新建文章&lt;/h2&gt;
&lt;p&gt;安装&lt;code&gt;hugo&lt;/code&gt;然后&lt;code&gt;hugo new post/YYYY-MM-DD-article-title.md&lt;/code&gt;；或直接新建&lt;code&gt;content/post/YYYY-MM-DD-article-title.md&lt;/code&gt;，手动指定&lt;code&gt;date&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;软件源新闻放在&lt;code&gt;content/post/mirror-news&lt;/code&gt;下面，带上&lt;code&gt;mirror-news&lt;/code&gt;的tag。&lt;/p&gt;
&lt;p&gt;软件源帮助放在&lt;code&gt;content/post/mirror-help&lt;/code&gt;下面，带上&lt;code&gt;mirror-help&lt;/code&gt;的tag，title设定成和name相同（注意大小写）。&lt;/p&gt;
&lt;h2 id=&#34;front-matters&#34;&gt;Front matters&lt;/h2&gt;
&lt;p&gt;头部&lt;code&gt;+++&lt;/code&gt;的front matters部分，可以指定的部分有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;title = &amp;quot;article title&amp;quot;&lt;/code&gt; 必填&lt;/li&gt;
&lt;li&gt;&lt;code&gt;author = &amp;quot;htfy96&amp;quot;&lt;/code&gt; 必填&lt;/li&gt;
&lt;li&gt;&lt;code&gt;tags = [&amp;quot;tag1&amp;quot;, &amp;quot;tag2&amp;quot;]&lt;/code&gt; 建议填写，只有包含&lt;code&gt;news&lt;/code&gt; tag的文章才会在首页显示，其它常用tag包括&lt;code&gt;announcement&lt;/code&gt;, &lt;code&gt;guide&lt;/code&gt;, &lt;code&gt;sharing&lt;/code&gt;等&lt;/li&gt;
&lt;li&gt;&lt;code&gt;activity_time = &amp;quot;2017-01-08T15:00:00+08:00&amp;quot;&lt;/code&gt;，格式同date，当有&lt;code&gt;sharing&lt;/code&gt;标签时建议填写，代表活动开始时间&lt;/li&gt;
&lt;li&gt;&lt;code&gt;activity_place = &amp;quot;Main Library&amp;quot;&lt;/code&gt;，同上，代表活动地点&lt;/li&gt;
&lt;li&gt;&lt;code&gt;draft = true&lt;/code&gt;，当不想立即发布时才填写，默认情况&lt;code&gt;false&lt;/code&gt;不用填写&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;测试并提交&#34;&gt;测试并提交&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;使用&lt;code&gt;hugo server&lt;/code&gt;看看最终效果是否理想&lt;/li&gt;
&lt;li&gt;提交到 &lt;a href=&#34;https://github.com/sjtug/portal&#34;&gt;https://github.com/sjtug/portal&lt;/a&gt; ，主页会自动生成到sjtug.org&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG新版首页上线</title>
      <link>https://sjtug.org/post/2017-01-14-announcing-new-portal/</link>
      <pubDate>Sat, 14 Jan 2017 20:55:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2017-01-14-announcing-new-portal/</guid>
      <description>&lt;p&gt;我们的首页已经更新到基于Hugo的版本，希望能给大家带来更好的阅读体验。&lt;/p&gt;
&lt;p&gt;接下来这里将会加入例行分享的报道及一些技术文章，欢迎大家订阅。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG例行分享：HaLVM</title>
      <link>https://sjtug.org/post/2017-01-08-halvm/</link>
      <pubDate>Sun, 08 Jan 2017 20:55:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2017-01-08-halvm/</guid>
      <description>&lt;p&gt;本周日（1月8日）下午15:00 - 17:30，@张震巨巨在新图E210给大家介绍HaLVM项目，欢迎大家来参加分享&lt;/p&gt;
&lt;p&gt;项目地址：&lt;a href=&#34;https://github.com/GaloisInc/HaLVM&#34;&gt;Github/HaLVM&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;巨巨主页：&lt;a href=&#34;https://github.com/izgzhen&#34;&gt;Github/izgzhen&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;HaLVM(Haskell Lightweight Virtual Machine)是一个让Glasgow Haskell Compiler套件直接在Xen虚拟环境下运行的项目。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;分享资料&lt;/strong&gt; : &lt;a href=&#34;https://github.com/sjtug/sharing/tree/master/2017-01-08&#34;&gt;sjtug/sharing/HaLVM&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG例行分享：Life of a packet</title>
      <link>https://sjtug.org/post/2016-11-12-life-of-a-packet/</link>
      <pubDate>Sat, 12 Nov 2016 23:40:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2016-11-12-life-of-a-packet/</guid>
      <description>&lt;p&gt;11月12日晚18:00将在光彪楼二楼进行例行分享，由@贾枭 学长给大家带来分享 Life of a packet，欢迎大家来参与活动&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分享资料&lt;/strong&gt; : &lt;a href=&#34;https://github.com/sjtug/sharing/tree/master/2016-11-12&#34;&gt;sjtug/sharing&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG例行分享：简单的物理引擎</title>
      <link>https://sjtug.org/post/2016-10-29-physical-engine/</link>
      <pubDate>Sat, 29 Oct 2016 23:45:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2016-10-29-physical-engine/</guid>
      <description>&lt;p&gt;10月29日晚18:00将在新图E316进行例行分享，由大一巨巨 @时光机 给大家带来「简单的物理引擎」分享，欢迎大家来参与活动&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分享资料&lt;/strong&gt; : &lt;a href=&#34;https://github.com/sjtug/sharing/tree/master/2016-10-16&#34;&gt;sjtug/sharing&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG例行分享：C11 Memory Model</title>
      <link>https://sjtug.org/post/2016-10-16-c11-memory-model/</link>
      <pubDate>Sun, 16 Oct 2016 22:45:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2016-10-16-c11-memory-model/</guid>
      <description>&lt;p&gt;10月16日晚18:00，@贾枭 学长在新图B416向大家介绍 C11 Memory Model 的有关知识。&lt;/p&gt;
&lt;p&gt;视频在 &lt;a href=&#34;https://www.liveedu.tv/sjtug/&#34;&gt;LiveEdu&lt;/a&gt; 可以看到。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分享资料&lt;/strong&gt; : &lt;a href=&#34;https://github.com/sjtug/sharing/tree/master/2016-10-16&#34;&gt;sjtug/sharing&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SJTUG例行分享：Dependent Type</title>
      <link>https://sjtug.org/post/2016-10-04-dependent-type/</link>
      <pubDate>Tue, 04 Oct 2016 22:55:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/2016-10-04-dependent-type/</guid>
      <description>&lt;p&gt;10月4日晚18:00 - 21:00，@邵成 @钱泽森 两位同学在新图E316向大家介绍 Dependent Type。&lt;/p&gt;
&lt;p&gt;邵成：Fun with Dependent Types in Haskell&lt;br&gt;
钱泽森：How to Write a Safe Printf in Agda&lt;/p&gt;
&lt;p&gt;视频在 &lt;a href=&#34;https://www.liveedu.tv/sjtug/&#34;&gt;LiveEdu&lt;/a&gt; 可以看到&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;分享资料&lt;/strong&gt; : &lt;a href=&#34;https://github.com/sjtug/sharing/tree/master/2016-10-04&#34;&gt;sjtug/sharing&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>喜迎校庆 SJTUG Mirrors加入Arch Linux镜像源</title>
      <link>https://sjtug.org/post/mirror-news/2016-04-07-arch-repo/</link>
      <pubDate>Thu, 07 Apr 2016 22:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2016-04-07-arch-repo/</guid>
      <description></description>
    </item>
    
    <item>
      <title>SJTUG Demo镜像源成立</title>
      <link>https://sjtug.org/post/mirror-news/2016-03-17-established/</link>
      <pubDate>Thu, 17 Mar 2016 22:00:00 +0800</pubDate>
      
      <guid>https://sjtug.org/post/mirror-news/2016-03-17-established/</guid>
      <description></description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://sjtug.org/post/goisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/goisforlovers/</guid>
      <description>&lt;p&gt;Hugo uses the excellent &lt;a href=&#34;http://golang.org/&#34;&gt;go&lt;/a&gt; &lt;a href=&#34;http://golang.org/pkg/html/template/&#34;&gt;html/template&lt;/a&gt; library for
its template engine. It is an extremely lightweight engine that provides a very
small amount of logic. In our experience that it is just the right amount of
logic to be able to create a good static website. If you have used other
template systems from different languages or frameworks you will find a lot of
similarities in go templates.&lt;/p&gt;
&lt;p&gt;This document is a brief primer on using go templates. The &lt;a href=&#34;http://golang.org/pkg/html/template/&#34;&gt;go docs&lt;/a&gt;
provide more details.&lt;/p&gt;
&lt;h2 id=&#34;introduction-to-go-templates&#34;&gt;Introduction to Go Templates&lt;/h2&gt;
&lt;p&gt;Go templates provide an extremely simple template language. It adheres to the
belief that only the most basic of logic belongs in the template or view layer.
One consequence of this simplicity is that go templates parse very quickly.&lt;/p&gt;
&lt;p&gt;A unique characteristic of go templates is they are content aware. Variables and
content will be sanitized depending on the context of where they are used. More
details can be found in the &lt;a href=&#34;http://golang.org/pkg/html/template/&#34;&gt;go docs&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;basic-syntax&#34;&gt;Basic Syntax&lt;/h2&gt;
&lt;p&gt;Go lang templates are html files with the addition of variables and
functions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Go variables and functions are accessible within {{ }}&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Accessing a predefined variable &amp;ldquo;foo&amp;rdquo;:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ foo }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Parameters are separated using spaces&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Calling the add function with input of 1, 2:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ add 1 2 }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Methods and fields are accessed via dot notation&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Accessing the Page Parameter &amp;ldquo;bar&amp;rdquo;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ .Params.bar }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Parentheses can be used to group items together&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ if or (isset .Params &amp;quot;alt&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;) }} Caption {{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;variables&#34;&gt;Variables&lt;/h2&gt;
&lt;p&gt;Each go template has a struct (object) made available to it. In hugo each
template is passed either a page or a node struct depending on which type of
page you are rendering. More details are available on the
&lt;a href=&#34;https://sjtug.org/layout/variables&#34;&gt;variables&lt;/a&gt; page.&lt;/p&gt;
&lt;p&gt;A variable is accessed by referencing the variable name.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;title&amp;gt;{{ .Title }}&amp;lt;/title&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Variables can also be defined and referenced.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ $address := &amp;quot;123 Main St.&amp;quot;}}
{{ $address }}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;functions&#34;&gt;Functions&lt;/h2&gt;
&lt;p&gt;Go template ship with a few functions which provide basic functionality. The go
template system also provides a mechanism for applications to extend the
available functions with their own. &lt;a href=&#34;https://sjtug.org/layout/functions&#34;&gt;Hugo template
functions&lt;/a&gt; provide some additional functionality we believe
are useful for building websites. Functions are called by using their name
followed by the required parameters separated by spaces. Template
functions cannot be added without recompiling hugo.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ add 1 2 }}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;includes&#34;&gt;Includes&lt;/h2&gt;
&lt;p&gt;When including another template you will pass to it the data it will be
able to access. To pass along the current context please remember to
include a trailing dot. The templates location will always be starting at
the /layout/ directory within Hugo.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ template &amp;quot;chrome/header.html&amp;quot; . }}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;logic&#34;&gt;Logic&lt;/h2&gt;
&lt;p&gt;Go templates provide the most basic iteration and conditional logic.&lt;/p&gt;
&lt;h3 id=&#34;iteration&#34;&gt;Iteration&lt;/h3&gt;
&lt;p&gt;Just like in go, the go templates make heavy use of range to iterate over
a map, array or slice. The following are different examples of how to use
range.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example 1: Using Context&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ range array }} 
    {{ . }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Example 2: Declaring value variable name&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{range $element := array}} 
    {{ $element }} 
{{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Example 2: Declaring key and value variable name&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{range $index, $element := array}}
    {{ $index }} 
    {{ $element }} 
{{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;h3 id=&#34;conditionals&#34;&gt;Conditionals&lt;/h3&gt;
&lt;p&gt;If, else, with, or, &amp;amp; and provide the framework for handling conditional
logic in Go Templates. Like range, each statement is closed with &lt;code&gt;end&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Go Templates treat the following values as false:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;false&lt;/li&gt;
&lt;li&gt;0&lt;/li&gt;
&lt;li&gt;any array, slice, map, or string of length zero&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Example 1: If&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;title&amp;quot; }}&amp;lt;h4&amp;gt;{{ index .Params &amp;quot;title&amp;quot; }}&amp;lt;/h4&amp;gt;{{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Example 2: If -&amp;gt; Else&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;alt&amp;quot; }} 
    {{ index .Params &amp;quot;alt&amp;quot; }}
{{else}}
    {{ index .Params &amp;quot;caption&amp;quot; }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Example 3: And &amp;amp; Or&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ if and (or (isset .Params &amp;quot;title&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;)) (isset .Params &amp;quot;attr&amp;quot;)}}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Example 4: With&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;An alternative way of writing &amp;ldquo;if&amp;rdquo; and then referencing the same value
is to use &amp;ldquo;with&amp;rdquo; instead. With rebinds the context &lt;code&gt;.&lt;/code&gt; within its scope,
and skips the block if the variable is absent.&lt;/p&gt;
&lt;p&gt;The first example above could be simplified as:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ with .Params.title }}&amp;lt;h4&amp;gt;{{ . }}&amp;lt;/h4&amp;gt;{{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Example 5: If -&amp;gt; Else If&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ if isset .Params &amp;quot;alt&amp;quot; }} 
    {{ index .Params &amp;quot;alt&amp;quot; }}
{{ else if isset .Params &amp;quot;caption&amp;quot; }}
    {{ index .Params &amp;quot;caption&amp;quot; }}
{{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;pipes&#34;&gt;Pipes&lt;/h2&gt;
&lt;p&gt;One of the most powerful components of go templates is the ability to
stack actions one after another. This is done by using pipes. Borrowed
from unix pipes, the concept is simple, each pipeline&amp;rsquo;s output becomes the
input of the following pipe.&lt;/p&gt;
&lt;p&gt;Because of the very simple syntax of go templates, the pipe is essential
to being able to chain together function calls. One limitation of the
pipes is that they only can work with a single value and that value
becomes the last parameter of the next pipeline.&lt;/p&gt;
&lt;p&gt;A few simple examples should help convey how to use the pipe.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example 1 :&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ if eq 1 1 }} Same {{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;is the same as&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ eq 1 1 | if }} Same {{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;It does look odd to place the if at the end, but it does provide a good
illustration of how to use the pipes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example 2 :&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ index .Params &amp;quot;disqus_url&amp;quot; | html }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Access the page parameter called &amp;ldquo;disqus_url&amp;rdquo; and escape the HTML.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example 3 :&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{ if or (or (isset .Params &amp;quot;title&amp;quot;) (isset .Params &amp;quot;caption&amp;quot;)) (isset .Params &amp;quot;attr&amp;quot;)}}
Stuff Here
{{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Could be rewritten as&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{  isset .Params &amp;quot;caption&amp;quot; | or isset .Params &amp;quot;title&amp;quot; | or isset .Params &amp;quot;attr&amp;quot; | if }}
Stuff Here 
{{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;context-aka-the-dot&#34;&gt;Context (aka. the dot)&lt;/h2&gt;
&lt;p&gt;The most easily overlooked concept to understand about go templates is that {{ . }}
always refers to the current context. In the top level of your template this
will be the data set made available to it. Inside of a iteration it will have
the value of the current item. When inside of a loop the context has changed. .
will no longer refer to the data available to the entire page. If you need to
access this from within the loop you will likely want to set it to a variable
instead of depending on the context.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Example:&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  {{ $title := .Site.Title }}
  {{ range .Params.tags }}
    &amp;lt;li&amp;gt; &amp;lt;a href=&amp;quot;{{ $baseurl }}/tags/{{ . | urlize }}&amp;quot;&amp;gt;{{ . }}&amp;lt;/a&amp;gt; - {{ $title }} &amp;lt;/li&amp;gt;
  {{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Notice how once we have entered the loop the value of {{ . }} has changed. We
have defined a variable outside of the loop so we have access to it from within
the loop.&lt;/p&gt;
&lt;h1 id=&#34;hugo-parameters&#34;&gt;Hugo Parameters&lt;/h1&gt;
&lt;p&gt;Hugo provides the option of passing values to the template language
through the site configuration (for sitewide values), or through the meta
data of each specific piece of content. You can define any values of any
type (supported by your front matter/config format) and use them however
you want to inside of your templates.&lt;/p&gt;
&lt;h2 id=&#34;using-content-page-parameters&#34;&gt;Using Content (page) Parameters&lt;/h2&gt;
&lt;p&gt;In each piece of content you can provide variables to be used by the
templates. This happens in the &lt;a href=&#34;https://sjtug.org/content/front-matter&#34;&gt;front matter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;An example of this is used in this documentation site. Most of the pages
benefit from having the table of contents provided. Sometimes the TOC just
doesn&amp;rsquo;t make a lot of sense. We&amp;rsquo;ve defined a variable in our front matter
of some pages to turn off the TOC from being displayed.&lt;/p&gt;
&lt;p&gt;Here is the example front matter:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;Permalinks&amp;quot;
date: &amp;quot;2013-11-18&amp;quot;
aliases:
  - &amp;quot;/doc/permalinks/&amp;quot;
groups: [&amp;quot;extras&amp;quot;]
groups_weight: 30
notoc: true
---
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Here is the corresponding code inside of the template:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;  {{ if not .Params.notoc }}
    &amp;lt;div id=&amp;quot;toc&amp;quot; class=&amp;quot;well col-md-4 col-sm-6&amp;quot;&amp;gt;
    {{ .TableOfContents }}
    &amp;lt;/div&amp;gt;
  {{ end }}
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;using-site-config-parameters&#34;&gt;Using Site (config) Parameters&lt;/h2&gt;
&lt;p&gt;In your top-level configuration file (eg, &lt;code&gt;config.yaml&lt;/code&gt;) you can define site
parameters, which are values which will be available to you in chrome.&lt;/p&gt;
&lt;p&gt;For instance, you might declare:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;params&lt;/span&gt;:
  &lt;span style=&#34;color:#f92672&#34;&gt;CopyrightHTML&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Copyright &amp;amp;#xA9; 2013 John Doe. All Rights Reserved.&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;TwitterUser&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spf13&amp;#34;&lt;/span&gt;
  &lt;span style=&#34;color:#f92672&#34;&gt;SidebarRecentLimit&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Within a footer layout, you might then declare a &lt;code&gt;&amp;lt;footer&amp;gt;&lt;/code&gt; which is only
provided if the &lt;code&gt;CopyrightHTML&lt;/code&gt; parameter is provided, and if it is given,
you would declare it to be HTML-safe, so that the HTML entity is not escaped
again.  This would let you easily update just your top-level config file each
January 1st, instead of hunting through your templates.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{if .Site.Params.CopyrightHTML}}&amp;lt;footer&amp;gt;
&amp;lt;div class=&amp;quot;text-center&amp;quot;&amp;gt;{{.Site.Params.CopyrightHTML | safeHtml}}&amp;lt;/div&amp;gt;
&amp;lt;/footer&amp;gt;{{end}}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;An alternative way of writing the &amp;ldquo;if&amp;rdquo; and then referencing the same value
is to use &amp;ldquo;with&amp;rdquo; instead. With rebinds the context &lt;code&gt;.&lt;/code&gt; within its scope,
and skips the block if the variable is absent:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;{{with .Site.Params.TwitterUser}}&amp;lt;span class=&amp;quot;twitter&amp;quot;&amp;gt;
&amp;lt;a href=&amp;quot;https://twitter.com/{{.}}&amp;quot; rel=&amp;quot;author&amp;quot;&amp;gt;
&amp;lt;img src=&amp;quot;/images/twitter.png&amp;quot; width=&amp;quot;48&amp;quot; height=&amp;quot;48&amp;quot; title=&amp;quot;Twitter: {{.}}&amp;quot;
 alt=&amp;quot;Twitter&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
&amp;lt;/span&amp;gt;{{end}}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Finally, if you want to pull &amp;ldquo;magic constants&amp;rdquo; out of your layouts, you can do
so, such as in this example:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;nav class=&amp;quot;recent&amp;quot;&amp;gt;
  &amp;lt;h1&amp;gt;Recent Posts&amp;lt;/h1&amp;gt;
  &amp;lt;ul&amp;gt;{{range first .Site.Params.SidebarRecentLimit .Site.Recent}}
    &amp;lt;li&amp;gt;&amp;lt;a href=&amp;quot;{{.RelPermalink}}&amp;quot;&amp;gt;{{.Title}}&amp;lt;/a&amp;gt;&amp;lt;/li&amp;gt;
  {{end}}&amp;lt;/ul&amp;gt;
&amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>Getting Started with Hugo</title>
      <link>https://sjtug.org/post/hugoisforlovers/</link>
      <pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/hugoisforlovers/</guid>
      <description>&lt;h2 id=&#34;step-1-install-hugo&#34;&gt;Step 1. Install Hugo&lt;/h2&gt;
&lt;p&gt;Goto &lt;a href=&#34;https://github.com/spf13/hugo/releases&#34;&gt;hugo releases&lt;/a&gt; and download the
appropriate version for your os and architecture.&lt;/p&gt;
&lt;p&gt;Save it somewhere specific as we will be using it in the next step.&lt;/p&gt;
&lt;p&gt;More complete instructions are available at &lt;a href=&#34;https://sjtug.org/overview/installing/&#34;&gt;installing hugo&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;step-2-build-the-docs&#34;&gt;Step 2. Build the Docs&lt;/h2&gt;
&lt;p&gt;Hugo has its own example site which happens to also be the documentation site
you are reading right now.&lt;/p&gt;
&lt;p&gt;Follow the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Clone the &lt;a href=&#34;http://github.com/spf13/hugo&#34;&gt;hugo repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Go into the repo&lt;/li&gt;
&lt;li&gt;Run hugo in server mode and build the docs&lt;/li&gt;
&lt;li&gt;Open your browser to http://localhost:1313&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Corresponding pseudo commands:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git clone https://github.com/spf13/hugo
cd hugo
/path/to/where/you/installed/hugo server --source=./docs
&amp;gt; 29 pages created
&amp;gt; 0 tags index created
&amp;gt; in 27 ms
&amp;gt; Web Server is available at http://localhost:1313
&amp;gt; Press ctrl+c to stop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once you&amp;rsquo;ve gotten here, follow along the rest of this page on your local build.&lt;/p&gt;
&lt;h2 id=&#34;step-3-change-the-docs-site&#34;&gt;Step 3. Change the docs site&lt;/h2&gt;
&lt;p&gt;Stop the Hugo process by hitting ctrl+c.&lt;/p&gt;
&lt;p&gt;Now we are going to run hugo again, but this time with hugo in watch mode.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/path/to/hugo/from/step/1/hugo server --source=./docs --watch
&amp;gt; 29 pages created
&amp;gt; 0 tags index created
&amp;gt; in 27 ms
&amp;gt; Web Server is available at http://localhost:1313
&amp;gt; Watching for changes in /Users/spf13/Code/hugo/docs/content
&amp;gt; Press ctrl+c to stop
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Open your &lt;a href=&#34;http://vim.spf13.com&#34;&gt;favorite editor&lt;/a&gt; and change one of the source
content pages. How about changing this very file to &lt;em&gt;fix the typo&lt;/em&gt;. How about changing this very file to &lt;em&gt;fix the typo&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Content files are found in &lt;code&gt;docs/content/&lt;/code&gt;. Unless otherwise specified, files
are located at the same relative location as the url, in our case
&lt;code&gt;docs/content/overview/quickstart.md&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Change and save this file.. Notice what happened in your terminal.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt; Change detected, rebuilding site

&amp;gt; 29 pages created
&amp;gt; 0 tags index created
&amp;gt; in 26 ms
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Refresh the browser and observe that the typo is now fixed.&lt;/p&gt;
&lt;p&gt;Notice how quick that was. Try to refresh the site before it&amp;rsquo;s finished building.. I double dare you.
Having nearly instant feedback enables you to have your creativity flow without waiting for long builds.&lt;/p&gt;
&lt;h2 id=&#34;step-4-have-fun&#34;&gt;Step 4. Have fun&lt;/h2&gt;
&lt;p&gt;The best way to learn something is to play with it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>alhp</title>
      <link>https://sjtug.org/post/mirror-help/alhp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/alhp/</guid>
      <description>&lt;p&gt;ALHP 是一个基于 Arch Linux 官方软件仓库使用 &lt;a href=&#34;https://en.wikipedia.org/wiki/Interprocedural_optimization&#34;&gt;LTO（链接时优化）&lt;/a&gt;、不同的 &lt;a href=&#34;https://www.phoronix.com/scan.php?page=news_item&amp;amp;px=GCC-11-x86-64-Feature-Levels&#34;&gt;x86-64 特性级别&lt;/a&gt;和 &lt;code&gt;-O3&lt;/code&gt; 提供构建的非官方用户仓库。&lt;/p&gt;
&lt;p&gt;完整的包信息列表（包名称/架构/维护者/状态）请&lt;a href=&#34;https://status.alhp.dev&#34;&gt;点击这里&lt;/a&gt;查看。&lt;/p&gt;
&lt;p&gt;仓库主地址：https://somegit.dev/ALHP/ALHP.GO&lt;/p&gt;
&lt;p&gt;以下内容翻译并修改自 &lt;a href=&#34;https://somegit.dev/ALHP/ALHP.GO/src/branch/main/README.md&#34;&gt;ALHP README&lt;/a&gt;，有删减，建议查阅原文以获取最新信息。&lt;/p&gt;
&lt;h2 id=&#34;使用方法&#34;&gt;使用方法&lt;/h2&gt;
&lt;h3 id=&#34;1-检查系统支持&#34;&gt;1. 检查系统支持&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;重要&lt;/strong&gt;：在启用任何仓库之前，请检查您的系统是否支持您想要启用的特性级别（例如 &lt;code&gt;x86-64-v3&lt;/code&gt;）。
&lt;strong&gt;如果不提前检查，可能会导致您的系统无法启动，并且您将需要降级任何您可能已经升级的软件包。&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用以下命令检查 CPU 支持的特性级别：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;/lib/ld-linux-x86-64.so.2 --help
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;支持 &lt;code&gt;x86-64-v3&lt;/code&gt; 的系统输出片段示例：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Subdirectories of glibc-hwcaps directories, in priority order:
  x86-64-v4
  x86-64-v3 (supported, searched)
  x86-64-v2 (supported, searched)
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;2-安装密钥环和镜像列表&#34;&gt;2. 安装密钥环和镜像列表&lt;/h3&gt;
&lt;p&gt;从 &lt;strong&gt;AUR&lt;/strong&gt; 安装 &lt;a href=&#34;https://aur.archlinux.org/packages/alhp-keyring/&#34;&gt;alhp-keyring&lt;/a&gt; 和 &lt;a href=&#34;https://aur.archlinux.org/packages/alhp-mirrorlist/&#34;&gt;alhp-mirrorlist&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;yay&lt;/code&gt; 安装的示例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;yay -S alhp-keyring alhp-mirrorlist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;alhp-keyring&lt;/code&gt; 提供 ALHP 当前使用的签名密钥，&lt;code&gt;alhp-mirrorlist&lt;/code&gt; 提供一组镜像列表供选择。&lt;/p&gt;
&lt;h3 id=&#34;3-选择上海交通大学软件源镜像&#34;&gt;3. 选择上海交通大学软件源镜像&lt;/h3&gt;
&lt;p&gt;编辑 &lt;code&gt;/etc/pacman.d/alhp-mirrorlist&lt;/code&gt; 在&lt;strong&gt;顶部&lt;/strong&gt;添加上海交通大学软件源镜像并注释/取消注释您希望禁用/启用的镜像：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-editorconfig&#34; data-lang=&#34;editorconfig&#34;&gt;##
## ALHP repository mirrorlist
## Updated on YYYY-MM-DD
## https://somegit.dev/ALHP/alhp-mirrorlist
##
## There is an IPFS mirror available.
## Setup instructions in /etc/pacman.d/alhp-mirrorlist.ipfs.
##

Server = https://mirror.sjtu.edu.cn/alhp/$repo/os/$arch/

## Worldwide (Cloudfare)
# Server = https://alhp.krautflare.de/$repo/os/$arch/
...
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;注意：仅 &lt;code&gt;alhp.dev&lt;/code&gt; 由 ALHP 直接托管。
如果您使用某个镜像时发生问题，请在 &lt;a href=&#34;https://somegit.dev/ALHP/alhp-mirrorlist&#34;&gt;ALHP 镜像列表仓库&lt;/a&gt;中提交 issue。
如果您使用上海交通大学软件源镜像时发生问题，请&lt;a href=&#34;https://github.com/sjtug/mirror-requests/issues/new/choose&#34;&gt;反馈 Bug&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;4-修改-etcpacmanconf&#34;&gt;4. 修改 /etc/pacman.conf&lt;/h3&gt;
&lt;p&gt;在您的 Arch Linux 官方仓库&lt;strong&gt;之上&lt;/strong&gt;添加相应的 ALHP 仓库。&lt;/p&gt;
&lt;p&gt;以 &lt;code&gt;x86-64-v3&lt;/code&gt; 为例：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-editorconfig&#34; data-lang=&#34;editorconfig&#34;&gt;[core-x86-64-v3]
Include = /etc/pacman.d/alhp-mirrorlist

[extra-x86-64-v3]
Include = /etc/pacman.d/alhp-mirrorlist

[core]
Include = /etc/pacman.d/mirrorlist

[extra]
Include = /etc/pacman.d/mirrorlist

# 如果需要 [multilib] 支持
[multilib-x86-64-v3]
Include = /etc/pacman.d/alhp-mirrorlist

[multilib]
Include = /etc/pacman.d/mirrorlist
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;将 &lt;code&gt;x86-64-v3&lt;/code&gt; 替换为您希望启用的 x86-64 特性级别。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ALHP 目前为 &lt;code&gt;x86-64-v2&lt;/code&gt;、&lt;code&gt;x86-64-v3&lt;/code&gt; 和 &lt;code&gt;x86-64-v4&lt;/code&gt; 构建。
您可以在&lt;a href=&#34;https://mirror.sjtu.edu.cn/alhp/&#34;&gt;这里&lt;/a&gt;查看所有可用的仓库。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;5-更新软件包数据库并升级&#34;&gt;5. 更新软件包数据库并升级：&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;pacman -Suy
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：直接链接的内核模块可能无法正常工作，请使用 &lt;code&gt;dkms&lt;/code&gt; 变种，详见 &lt;a href=&#34;https://somegit.dev/ALHP/ALHP.GO/issues/68&#34;&gt;ALHP/ALHP.GO#68&lt;/a&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;移除方法&#34;&gt;移除方法&lt;/h2&gt;
&lt;p&gt;要禁用 ALHP，删除 &lt;code&gt;/etc/pacman.conf&lt;/code&gt; 中所有 &lt;em&gt;x86-64-vX&lt;/em&gt; 条目，并删除 &lt;code&gt;alhp-keyring&lt;/code&gt; 和 &lt;code&gt;alhp-mirrorlist&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;之后，使用以下命令刷新 pacman 的数据库并降级所有软件包：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pacman -Suuy
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;在不同特性级别仓库之间切换&#34;&gt;在不同特性级别仓库之间切换&lt;/h2&gt;
&lt;p&gt;如果您想在不同特性级别之间切换，例如从 &lt;code&gt;x86-64-v3&lt;/code&gt; 切换到 &lt;code&gt;x86-64-v4&lt;/code&gt;，您需要首先恢复为官方软件包，然后再次启用所需的仓库。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;注释或删除 &lt;code&gt;/etc/pacman.conf&lt;/code&gt; 中的 ALHP 存储库条目。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;pacman -Suuy&lt;/code&gt; 降级软件包。&lt;/li&gt;
&lt;li&gt;使用 &lt;code&gt;pacman -Scc&lt;/code&gt; 清除 pacman 的包缓存。&lt;/li&gt;
&lt;li&gt;取消注释/添加所需的存储库到 &lt;code&gt;/etc/pacman.conf&lt;/code&gt; 并使用 &lt;code&gt;pacman -Suy&lt;/code&gt; 进行更新。&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>anaconda</title>
      <link>https://sjtug.org/post/mirror-help/anaconda/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/anaconda/</guid>
      <description>&lt;p&gt;Anaconda 是一种 Python 语言的免费增值开源发行版，用于进行大规模数据处理, 预测分析, 和科学计算, 致力于简化包的管理和部署。Anaconda 使用软件包管理系统 conda 进行包管理。&lt;/p&gt;
&lt;p&gt;SJTUG 源镜像了常用的 conda 库，以方便科学计算用户使用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note: 如果您正在从其他镜像源切换到 SJTUG，请检查我们是否同步了你所需要的 repo，以及该 repo 是否支持您使用的平台 (e.g. linux-64)。如果没有，请删除相关配置，并提出新镜像请求。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用说明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编辑 &lt;code&gt;~/.condarc&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;default_channels:
  - https://mirror.sjtu.edu.cn/anaconda/pkgs/r
  - https://mirror.sjtu.edu.cn/anaconda/pkgs/main
custom_channels:
  conda-forge: https://mirror.sjtu.edu.cn/anaconda/cloud/
  pytorch: https://mirror.sjtu.edu.cn/anaconda/cloud/
channels:
  - defaults
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在 &lt;code&gt;custom_channels&lt;/code&gt; 中您可以添加下面所列的其他第三方源。我们建议您使用上面的方法配置，而非执行下面的指令。&lt;/p&gt;
&lt;p&gt;您也可以使用&lt;code&gt;conda config --add channels https://mirror.sjtu.edu.cn/anaconda/{{你所需要的包名}}&lt;/code&gt;来将SJTUG源添加作为这个包的上游。目前镜像的包与安装命令包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;官方源&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pkgs/free&lt;/code&gt;: &lt;code&gt;conda config --add channels https://mirror.sjtu.edu.cn/anaconda/pkgs/free&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pkgs/main&lt;/code&gt;: &lt;code&gt;conda config --add channels https://mirror.sjtu.edu.cn/anaconda/pkgs/main&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pkgs/mro&lt;/code&gt;: &lt;code&gt;conda config --add channels https://mirror.sjtu.edu.cn/anaconda/pkgs/mro&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pkgs/msys2&lt;/code&gt;: &lt;code&gt;conda config --add channels https://mirror.sjtu.edu.cn/anaconda/pkgs/msys2&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pkgs/pro&lt;/code&gt;: (deprecated) &lt;code&gt;conda config --add channels https://mirror.sjtu.edu.cn/anaconda/pkgs/pro&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pkgs/r&lt;/code&gt;: (empty) &lt;code&gt;conda config --add channels https://mirror.sjtu.edu.cn/anaconda/pkgs/r&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第三方源&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;cloud/bioconda&lt;/code&gt;: &lt;code&gt;conda config --set custom_channels.bioconda https://mirror.sjtu.edu.cn/anaconda/cloud/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cloud/conda-forge&lt;/code&gt;: &lt;code&gt;conda config --set custom_channels.conda-forge https://mirror.sjtu.edu.cn/anaconda/cloud/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cloud/menpo&lt;/code&gt;: &lt;code&gt;conda config --set custom_channels.menpo https://mirror.sjtu.edu.cn/anaconda/cloud/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cloud/soumith&lt;/code&gt;: &lt;code&gt;conda config --set custom_channels.soumith https://mirror.sjtu.edu.cn/anaconda/cloud/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cloud/viscid-hub&lt;/code&gt;: &lt;code&gt;conda config --set custom_channels.viscid-hub https://mirror.sjtu.edu.cn/anaconda/cloud/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cloud/atztogo&lt;/code&gt;: &lt;code&gt;conda config --set custom_channels.atztogo https://mirror.sjtu.edu.cn/anaconda/cloud/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cloud/pytorch&lt;/code&gt;: &lt;code&gt;conda config --set custom_channels.pytorch https://mirror.sjtu.edu.cn/anaconda/cloud/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;cloud/pytorch-test&lt;/code&gt;: &lt;code&gt;conda config --set custom_channels.pytorch-test https://mirror.sjtu.edu.cn/anaconda/cloud/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此外，在 Conda 4.7 后，官方的 default 源组默认只包含 main 和 r (windows 会包含 msys2) channel，其他官方源仍支持手动添加。但官方建议不再使用 free channel，详见 &lt;a href=&#34;https://www.anaconda.com/why-we-removed-the-free-channel-in-conda-4-7/&#34;&gt;Why We Removed the “Free” Channel in Conda 4.7&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>anthon</title>
      <link>https://sjtug.org/post/mirror-help/anthon/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/anthon/</guid>
      <description>&lt;p&gt;AOSC OS（安同 OS）软件源。AOSC OS 是一个由安同开源社区 [https://aosc.io](&lt;a href=&#34;https://aosc.io&#34;&gt;https://aosc.io&lt;/a&gt;）开发的半滚动 Linux 发行版，对包括 x86-64,aarch64,LoongArch64 等多种处理器架构提供支持。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;AOSC OS 内置 &lt;code&gt;apt-gen-list&lt;/code&gt; 用于切换社区提供的可用镜像源。不建议直接使用 &lt;code&gt;/etc/apt/sources.list&lt;/code&gt; 变更镜像。&lt;/p&gt;
&lt;p&gt;使用如下指令将本镜像源添加到可用镜像源列表中&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-gen-list add-custom-mirror sjtug https://mirror.sjtu.edu.cn/anthon/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;随后使用如下启用本镜像源&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-gen-list add-mirror sjtug
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;如果仅使用本镜像源，使用如下指令&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo apt-gen-list set-mirror sjtug
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>archlinux</title>
      <link>https://sjtug.org/post/mirror-help/archlinux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/archlinux/</guid>
      <description>&lt;p&gt;Arch Linux 是通用 x86-64 GNU/Linux 发行版。Arch 采用滚动升级模式，尽全力提供最新的稳定版软件。初始安装的 Arch 只是一个基本系统，随后用户可以根据自己的喜好安装需要的软件并配置成符合自己理想的系统。&lt;/p&gt;
&lt;p&gt;使用方法：编辑 &lt;code&gt;/etc/pacman.d/mirrorlist&lt;/code&gt; 文件，添加 &lt;code&gt;Server = https://mirror.sjtu.edu.cn/archlinux/$repo/os/$arch&lt;/code&gt; 这一行，同时注释掉其它所有镜像，然后运行 &lt;code&gt;sudo pacman -Syy&lt;/code&gt; 更新软件包缓存。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>archlinux-cn</title>
      <link>https://sjtug.org/post/mirror-help/archlinux-cn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/archlinux-cn/</guid>
      <description>&lt;p&gt;Arch Linux 中文社区仓库 是由 Arch Linux 中文社区驱动的非官方用户仓库。包含中文用户常用软件、工具、字体/美化包等。&lt;/p&gt;
&lt;p&gt;完整的包信息列表（包名称/架构/维护者/状态）请 &lt;a href=&#34;https://github.com/archlinuxcn/repo&#34;&gt;点击这里&lt;/a&gt; 查看。&lt;/p&gt;
&lt;p&gt;仓库主地址：http://repo.archlinuxcn.org/&lt;/p&gt;
&lt;p&gt;使用方法：在 &lt;code&gt;/etc/pacman.conf&lt;/code&gt; 文件末尾添加以下两行：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[archlinuxcn]
Server = https://mirrors.sjtug.sjtu.edu.cn/archlinux-cn/$arch
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后，请执行下面的命令安装 archlinuxcn-keyring 包导入 GPG key。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pacman -Sy archlinuxcn-keyring
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>archlinuxarm</title>
      <link>https://sjtug.org/post/mirror-help/archlinuxarm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/archlinuxarm/</guid>
      <description>&lt;p&gt;Arch Linux ARM 是在使用 ARM 架构处理器的计算机上运行的 Linux 发行版。它为许多主流的采用 ARM 处理器的硬件提供内核及应用程序支持，同时和 Arch Linux 一样具有提供最新的软件源、避免预安装多余软件包等特点。&lt;/p&gt;
&lt;p&gt;本仓库包含 Arch Linux ARM 的系统镜像及软件源。&lt;/p&gt;
&lt;p&gt;系统镜像使用方法：请访问 &lt;a href=&#34;https://archlinuxarm.org/platforms&#34;&gt;https://archlinuxarm.org/platforms&lt;/a&gt; ，阅读硬件平台对应的安装指引并下载对应的系统镜像。&lt;/p&gt;
&lt;p&gt;软件源使用方法：在 &lt;code&gt;/etc/pacman.d/mirrorlist&lt;/code&gt; 的文件顶端（所有镜像源的最上面）加上：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Server = https://mirrors.sjtug.sjtu.edu.cn/archlinuxarm/$arch/$repo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后，请执行下面的命令更新软件包缓存。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;pacman -Syy
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>armbian</title>
      <link>https://sjtug.org/post/mirror-help/armbian/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/armbian/</guid>
      <description>&lt;p&gt;Armbian 是为 ARM 单板机提供的基于 Debian 和 Ubuntu 的操作系统。Armbian 仓库包括专用的 u-boot、内核及各种支持文件。&lt;/p&gt;
&lt;p&gt;可以使用以下方法更换软件源：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行 &lt;code&gt;armbian-config&lt;/code&gt; -&amp;gt; Personal -&amp;gt; Mirrors -&amp;gt; 选择镜像站。&lt;/li&gt;
&lt;li&gt;编辑 &lt;code&gt;/etc/apt/sources.list.d/armbian.list&lt;/code&gt;，将 &lt;code&gt;http://apt.armbian.com&lt;/code&gt; 替换为 &lt;code&gt;https://mirror.sjtu.edu.cn/armbian/&lt;/code&gt;，然后执行 &lt;code&gt;apt update&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>bioconductor</title>
      <link>https://sjtug.org/post/mirror-help/bioconductor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/bioconductor/</guid>
      <description>&lt;p&gt;Bioconductor 为高通量基因组数据的分析和可视化提供开源工具。Bioconductor多数软件包采用R统计编程语言开发。Bioconductor 每年释出两个版本，并有活跃的用户社区。&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;Bioconductor 镜像源配置文件之一是 &lt;code&gt;~/.Rprofile&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;注：R 的 &lt;code&gt;~&lt;/code&gt; 在类 Unix 系统下为： &lt;code&gt;$HOME&lt;/code&gt; （即 &lt;code&gt;~&lt;/code&gt; ），在 Windows 下为： &lt;code&gt;%USERPROFILE%\Documents&lt;/code&gt; ，具体路径可以在 R 中执行 &lt;code&gt;path.expand(&amp;quot;~&amp;quot;)&lt;/code&gt; 查看。&lt;/p&gt;
&lt;p&gt;在该文件末尾添加如下语句或在R/RStudio终端下键入:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;options(BioC_mirror=&amp;quot;https://mirror.sjtu.edu.cn/bioconductor&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;即可使用该 Bioconductor 镜像源安装 Bioconductor 软件包。
命令如下:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if (!requireNamespace(&amp;quot;BiocManager&amp;quot;, quietly = TRUE))
    install.packages(&amp;quot;BiocManager&amp;quot;)
BiocManager::install(&amp;quot;$package_name&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;请访问&lt;a href=&#34;http://bioconductor.org/&#34;&gt;官方网站&lt;/a&gt;获取更多信息。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>blackarch</title>
      <link>https://sjtug.org/post/mirror-help/blackarch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/blackarch/</guid>
      <description>&lt;p&gt;BlackArch 是一款基于 ArchLinux 的为渗透测试及安全研究人员开发的发行版，相当于 Arch 版的 Kali。可以当做现有 Arch 系统的非官方用户存储库。&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;在现有 Arch 系统中，编辑&lt;code&gt;/etc/pacman.conf&lt;/code&gt;，在末尾添加两行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[blackarch]
Server = https://mirror.sjtu.edu.cn/blackarch/$repo/os/$arch
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;由于一些软件依赖32位的库，需要取消掉&lt;code&gt;/etc/pacman.conf&lt;/code&gt;中&lt;code&gt;multilib&lt;/code&gt;的注释，详见https://wiki.archlinux.org/index.php/Official_repositories#Enabling_multilib&lt;/p&gt;
&lt;p&gt;之后，请执行下面的命令安装 blackarch-keyring 包导入 GPG key。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo pacman -Sy blackarch-keyring
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>centos</title>
      <link>https://sjtug.org/post/mirror-help/centos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/centos/</guid>
      <description>&lt;p&gt;使用方法：运行下面的指令一键替换并备份。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sed -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/mirrorlist/#mirrorlist/g&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s|#baseurl=http://mirror.centos.org/|baseurl=http://mirror.sjtu.edu.cn/|g&amp;#39;&lt;/span&gt; -i.bak /etc/yum.repos.d/&amp;lt;需要替换的文件&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后运行 &lt;code&gt;dnf makecache&lt;/code&gt; 生成缓存&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>dart-pub</title>
      <link>https://sjtug.org/post/mirror-help/dart-packages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/dart-packages/</guid>
      <description>&lt;p&gt;dart-pub 镜像全量同步了 Dart 语言官方仓库 &lt;a href=&#34;https://pub.dartlang.org&#34;&gt;https://pub.dartlang.org&lt;/a&gt; ，可以加速 Dart 包的下载。&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;设置环境变量 &lt;code&gt;export PUB_HOSTED_URL=https://mirror.sjtu.edu.cn/dart-pub&lt;/code&gt; 即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>debian</title>
      <link>https://sjtug.org/post/mirror-help/debian/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/debian/</guid>
      <description>&lt;p&gt;Debian 是完全由自由软件组成的类UNIX操作系统，其包含的多数软件使用GNU通用公共许可协议授权，并由Debian计划的参与者组成团队对其进行打包、开发与维护。Debian以其坚守Unix和自由软件的精神，以及其给予用户的众多选择而闻名。现时Debian提供了超过25,000个软件[9]，超过50,000个软件包[10]，并正式支持10个计算机系统结构。&lt;/p&gt;
&lt;h3 id=&#34;使用方法&#34;&gt;使用方法：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;一键替换&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;sudo sed -i &amp;quot;s|http://deb.debian.org/debian|http://mirror.sjtu.edu.cn/debian|g&amp;quot; /etc/apt/sources.list
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;手动替换&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;先安装 ca-certificates apt-transport-https 保证第三方https源可以使用。（执行 &lt;code&gt;sudo apt install -y ca-certificates apt-transport-https&lt;/code&gt;）&lt;/p&gt;
&lt;p&gt;再打开&lt;code&gt; /etc/apt/sources.list&lt;/code&gt;，将类似于&lt;code&gt;http://deb.debian.org/debian/&lt;/code&gt;的地址均替换为&lt;code&gt;https://mirror.sjtu.edu.cn/debian/&lt;/code&gt;即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>debian-cd</title>
      <link>https://sjtug.org/post/mirror-help/debian-cd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/debian-cd/</guid>
      <description>&lt;p&gt;Debian 是完全由自由软件组成的类 UNIX 操作系统，其包含的多数软件使用 GNU 通用公共许可协议授权，并由 Debian 计划的参与者组成团队对其进行打包、开发与维护。 Debian 以其坚守 Unix 和自由软件的精神，以及其给予用户的众多选择而闻名。现时 Debian 提供了超过25,000个软件，超过50,000个软件包，并正式支持10个计算机系统结构。&lt;/p&gt;
&lt;p&gt;本镜像仅提供 Debian 最新稳定版本。&lt;/p&gt;
&lt;p&gt;一般来说只需在 &lt;code&gt;iso-cd&lt;/code&gt; 目录 &lt;a href=&#34;https://mirror.sjtu.edu.cn/debian-cd/current/amd64/iso-cd/&#34;&gt;https://mirror.sjtu.edu.cn/debian-cd/current/amd64/iso-cd/&lt;/a&gt; 寻找无后缀版本即可。当你使用不支持 UEFI 启动的系统时候，请安装 &lt;code&gt;mac&lt;/code&gt; 后缀版本。当你寻找教育版时候可以寻找 &lt;code&gt;edu&lt;/code&gt; 后缀版本。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>debian-ports</title>
      <link>https://sjtug.org/post/mirror-help/debian-ports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/debian-ports/</guid>
      <description>&lt;p&gt;本软件源仅适用于 Debian riscv64。&lt;/p&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;，删除所有内容，添加以下内容并保存。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb [arch=riscv64] http://mirror.sjtu.edu.cn/debian-ports unstable main
deb [arch=riscv64] http://mirror.sjtu.edu.cn/debian-ports unreleased main
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后，使用&lt;code&gt;sudo apt update&lt;/code&gt;更新软件包索引。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>docker-registry</title>
      <link>https://sjtug.org/post/mirror-help/docker-registry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/docker-registry/</guid>
      <description>&lt;p&gt;docker-registry 源是 Docker Hub 的反向代理，可以加速&lt;code&gt;docker pull&lt;/code&gt;等需要下载镜像的命令。&lt;/p&gt;
&lt;h2 id=&#34;docker-使用方法&#34;&gt;Docker 使用方法：&lt;/h2&gt;
&lt;p&gt;编辑或新建&lt;code&gt;/etc/docker/daemon.json&lt;/code&gt;文件，向其中添加&lt;code&gt;registry-mirrors&lt;/code&gt;项，使最终配置类似：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;{
  &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;registry-mirrors&amp;#34;&lt;/span&gt;: [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://docker.mirrors.sjtug.sjtu.edu.cn&amp;#34;&lt;/span&gt;]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;podman-使用方法&#34;&gt;Podman 使用方法：&lt;/h2&gt;
&lt;p&gt;新建&lt;code&gt;/etc/containers/registries.conf.d/050-sjtug-docker-mirror.conf&lt;/code&gt;文件（或在&lt;code&gt;/etc/containers/registries.conf&lt;/code&gt;文件末尾），写入以下内容：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;unqualified&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;search&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;registries&lt;/span&gt; = [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;docker.io&amp;#34;&lt;/span&gt;]

[[&lt;span style=&#34;color:#a6e22e&#34;&gt;registry&lt;/span&gt;]]
&lt;span style=&#34;color:#a6e22e&#34;&gt;location&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;docker.io&amp;#34;&lt;/span&gt;

[[&lt;span style=&#34;color:#a6e22e&#34;&gt;registry&lt;/span&gt;.&lt;span style=&#34;color:#a6e22e&#34;&gt;mirror&lt;/span&gt;]]
&lt;span style=&#34;color:#a6e22e&#34;&gt;location&lt;/span&gt; = &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;docker.mirrors.sjtug.sjtu.edu.cn&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>dragonflybsd/dports</title>
      <link>https://sjtug.org/post/mirror-help/dragonflybsd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/dragonflybsd/</guid>
      <description>&lt;h2 id=&#34;项目简介&#34;&gt;项目简介&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://www.dragonflybsd.org/&#34;&gt;DragonFly BSD&lt;/a&gt; 隶属于 &lt;a href=&#34;https://en.wikipedia.org/wiki/BSD&#34;&gt;BSD 系统家族&lt;/a&gt;，
是其中相对小众、但富有特色的一个成员，与 &lt;a href=&#34;https://www.freebsd.org/&#34;&gt;FreeBSD&lt;/a&gt;、
&lt;a href=&#34;https://www.openbsd.org/&#34;&gt;OpenBSD&lt;/a&gt;、&lt;a href=&#34;https://www.netbsd.org/&#34;&gt;NetBSD&lt;/a&gt;
组成四大 BSD 操作系统。&lt;/p&gt;
&lt;p&gt;自 2003 年从 FreeBSD 4.8 衍生而来，
DragonFly BSD 对虚拟内存、虚拟文件系统、网络协议栈等关键内核子系统做了大幅修改，
尽可能地消除了锁和竞争，实现了出色的 SMP 性能。
项目创始人 Matthew Dillon 自行开发的 &lt;a href=&#34;https://en.wikipedia.org/wiki/HAMMER2&#34;&gt;HAMMER2&lt;/a&gt;
文件系统是另一个主要特色，该文件系统拥有可媲美 ZFS 的功能和稳定性，但节省内存等资源。
DragonFly BSD 的其他特色功能还有 vkernel、swapcache、LUKS、TrueCrypt、等等，
详情可参考：&lt;a href=&#34;https://www.dragonflybsd.org/features/&#34;&gt;主要特性列表&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;DragonFly BSD 的内核简洁小巧，代码整洁，在线手册 (man pages) 清晰，适合学习和研究。
驱动程序和用户空间工具主要继承自 FreeBSD，同时与 FreeBSD 使用相同的包管理工具
&lt;a href=&#34;https://github.com/freebsd/pkg&#34;&gt;pkg(8)&lt;/a&gt;，可利用 FreeBSD 丰富全面的文档资源，
用户体验良好。
此外，DragonFly BSD 的社区虽小，但很友好。&lt;/p&gt;
&lt;h2 id=&#34;镜像介绍&#34;&gt;镜像介绍&lt;/h2&gt;
&lt;p&gt;SJTUG 镜像是 DragonFly BSD 在中国内地的首个镜像站点，
依托于华东教育网骨干节点，提供稳定、快速的镜像服务。&lt;/p&gt;
&lt;p&gt;我们的镜像服务目前提供了如下内容：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://mirror.sjtu.edu.cn/dragonflybsd/iso-images/&#34;&gt;安装镜像 (ISO/IMG)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mirror.sjtu.edu.cn/dragonflybsd/dports/&#34;&gt;预编译软件包&lt;/a&gt;
(收录了 3 个版本：当前开发版本、当前发布版本、上一发布版本)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;使用方法&#34;&gt;使用方法&lt;/h2&gt;
&lt;p&gt;创建 pkg(8) 仓库配置文件 &lt;code&gt;/usr/local/etc/pkg/repos/sjtug.conf&lt;/code&gt;，添加以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;# China, Shanghai
SJTUG: {
    url:        https://mirror.sjtu.edu.cn/dragonflybsd/dports/${ABI}/LATEST,
    priority:   10,
    enabled:    yes
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后执行 &lt;code&gt;pkg update -f&lt;/code&gt; 更新索引即可开始使用了。&lt;/p&gt;
&lt;p&gt;注：仓库的优先级 (&lt;code&gt;priority&lt;/code&gt;) 默认为 0，此处通过设置 &lt;code&gt;priority: 10&lt;/code&gt;
提高优先级来优先使用 SJTUG 镜像服务。&lt;/p&gt;
&lt;h2 id=&#34;相关链接&#34;&gt;相关链接&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;官方主页: &lt;a href=&#34;https://www.dragonflybsd.org/&#34;&gt;https://www.dragonflybsd.org/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;镜像列表: &lt;a href=&#34;https://www.dragonflybsd.org/mirrors/&#34;&gt;https://www.dragonflybsd.org/mirrors/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;系统源码: &lt;a href=&#34;https://gitweb.dragonflybsd.org/dragonfly.git&#34;&gt;官方 Gitweb&lt;/a&gt;, &lt;a href=&#34;https://github.com/DragonFlyBSD/DragonFlyBSD&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;GitHub: &lt;a href=&#34;https://github.com/DragonFlyBSD/DragonFlyBSD&#34;&gt;https://github.com/DragonFlyBSD&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>elan</title>
      <link>https://sjtug.org/post/mirror-help/elan/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/elan/</guid>
      <description>&lt;h1 id=&#34;glean-lean-4-镜像适配工具&#34;&gt;&lt;code&gt;glean&lt;/code&gt;: Lean 4 镜像适配工具&lt;/h1&gt;
&lt;p&gt;使用上海交通大学的 &lt;a href=&#34;https://mirror.sjtu.edu.cn&#34;&gt;https://mirror.sjtu.edu.cn&lt;/a&gt; 镜像服务，软件源镜像托管在 &lt;code&gt;elan&lt;/code&gt;
和 &lt;code&gt;git/lean4-packages&lt;/code&gt; 下。&lt;/p&gt;
&lt;p&gt;请自行修改命令中的版本号，可用版本参见：
&lt;a href=&#34;http://mirror.sjtu.edu.cn/elan/?mirror_intel_list&#34;&gt;http://mirror.sjtu.edu.cn/elan/?mirror_intel_list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;也可以通过这个链接下载 glean。&lt;/p&gt;
&lt;h2 id=&#34;安装-elan&#34;&gt;安装 Elan&lt;/h2&gt;
&lt;p&gt;Elan 是 Lean 的版本管理工具，在 Lake 调用时根据项目 &lt;code&gt;lean-toolchain&lt;/code&gt; 文件下载安装 Lean 并切换到对应的版本。&lt;/p&gt;
&lt;p&gt;例如要阅读 Mathematics in Lean，可以运行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;git clone --depth &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; https://mirror.sjtu.edu.cn/git/lean4-packages/mathematics_in_lean/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后通过 &lt;code&gt;cat lean-toolchain&lt;/code&gt; 获取需要安装的版本。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;glean -install elan -version 3.1.1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;安装-lean&#34;&gt;安装 Lean&lt;/h2&gt;
&lt;p&gt;以下操作会安装 Lean 与 Lean 工具链，包含语言服务器、构建工具等。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;glean -install lean --version 4.5.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如需安装 nightly 版本，请以如下例子中的格式编辑命令。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;glean -install lean --version 4.4.0-nightly-2023-11-12
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;nightly 可用版本参见 &lt;a href=&#34;http://mirror.sjtu.edu.cn/elan/leanprover/lean4_nightly/releases/download?mirror_intel_list&#34;&gt;lean4_nightly&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;在构建项目前下载依赖&#34;&gt;在构建项目前下载依赖&lt;/h2&gt;
&lt;p&gt;每当下载完一个 Lean 项目后，在启动 VSCode 或命令行运行 &lt;code&gt;lake build&lt;/code&gt; 前，可以提前通过镜像下载依赖。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;glean -lake-manifest-path ~/EG/lake-manifest.json
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此处使用选项 &lt;code&gt;-lake-manifest-path ~/EG/lake-manifest.json&lt;/code&gt; 来手动指定了 &lt;code&gt;lake-manifest.json&lt;/code&gt; 文件的位置。
也可以在进入一个 Lean4 Lake 项目后，直接运行&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;glean
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;命令。这样，glean 会自动找到当前项目中 &lt;code&gt;lake-manifest.json&lt;/code&gt; 文件的位置。&lt;/p&gt;
&lt;h3 id=&#34;如何判断自己是否在在一个-lean4-lake-项目路径工作&#34;&gt;如何判断自己是否在在一个 Lean4 Lake 项目路径工作？&lt;/h3&gt;
&lt;p&gt;运行 &lt;code&gt;ls&lt;/code&gt; 命令，如果能找到 &lt;code&gt;lakefile.lean&lt;/code&gt;，即代表正在 Lean4 Lake 项目路径工作。&lt;/p&gt;
&lt;p&gt;使用 &lt;code&gt;code .&lt;/code&gt; 启动 VSCode 来使用 Lean 时，也需要确保正在 Lean4 Lake 项目路径工作。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>fedora/linux</title>
      <link>https://sjtug.org/post/mirror-help/fedora/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/fedora/</guid>
      <description>&lt;p&gt;Fedora 项目是一个由红帽公司所赞助，以统筹 Fedora Linux 操作系统开发的社区。
Fedora 项目在建设开源软件社区的同时构建了一个被称为&amp;quot;Fedora&amp;quot;的 GNU/Linux 发行版。&lt;/p&gt;
&lt;p&gt;使用方法：运行下面的指令一键替换并备份。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sed -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s/^metalink=/#metalink=/g&amp;#39;&lt;/span&gt; -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s|^#baseurl=http://download.example/pub/|baseurl=https://mirror.sjtu.edu.cn/|g&amp;#39;&lt;/span&gt; -i.bak /etc/yum.repos.d/&amp;lt;需要替换的文件&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后运行 &lt;code&gt;dnf makecache&lt;/code&gt; 生成缓存&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>flutter_infra</title>
      <link>https://sjtug.org/post/mirror-help/flutter_infra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/flutter_infra/</guid>
      <description>&lt;h2 id=&#34;欢迎使用-sjtug-镜像设置-flutter-开发环境&#34;&gt;欢迎使用 SJTUG 镜像设置 Flutter 开发环境&lt;/h2&gt;
&lt;p&gt;作为国内最早提供 Flutter 的镜像站，我们在近期对镜像站的更新中提高了 Flutter
镜像的稳定性，并解决了部分问题，欢迎大家使用！&lt;/p&gt;
&lt;p&gt;Flutter 是 Google 开源的 UI 工具包，帮助开发者通过一套代码库高效构建多平台精美应用，
支持移动、Web、桌面和嵌入式平台。&lt;/p&gt;
&lt;p&gt;Flutter 由 Google 主导，全球的开发者共同协作开发。中国的开发者数量占全球的 20%
以上，也有大量贡献者为 Flutter 的生态提供了很大的帮助和贡献。&lt;/p&gt;
&lt;p&gt;为了更好帮助国内的开发者、设计师和研究者等使用 Flutter，我们为 Flutter 的使用
提供了加速访问的服务。您需要将开发设备的如下两个环境变量设置指向 SJTUG 镜像：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;PUB_HOSTED_URL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FLUTTER_STORAGE_BASE_URL&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;linux-和-macos-系统设定-flutter-镜像&#34;&gt;Linux 和 macOS 系统设定 Flutter 镜像&lt;/h3&gt;
&lt;p&gt;执行如下代码：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export PUB_HOSTED_URL=https://mirror.sjtu.edu.cn/dart-pub
export FLUTTER_STORAGE_BASE_URL=https://mirror.sjtu.edu.cn
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;windows-系统设定-flutter-镜像&#34;&gt;Windows 系统设定 Flutter 镜像&lt;/h3&gt;
&lt;p&gt;右键单击“我的电脑”，单击“属性” ——&amp;gt; “高级”选项卡 ——&amp;gt; “环境变量”&lt;/p&gt;
&lt;p&gt;在 “用户变量” 或 “系统变量” 中：&lt;/p&gt;
&lt;p&gt;单击“新建”添加新变量：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;变量名: &lt;code&gt;PUB_HOSTED_URL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;值: &lt;code&gt;https://mirror.sjtu.edu.cn/dart-pub&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;变量名: &lt;code&gt;FLUTTER_STORAGE_BASE_URL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;值: &lt;code&gt;https://mirror.sjtu.edu.cn&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;点击确定，保存生效。如果这两个变量名已经存在，点击编辑可修改变量值。&lt;/p&gt;
&lt;h3 id=&#34;设置-flutter-sdk-仓库镜像&#34;&gt;设置 Flutter SDK 仓库镜像&lt;/h3&gt;
&lt;p&gt;在 &lt;code&gt;flutter-sdk&lt;/code&gt; 仓库下，执行如下指令即可。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;git remote set-url origin https://git.sjtu.edu.cn/sjtug/flutter-sdk.git
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;downloadflutterio-镜像&#34;&gt;download.flutter.io 镜像&lt;/h3&gt;
&lt;p&gt;访问 &lt;a href=&#34;https://mirror.sjtu.edu.cn/download.flutter.io/&#34;&gt;https://mirror.sjtu.edu.cn/download.flutter.io/&lt;/a&gt; 即可。&lt;/p&gt;
&lt;h2 id=&#34;更多资源&#34;&gt;更多资源&lt;/h2&gt;
&lt;p&gt;感谢 flutter.cn 对 SJTUG 镜像测试的支持。
更多 Flutter 资源和中文文档，
请访问 Flutter 中文资源网站 (&lt;a href=&#34;https://flutter.cn&#34;&gt;flutter.cn&lt;/a&gt;)
和 Dart 中文文档网站 (&lt;a href=&#34;https://dart.cn&#34;&gt;dart.cn&lt;/a&gt;)。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>git/brew.git</title>
      <link>https://sjtug.org/post/mirror-help/brew-git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/brew-git/</guid>
      <description>&lt;p&gt;本镜像是 Homebrew 自身的仓库，上游为&lt;code&gt;https://github.com/Homebrew/brew.git&lt;/code&gt;。在&lt;code&gt;git&lt;/code&gt;相关操作时使用&lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/git/brew.git&lt;/code&gt;替代上述地址即可。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SJTUG镜像同时也提供了&lt;code&gt;homebrew-core&lt;/code&gt;, &lt;code&gt;homebrew-cask&lt;/code&gt;和&lt;code&gt;brew-bottles&lt;/code&gt;镜像，欢迎大家使用。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;执行以下语句或加入到&lt;code&gt;~/.bashrc&lt;/code&gt;中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;export HOMEBREW_BREW_GIT_REMOTE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://mirrors.sjtug.sjtu.edu.cn/git/brew.git
export HOMEBREW_CORE_GIT_REMOTE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://mirrors.sjtug.sjtu.edu.cn/git/homebrew-core.git
export HOMEBREW_BOTTLE_DOMAIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://mirror.sjtu.edu.cn/homebrew-bottles/bottles
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;另外，现 homebrew 版本将默认使用 API 下载，本镜像源尚不支持这种方式，若使用本镜像请手动关闭该开关。&lt;/p&gt;
&lt;p&gt;执行以下语句或加入到&lt;code&gt;~/.bashrc&lt;/code&gt;中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;export HOMEBREW_NO_INSTALL_FROM_API&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;随后正常使用官方脚本安装即可。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>git/homebrew-cask.git</title>
      <link>https://sjtug.org/post/mirror-help/homebrew-cask/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/homebrew-cask/</guid>
      <description>&lt;p&gt;homebrew-cask.git镜像了&lt;a href=&#34;https://github.com/Homebrew/homebrew-cask.git&#34;&gt;Homebrew Cask的描述文件，主要包括了较大的二进制文件与macOS应用&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SJTUG镜像同时也提供了&lt;code&gt;homebrew-core&lt;/code&gt;和&lt;code&gt;brew-bottles&lt;/code&gt;镜像，欢迎大家使用。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;若首次安装 homebrew, 请参阅 &lt;code&gt;brew.git&lt;/code&gt; 的说明。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;brew tap --custom-remote --force-auto-update homebrew/cask https://mirrors.sjtug.sjtu.edu.cn/git/homebrew-cask.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;brew update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;另外，现 homebrew 版本将默认使用 API 下载，本镜像源尚不支持这种方式，若使用本镜像请手动关闭该开关。&lt;/p&gt;
&lt;p&gt;执行以下语句或加入到&lt;code&gt;~/.bashrc&lt;/code&gt;中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;export HOMEBREW_NO_INSTALL_FROM_API&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>git/homebrew-core.git</title>
      <link>https://sjtug.org/post/mirror-help/homebrew-core/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/homebrew-core/</guid>
      <description>&lt;p&gt;homebrew-core.git镜像了&lt;a href=&#34;https://github.com/Homebrew/homebrew-core.git&#34;&gt;Homebrew官方的软件包描述文件&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SJTUG镜像同时也提供了&lt;code&gt;homebrew-cask&lt;/code&gt;和&lt;code&gt;brew-bottles&lt;/code&gt;镜像，欢迎大家使用。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;若首次安装 homebrew, 请参阅 &lt;code&gt;brew.git&lt;/code&gt; 的说明。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;执行以下语句或加入到&lt;code&gt;~/.bashrc&lt;/code&gt;中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;export HOMEBREW_CORE_GIT_REMOTE&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://mirrors.sjtug.sjtu.edu.cn/git/homebrew-core.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后执行：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;brew tap --custom-remote --force-auto-update homebrew/core https://mirrors.sjtug.sjtu.edu.cn/git/homebrew-core.git
brew update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;另外，现 homebrew 版本将默认使用 API 下载，本镜像源尚不支持这种方式，若使用本镜像请手动关闭该开关。&lt;/p&gt;
&lt;p&gt;执行以下语句或加入到&lt;code&gt;~/.bashrc&lt;/code&gt;中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;export HOMEBREW_NO_INSTALL_FROM_API&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>git/ohmyzsh.git</title>
      <link>https://sjtug.org/post/mirror-help/ohmyzsh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/ohmyzsh/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://ohmyz.sh/&#34;&gt;Oh My Zsh&lt;/a&gt; 是一个由社区驱动的开源框架，用于管理 &lt;a href=&#34;https://www.zsh.org/&#34;&gt;zsh&lt;/a&gt; 的配置。&lt;/p&gt;
&lt;h2 id=&#34;首次安装-oh-my-zsh&#34;&gt;首次安装 Oh My Zsh&lt;/h2&gt;
&lt;p&gt;首先，需要确保系统中安装了 zsh 和 git，然后在终端运行以下命令其中之一：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;方法&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;命令&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;curl&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;REPO=sjtug/ohmyzsh REMOTE=https://git.sjtu.edu.cn/${REPO}.git sh -c &amp;quot;$(curl -fsSL https://git.sjtu.edu.cn/sjtug/ohmyzsh/-/raw/master/tools/install.sh\?inline\=false)&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;wget&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;REPO=sjtug/ohmyzsh REMOTE=https://git.sjtu.edu.cn/${REPO}.git sh -c &amp;quot;$(wget -O- https://git.sjtu.edu.cn/sjtug/ohmyzsh/-/raw/master/tools/install.sh\?inline\=false)&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;strong&gt;fetch&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;&lt;code&gt;REPO=sjtug/ohmyzsh REMOTE=https://git.sjtu.edu.cn/${REPO}.git sh -c &amp;quot;$(fetch -o - https://git.sjtu.edu.cn/sjtug/ohmyzsh/-/raw/master/tools/install.sh\?inline\=false)&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;替换现有仓库上游&#34;&gt;替换现有仓库上游&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;git -C $ZSH remote set-url origin https://git.sjtu.edu.cn/sjtug/ohmyzsh.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>google-fonts</title>
      <link>https://sjtug.org/post/mirror-help/google-fonts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/google-fonts/</guid>
      <description>&lt;p&gt;本镜像提供了 Google Fonts 的反向代理。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link href=&amp;quot;https://fonts.googleapis.com/css?family=Roboto&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;改为&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;link href=&amp;quot;https://google-fonts.mirrors.sjtug.sjtu.edu.cn/css?family=Roboto&amp;quot; rel=&amp;quot;stylesheet&amp;quot;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>guix</title>
      <link>https://sjtug.org/post/mirror-help/guix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/guix/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://guix.gnu.org/&#34;&gt;GNU/Guix&lt;/a&gt;是隶属于GNU项目的自由软件发行版。Guix可以作为独立的操作系统发行版安装在计算机上，可以作为软件包管理器安装在别的Linux发行版上。
它的核心是一个函数式软件包管理器，支持事务性的升级、回滚操作。用户可以通过
&lt;a href=&#34;https://www.gnu.org/software/guile/&#34;&gt;Guile&lt;/a&gt;语言编写配置文件管理操作系统的服务或者管理用户安装的软件。&lt;/p&gt;
&lt;h2 id=&#34;git-镜像&#34;&gt;Git 镜像&lt;/h2&gt;
&lt;p&gt;Git 镜像的地址为 &lt;a href=&#34;https://mirror.sjtu.edu.cn/git/guix.git&#34;&gt;https://mirror.sjtu.edu.cn/git/guix.git&lt;/a&gt; 。修改 &lt;code&gt;~/.config/guix/channels.scm&lt;/code&gt; 文件即可在 &lt;code&gt;guix pull&lt;/code&gt; 时使用。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;(list (channel
       (inherit (car %default-channels))
       (url &amp;quot;https://mirror.sjtu.edu.cn/git/guix.git&amp;quot;)))
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;substitute-镜像&#34;&gt;Substitute 镜像&lt;/h2&gt;
&lt;p&gt;镜像地址为 &lt;a href=&#34;https://mirror.sjtu.edu.cn/guix/&#34;&gt;https://mirror.sjtu.edu.cn/guix/&lt;/a&gt;。
镜像实现方式为智能缓存，在镜像站用户首次访问某个 nar 或 narinfo 时，它会被永久缓存在镜像上；
之后的访问将直接从镜像服务器返回数据。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;guix命令支持使用 &lt;code&gt;--substitute-urls&lt;/code&gt; 参数为单个命令的执行临时覆盖substitute服务器，例如：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;guix package -i &amp;lt;package&amp;gt; --substitute-urls&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirror.sjtu.edu.cn/guix/&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;如果您使用 Guix 管理整个操作系统，请修改操作系统配置文件 ，替换
&lt;code&gt;substitute-urls&lt;/code&gt; 参数。例如：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-scheme&#34; data-lang=&#34;scheme&#34;&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;operating-system&lt;/span&gt;
  (&lt;span style=&#34;color:#a6e22e&#34;&gt;services&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;modify-services&lt;/span&gt; %desktop-services
              (&lt;span style=&#34;color:#a6e22e&#34;&gt;guix-service-type&lt;/span&gt;
               config &lt;span style=&#34;color:#66d9ef&#34;&gt;=&amp;gt; &lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;guix-configuration&lt;/span&gt;
                          (&lt;span style=&#34;color:#a6e22e&#34;&gt;inherit&lt;/span&gt; config)
                          (&lt;span style=&#34;color:#a6e22e&#34;&gt;substitute-urls&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirror.sjtu.edu.cn/guix/&amp;#34;&lt;/span&gt;
                                             &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://ci.guix.gnu.org&amp;#34;&lt;/span&gt;))))))
  &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
  )
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;如果您在别的发行版上使用 Guix 包管理器，请修改 &lt;code&gt;guix-daemon&lt;/code&gt; 的
&lt;code&gt;--substitute-urls&lt;/code&gt; 参数。比如修改 &lt;code&gt;guix-daemon.service&lt;/code&gt; 的 &lt;code&gt;ExecStart&lt;/code&gt; 为：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;ExecStart=/var/guix/profiles/per-user/root/current-guix/bin/guix-daemon --build-users-group=guixbuild --substitute-urls=&amp;quot;https://mirror.sjtu.edu.cn/guix/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本文档的编写参考了 &lt;a href=&#34;https://guixcn.org/wiki/mirror/&#34;&gt;https://guixcn.org/wiki/mirror/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>homebrew-bottles</title>
      <link>https://sjtug.org/post/mirror-help/homebrew-bottles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/homebrew-bottles/</guid>
      <description>&lt;p&gt;homebrew-bottles.git镜像了&lt;a href=&#34;https://homebrew.bintray.com/&#34;&gt;预编译的 Homebrew 软件包&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;SJTUG镜像同时也提供了&lt;code&gt;homebrew-core&lt;/code&gt;和&lt;code&gt;homebrew-cask&lt;/code&gt;镜像，欢迎大家使用。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;若首次安装 homebrew, 请参阅 &lt;code&gt;brew.git&lt;/code&gt; 的说明。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;执行以下语句或加入到&lt;code&gt;~/.bashrc&lt;/code&gt;中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;export HOMEBREW_BOTTLE_DOMAIN&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://mirror.sjtu.edu.cn/homebrew-bottles/bottles
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SJTUG 镜像现已支持 ghcr.io 的 bottles 同步。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>immortalwrt</title>
      <link>https://sjtug.org/post/mirror-help/immortalwrt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/immortalwrt/</guid>
      <description>&lt;p&gt;ImmortalWrt 是 OpenWrt 的一个第三方分支，主要针对国人用户开发，提供更多的本地化软件包和设备支持。&lt;/p&gt;
&lt;p&gt;使用方法：
修改 &lt;code&gt;/etc/opkg/distfeeds.conf&lt;/code&gt; 文件，将源地址 &lt;code&gt;downloads.immortalwrt.org&lt;/code&gt; / &lt;code&gt;mirrors.vsean.net/openwrt&lt;/code&gt; 修改为
&lt;code&gt;mirror.sjtu.edu.cn/immortalwrt&lt;/code&gt;，然后运行 &lt;code&gt;opkg update&lt;/code&gt; 刷新软件包列表。&lt;/p&gt;
&lt;p&gt;您也可以登录 LuCI 后台，进入 &lt;code&gt;系统&lt;/code&gt; -&amp;gt; &lt;code&gt;软件包&lt;/code&gt; 页面，点击 &lt;code&gt;配置 opkg&lt;/code&gt; 并按上述说明完成对源地址的更改。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>kali</title>
      <link>https://sjtug.org/post/mirror-help/kali/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/kali/</guid>
      <description>&lt;p&gt;Kali Linux 是基于Debian的Linux发行版，设计用于数字鉴识和渗透测试。由 Offensive Security Ltd 维护和资助。&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;，在头部添加：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;deb https://mirrors.sjtug.sjtu.edu.cn/kali kali-rolling main contrib non-free non-free-firmware
deb-src https://mirrors.sjtug.sjtu.edu.cn/kali kali-rolling main contrib non-free non-free-firmware
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>leopardsh</title>
      <link>https://sjtug.org/post/mirror-help/leopardsh/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/leopardsh/</guid>
      <description>&lt;p&gt;leopard.sh / tiger.sh 是一个 PPC Mac OS X 10.4-10.5 上的包管理器，提供了许多常用软件包，节省了 PowerPC Mac 漫长的编译时间&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用说明&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mac OS X Tiger:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下载 &lt;code&gt;tiger.sh&lt;/code&gt;，并运行安装&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -O http://leopard.sh/tigersh/tiger.sh
chmod +x ./tiger.sh
./tiger.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装完成后，脚本会自己移动到&lt;code&gt;/usr/local/bin/tiger.sh&lt;/code&gt;，对其进行编辑：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;TIGERSH_MIRROR=${TIGERSH_MIRROR:-https://mirror.sjtu.edu.cn/leopardsh}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;并在文件开头添加:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export TIGERSH_MIRROR_NO_HTTP=1
export TIGERSH_MIRROR_NO_HEAD=1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;Mac OS X Leopard:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;下载 &lt;code&gt;leopard.sh&lt;/code&gt;，并运行安装&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;curl -O http://leopard.sh/leopardsh/leopard.sh
chmod +x ./leopard.sh
./leopard.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;安装完成后，脚本会自己移动到&lt;code&gt;/usr/local/bin/leopard.sh&lt;/code&gt;，对其进行编辑：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;LEOPARDSH_MIRROR=${LEOPARDSH_MIRROR:-https://mirror.sjtu.edu.cn/leopardsh}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;并在文件开头添加:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export LEOPARDSH_MIRROR_NO_HTTP=1
export LEOPARDSH_MIRROR_NO_HEAD=1
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>linuxliteos</title>
      <link>https://sjtug.org/post/mirror-help/linuxliteos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/linuxliteos/</guid>
      <description>&lt;p&gt;Linux Lite 是一个基于 Ubuntu 长期支持版本（LTS）的 Linux 发行版，搭载 Xfce 桌面环境。Linux Lite 的目的是将 Windows 用户引入 Linux，对新手比较友好。其旨在提供一套完整的应用程序来帮助用户满足用户日常的计算需求，这包括完整的办公套件、媒体播放器和其他基本的日常软件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方式：&lt;/strong&gt; 在终端输入&lt;code&gt;sudo nano /etc/apt/sources.list&lt;/code&gt;，删除原有内容，用以下内容代替。&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb https://mirrors.sjtug.sjtu.edu.cn/linuxliteos/ emerald main
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo apt update&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>maven-central</title>
      <link>https://sjtug.org/post/mirror-help/maven-central/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/maven-central/</guid>
      <description>&lt;p&gt;Apache Maven仓库存放了可用于Maven的大量软件包（特别是Java软件）。目前本镜像为 &lt;a href=&#34;http://repo.maven.apache.org/maven2/&#34;&gt;http://repo.maven.apache.org/maven2/&lt;/a&gt; 的反向代理，能够加速安装。&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;修改Maven根目录下的&lt;code&gt;conf/setting.xml&lt;/code&gt;，增加一节&lt;code&gt;&amp;lt;mirror /&amp;gt;&lt;/code&gt;，具体如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;mirrors&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#75715e&#34;&gt;&amp;lt;!-- Other mirrors... --&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;mirror&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;id&amp;gt;&lt;/span&gt;sjtugmaven&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/id&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;name&amp;gt;&lt;/span&gt;sjtug maven&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/name&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;url&amp;gt;&lt;/span&gt;https://mirrors.sjtug.sjtu.edu.cn/maven-central/&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/url&amp;gt;&lt;/span&gt;
        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;mirrorOf&amp;gt;&lt;/span&gt;central&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/mirrorOf&amp;gt;&lt;/span&gt;
    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/mirror&amp;gt;&lt;/span&gt;
&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/mirrors&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>msys2</title>
      <link>https://sjtug.org/post/mirror-help/msys2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/msys2/</guid>
      <description>&lt;p&gt;&lt;strong&gt;收录架构&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MINGW: i686, x86_64&lt;/li&gt;
&lt;li&gt;MSYS: i686, x86_64&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;获取基本组件包&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;请访问该镜像目录下的&lt;code&gt;distrib/&lt;/code&gt;目录（&lt;a href=&#34;http://mirrors.sjtug.sjtu.edu.cn/msys2/distrib/x86_64/&#34;&gt;x86_64&lt;/a&gt;、&lt;a href=&#34;http://mirrors.sjtug.sjtu.edu.cn/msys2/distrib/i686/&#34;&gt;i686&lt;/a&gt;），找到名为&lt;code&gt;msys2-&amp;lt;架构&amp;gt;-&amp;lt;日期&amp;gt;.exe&lt;/code&gt;的文件（如&lt;code&gt;msys2-x86_64-20141113.exe&lt;/code&gt;），下载安装即可。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;pacman的配置&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/pacman.d/mirrorlist.mingw32&lt;/code&gt;，在文件开头添加：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Server = http://mirrors.sjtug.sjtu.edu.cn/msys2/mingw/i686
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;编辑&lt;code&gt;/etc/pacman.d/mirrorlist.mingw64&lt;/code&gt;，在文件开头添加：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Server = http://mirrors.sjtug.sjtu.edu.cn/msys2/mingw/x86_64
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;编辑&lt;code&gt;/etc/pacman.d/mirrorlist.msys&lt;/code&gt;，在文件开头添加：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Server = http://mirrors.sjtug.sjtu.edu.cn/msys2/msys/$arch
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后执行&lt;code&gt;pacman -Sy&lt;/code&gt;刷新软件包数据即可。&lt;/p&gt;
&lt;p&gt;注：本Help参考自&lt;a href=&#34;https://lug.ustc.edu.cn/wiki/mirrors/help/msys2&#34;&gt;UTSC镜像&lt;/a&gt;和&lt;a href=&#34;https://mirrors.tuna.tsinghua.edu.cn/help/msys2/&#34;&gt;清华镜像&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>mx-isos</title>
      <link>https://sjtug.org/post/mirror-help/mx-isos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/mx-isos/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://mxlinux.org/&#34;&gt;MX Linux&lt;/a&gt; 是一个基于Debian 稳定分支的面向桌面的Linux发行，它是antiX 及早先的MEPIS 社区合作的产物。它采用Xfce 作为缺省桌面，是一个轻量级操作系统。&lt;/p&gt;
&lt;p&gt;本Repo镜像了MX Linux和AntiX的安装镜像。具体信息可以参见 &lt;a href=&#34;https://mxlinux.org/wiki/system/iso-download-mirrors&#34;&gt;https://mxlinux.org/wiki/system/iso-download-mirrors&lt;/a&gt; 。&lt;/p&gt;
&lt;p&gt;本站另有&lt;code&gt;mx-packages&lt;/code&gt;镜像，包括了MX Linux与AntiX的软件包，欢迎大家使用。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>mx-packages</title>
      <link>https://sjtug.org/post/mirror-help/mx-packages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/mx-packages/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://mxlinux.org/&#34;&gt;MX Linux&lt;/a&gt; 是一个基于Debian 稳定分支的面向桌面的Linux发行，它是antiX 及早先的MEPIS 社区合作的产物。它采用Xfce 作为缺省桌面，是一个轻量级操作系统。&lt;/p&gt;
&lt;p&gt;本Repo镜像了MX Linux和AntiX的软件包。&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;（推荐）打开MX Repo Manager，选择SJTUG mirror&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;（手动）：
打开&lt;code&gt; /etc/apt/sources.list&lt;/code&gt;，将&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;deb http://mxrepo.com/mx/repo/ stretch non-free main
deb http://mxrepo.com/mx/testrepo/ mx7 test
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;替换成&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb http://mirrors.sjtug.sjtu.edu.cn/mx-packages/mx/repo stretch main non-free
deb http://mirrors.sjtug.sjtu.edu.cn/mx-packages/mx/testrepo test
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>nix-channels/store</title>
      <link>https://sjtug.org/post/mirror-help/nix-channels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/nix-channels/</guid>
      <description>&lt;p&gt;Nix 是一个支持 Linux 和 macOS 的函数式包管理器，具有原子更新、依赖隔离、构建尽可能可复现等特点。&lt;/p&gt;
&lt;p&gt;Nixpkgs 是 Nix 包管理器对应的软件发行版，使用 Nix 函数式语言编写，除软件包外提供用于软件定制、构建、开发环境配置的工具。&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;p&gt;单独安装的 Nix：编辑配置文件（系统配置位于 &lt;code&gt;/etc/nix/nix.conf&lt;/code&gt;，用户配置位于 &lt;code&gt;~/.config/nix/nix.conf&lt;/code&gt;）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;substituters = https://mirror.sjtu.edu.cn/nix-channels/store https://cache.nixos.org
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;单独安装的 Nix 在更改完配置文件之后需要重启 nix-daemon 才能应用配置。&lt;/p&gt;
&lt;p&gt;NixOS 与 nix-darwin：编辑配置文件（一般来说，NixOS 配置位于 &lt;code&gt;/etc/nixos/configuration.nix&lt;/code&gt;，nix-darwin 配置位于 &lt;code&gt;$HOME/.nixpkgs/darwin-configuration.nix&lt;/code&gt;，如果你手动指定了 &lt;code&gt;NIX_PATH&lt;/code&gt; 或是使用 Flakes 管理系统，请根据具体情况编辑对应的文件）：&lt;/p&gt;
&lt;p&gt;对于 NixOS 21.11（及之前的版本）与 nix-darwin：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-nix&#34; data-lang=&#34;nix&#34;&gt;{ config&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; lib&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; pkgs&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt; }:
{
  nix&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;binaryCaches &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirror.sjtu.edu.cn/nix-channels/store&amp;#34;&lt;/span&gt; ];
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对于 NixOS 22.05（及之后的版本）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-nix&#34; data-lang=&#34;nix&#34;&gt;{ config&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; lib&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; pkgs&lt;span style=&#34;color:#f92672&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt; }:
{
  nix&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;settings&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;substituters &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://mirror.sjtu.edu.cn/nix-channels/store&amp;#34;&lt;/span&gt; ];
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;NixOS 与 nix-darwin 在更改完配置之后需要 switch 到新配置后生效。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>nodejs-release</title>
      <link>https://sjtug.org/post/mirror-help/nodejs-release/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/nodejs-release/</guid>
      <description>&lt;p&gt;本链接反代了 &lt;a href=&#34;https://nodejs.org/dist/&#34;&gt;https://nodejs.org/dist/&lt;/a&gt; 。可以在此手动下载Nodejs的安装包，也可以配合Nodejs环境使用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;n&lt;/code&gt;：&lt;code&gt;export NODE_MIRROR=https://mirrors.sjtug.sjtu.edu.cn/nodejs-release/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;nvm&lt;/code&gt;：&lt;code&gt;export NVM_NODEJS_ORG_MIRROR=https://mirrors.sjtug.sjtu.edu.cn/nodejs-release&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>npm-registry</title>
      <link>https://sjtug.org/post/mirror-help/npm-registry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/npm-registry/</guid>
      <description>&lt;p&gt;npm-registry 源是 NodeJS 的官方包管理 npm 的仓库的反向代理，可以加速&lt;code&gt;npm install&lt;/code&gt;等需要下载的命令。&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;短期使用&lt;/strong&gt;: 在&lt;code&gt;npm&lt;/code&gt;命令后加上&lt;code&gt;--registry=https://mirrors.sjtug.sjtu.edu.cn/npm-registry&lt;/code&gt;的参数，即可使用SJTUG源。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;长期使用&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Xnix&lt;/strong&gt;: 打开&lt;code&gt;$HOME/.npmrc&lt;/code&gt;，添加以下内容：&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;&lt;code&gt;registry=https://mirrors.sjtug.sjtu.edu.cn/npm-registry
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;即可大幅提升下载速度。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: 编辑&lt;code&gt;%USERPROFILE%\.npmrc&lt;/code&gt;，同样加入以上内容即可使用SJTUG镜像源。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>openEuler</title>
      <link>https://sjtug.org/post/mirror-help/openeuler/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/openeuler/</guid>
      <description>&lt;p&gt;openEuler 是一个开源、免费的 Linux 发行版，将通过开放的社区形式与全球的开发者共同构建一个开放、
多元和架构包容的软件生态体系。&lt;/p&gt;
&lt;p&gt;同时，openEuler 也是一个创新的平台，鼓励任何人在该平台上提出新想法、开拓新思路、实践新方案。&lt;/p&gt;
&lt;h2 id=&#34;配置方法&#34;&gt;配置方法&lt;/h2&gt;
&lt;p&gt;openEuler 源包含多个版本，假定您需要使用 openEuler-20.09 版本，在 yum 源目录(&lt;code&gt;/etc/yum.repos.d/&lt;/code&gt;)下新增 openEuler.repo 文件，
注意文件中的 &lt;code&gt;openEuler-20.09&lt;/code&gt; 路径:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[OS]
name=OS
baseurl=https://mirror.sjtu.edu.cn/openeuler/openEuler-20.09/OS/$basearch/
enabled=1
gpgcheck=1
gpgkey=https://mirror.sjtu.edu.cn/openeuler/openEuler-20.09/OS/$basearch/RPM-GPG-KEY-openEuler
[everything]
name=everything
baseurl=https://mirror.sjtu.edu.cn/openeuler/openEuler-20.09/everything/$basearch/
enabled=1
gpgcheck=1
gpgkey=https://mirror.sjtu.edu.cn/openeuler/openEuler-20.09/everything/$basearch/RPM-GPG-KEY-openEuler
[EPOL]
name=EPOL
baseurl=https://mirror.sjtu.edu.cn/openeuler/openEuler-20.09/EPOL/$basearch/
enabled=1
gpgcheck=1
gpgkey=https://mirror.sjtu.edu.cn/openeuler/openEuler-20.09/EPOL/$basearch/RPM-GPG-KEY-openEuler
[debuginfo]
name=debuginfo
baseurl=https://mirror.sjtu.edu.cn/openeuler/openEuler-20.09/debuginfo/$basearch/
enabled=1
gpgcheck=1
gpgkey=https://mirror.sjtu.edu.cn/openeuler/openEuler-20.09/debuginfo/$basearch/RPM-GPG-KEY-openEuler
[source]
name=source
baseurl=https://mirror.sjtu.edu.cn/openeuler/openEuler-20.09/source/
enabled=1
gpgcheck=1 
gpgkey=https://mirror.sjtu.edu.cn/openeuler/openEuler-20.09/source/RPM-GPG-KEY-openEuler
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;正常执行 &lt;code&gt;yum update&lt;/code&gt; 和 &lt;code&gt;yum install&lt;/code&gt; 即可。如果您在使用的过程中遇到任何问题，可以直接联系 openEuler
社区 &lt;a href=&#34;mailto:admin@openeuler.io&#34;&gt;admin@openeuler.io&lt;/a&gt;，也可以通过 GitHub 向 SJTUG 反馈 bug。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>packagist</title>
      <link>https://sjtug.org/post/mirror-help/packagist/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/packagist/</guid>
      <description>&lt;p&gt;Packagist 是 PHP 包管理软件 Composer 的源。本镜像仅包含所有包的 metadata，并非全量同步镜像。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;全局设置&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;composer config -g repo.packagist composer https://packagist.mirrors.sjtug.sjtu.edu.cn
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;或者仅对一个项目设置&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;composer config repo.packagist composer https://packagist.mirrors.sjtug.sjtu.edu.cn
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>parrot</title>
      <link>https://sjtug.org/post/mirror-help/parrot/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/parrot/</guid>
      <description>&lt;p&gt;Parrot Security OS是一个基于Debian的Linux发行版，专注于计算机安全。它专为渗透测试，漏洞评估和缓解，计算机取证和匿名Web浏览而设计。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;修改&lt;code&gt;etc/apt/sources.list.d/parrot.list&lt;/code&gt;的以下内容：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#stable repository
deb https://mirrors.sjtug.sjtu.edu.cn/parrot/ parrot main contrib non-free
#deb-src https://mirrors.sjtug.sjtu.edu.cn/parrot/ parrot main contrib non-free
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>putty</title>
      <link>https://sjtug.org/post/mirror-help/putty/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/putty/</guid>
      <description>&lt;p&gt;PuTTY是一个支持Telnet、SSH、rlogin、纯TCP以及串行端口连接软件。&lt;/p&gt;
&lt;p&gt;使用方法：直接打开点击Download&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>pypi-packages</title>
      <link>https://sjtug.org/post/mirror-help/pypi-packages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/pypi-packages/</guid>
      <description>&lt;p&gt;&lt;del&gt;2019年10月10日起，由于 PyPI 占用过多空间，我们将 PyPI 改为了反代。PyPI 源的服务质量可能有所下降。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;2020年12月7日起，我们通过智能缓存全量同步了 PyPI。欢迎继续使用。&lt;/p&gt;
&lt;p&gt;PyPI 是 Python 官方的包仓库，可以通过 &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;easy_install&lt;/code&gt; 等方式从 PyPI 安装 &lt;code&gt;numpy&lt;/code&gt;, &lt;code&gt;tensorflow&lt;/code&gt; 等常用包。&lt;/p&gt;
&lt;p&gt;执行指令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pip config set global.index-url https://mirror.sjtu.edu.cn/pypi/web/simple
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者创建或编辑 &lt;code&gt;~/.config/pip/pip.conf&lt;/code&gt; 文件，加入或修改 &lt;code&gt;index-url&lt;/code&gt; 相关段落为：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;[global]
index-url = https://mirror.sjtu.edu.cn/pypi/web/simple
format = columns
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;临时使用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pip install -i https://mirror.sjtu.edu.cn/pypi/web/simple numpy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>pypi/web/simple</title>
      <link>https://sjtug.org/post/mirror-help/pypi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/pypi/</guid>
      <description>&lt;p&gt;&lt;del&gt;2019年10月10日起，由于 PyPI 占用过多空间，我们将 PyPI 改为了反代。PyPI 源的服务质量可能有所下降。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;2020年12月7日起，我们通过智能缓存全量同步了 PyPI。欢迎继续使用。&lt;/p&gt;
&lt;p&gt;PyPI 是 Python 官方的包仓库，可以通过 &lt;code&gt;pip&lt;/code&gt;, &lt;code&gt;easy_install&lt;/code&gt; 等方式从 PyPI 安装 &lt;code&gt;numpy&lt;/code&gt;, &lt;code&gt;tensorflow&lt;/code&gt; 等常用包。&lt;/p&gt;
&lt;p&gt;执行指令&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pip config set global.index-url https://mirror.sjtu.edu.cn/pypi/web/simple
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;或者创建或编辑 &lt;code&gt;~/.config/pip/pip.conf&lt;/code&gt; 文件，加入或修改 &lt;code&gt;index-url&lt;/code&gt; 相关段落为：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&#34;language-conf&#34; data-lang=&#34;conf&#34;&gt;[global]
index-url = https://mirror.sjtu.edu.cn/pypi/web/simple
format = columns
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;临时使用：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pip install -i https://mirror.sjtu.edu.cn/pypi/web/simple numpy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>pytorch-wheels</title>
      <link>https://sjtug.org/post/mirror-help/pytorch-wheels/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/pytorch-wheels/</guid>
      <description>&lt;p&gt;pytorch-wheels 是 PyTorch pip 源的镜像。直接将 &lt;a href=&#34;https://pytorch.org/get-started/locally/&#34;&gt;PyTorch 安装指引&lt;/a&gt;
中的 &lt;code&gt;https://download.pytorch.org/whl&lt;/code&gt; 替换为 &lt;code&gt;https://mirror.sjtu.edu.cn/pytorch-wheels&lt;/code&gt; 即可。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;pip install torch&lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt;1.7.1 torchvision&lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt;0.8.2 torchaudio&lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt;0.7.2 -f https://mirror.sjtu.edu.cn/pytorch-wheels/torch_stable.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>raspberry-pi-os-images</title>
      <link>https://sjtug.org/post/mirror-help/raspberry-pi-os-images/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/raspberry-pi-os-images/</guid>
      <description>&lt;p&gt;主仓库地址： &lt;a href=&#34;http://downloads.raspberrypi.org/&#34;&gt;http://downloads.raspberrypi.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;根据需要的版本进入以下包含 Raspberry Pi OS 系统镜像的目录，选择&lt;code&gt;.zip&lt;/code&gt;文件下载即可。推荐使用 &lt;a href=&#34;https://www.balena.io/etcher/&#34;&gt;balenaEtcher&lt;/a&gt; 将镜像写入 SD 卡&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Raspberry Pi OS 版本&lt;/th&gt;
&lt;th&gt;存储目录&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;精简版 Raspberry Pi OS 系统&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/raspberry-pi-os-images/raspios_lite_armhf/images/&#34;&gt;raspios_lite_armhf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;常规版 Raspberry Pi OS 系统&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/raspberry-pi-os-images/raspios_armhf/images/&#34;&gt;raspios_armhf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;完整版 Raspberry Pi OS 系统&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/raspberry-pi-os-images/raspios_full_armhf/images/&#34;&gt;raspios_full_armhf&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;精简版 Raspberry Pi OS 64位系统&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/raspberry-pi-os-images/raspios_lite_arm64/images/&#34;&gt;raspios_lite_arm64&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;常规版 Raspberry Pi OS 64位系统&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/raspberry-pi-os-images/raspios_arm64/images/&#34;&gt;raspios_arm64&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;备注&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;暂无 Raspberry Pi OS 64位完整版系统&lt;/li&gt;
&lt;li&gt;Raspberry Pi OS 是 Raspbian 的后继者，二者名称不同，但功能和界面相同。首个 Raspberry Pi OS 系统发行于 2020年5月27日&lt;/li&gt;
&lt;li&gt;2012年7月15日-2020年2月14日期间发行的旧版 Raspbian 系统镜像与 Raspberry Pi OS 位于不同目录，各版本分别位于：&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/raspberry-pi-os-images/raspbian_lite/images/&#34;&gt;raspbian_lite&lt;/a&gt;、&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/raspberry-pi-os-images/raspbian/images/&#34;&gt;raspbian&lt;/a&gt;、&lt;a href=&#34;https://mirrors.sjtug.sjtu.edu.cn/raspberry-pi-os-images/raspbian_full/images/&#34;&gt;raspbian_full&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Raspberry Pi OS 常用设置&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;无头初始化设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;启用 SSH：在 SD 卡 boot 分区中创建名为 &lt;code&gt;ssh&lt;/code&gt; （不应包括任何扩展名或其他字符）的空白文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;预设 WiFi 信息：在 SD 卡 boot 分区中创建名为 &lt;code&gt;wpa_supplicant.conf&lt;/code&gt; 的文本文件，按如下格式填写 &lt;code&gt;YOUR_WiFi_NAME&lt;/code&gt; 和 &lt;code&gt;YOUR_WiFi_PASSWORD&lt;/code&gt; ，推荐设置为本机 WiFi 热点或拥有管理员权限的无线路由器 WiFi ，以便查找树莓派的 IP 地址&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ctrl_interface=DIR=/var/run/wpa_supplicant GROUP=netdev
update_config=1
country=CN

network={
	ssid=&amp;quot;YOUR_WiFi_NAME&amp;quot;
	psk=&amp;quot;YOUR_WiFi_PASSWORD&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;远程连接：插卡启动树莓派，在 WiFi 热点中查询 IP 分配情况，确认树莓派的 IP 地址，使用 SSH 进行远程连接。树莓派的默认 SSH 端口为 22，用户名为 &lt;code&gt;pi&lt;/code&gt; ，默认密码为 &lt;code&gt;raspberry&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;命令行下的设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在终端输入 &lt;code&gt;sudo raspi-config&lt;/code&gt; 命令进行基本设置。可将时区设置为 &lt;code&gt;Asia/Shanghai&lt;/code&gt; ，将默认区域更改为 &lt;code&gt;en_US.UTF-8&lt;/code&gt; （英文）或 &lt;code&gt;zh_CN.UTF-8&lt;/code&gt; （中文）；连接USB键盘时，可将键盘布局修改为美式键盘（Generic 104-key PC -&amp;gt; Other -&amp;gt; English (US) -&amp;gt; English (US)）；同时还可启用 VNC 以进行远程桌面连接。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;图形界面下的设置&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首次进入桌面时，根据提示进行鼠标操作设置即可&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;apt 软件源修改&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Raspberry Pi OS 系统镜像内预置的 apt 软件源在国内访问缓慢，可将 apt 软件源更改为 SJTUG 镜像源&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将 &lt;code&gt;/etc/apt/sources.list&lt;/code&gt; 文件中的 raspbian 存储库由 &lt;code&gt;http://raspbian.raspberrypi.org/raspbian/&lt;/code&gt; 更改为 &lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/raspbian/raspbian/&lt;/code&gt; ，对于64位 Raspberry Pi OS ，将 &lt;code&gt;http://deb.debian.org/debian/&lt;/code&gt; 更改为 &lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/debian/&lt;/code&gt; ，将 &lt;code&gt;http://deb.debian.org/debian-security/&lt;/code&gt; 更改为 &lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/debian-security/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将 &lt;code&gt;/etc/apt/sources.list.d/raspi.list&lt;/code&gt; 文件中的 raspberrypi 存储库由 &lt;code&gt;http://archive.raspberrypi.org/debian/&lt;/code&gt; 更改为 &lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/raspberrypi/debian/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;可输入以下命令完成 apt 软件源设置（截至 2021-05-28 版仍然适用）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak
sudo cp /etc/apt/sources.list.d/raspi.list /etc/apt/sources.list.d/raspi.list.bak
sudo sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s|http://raspbian.raspberrypi.org/raspbian/|https://mirrors.sjtug.sjtu.edu.cn/raspbian/raspbian/|g&amp;#34;&lt;/span&gt; /etc/apt/sources.list
sudo sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s|http://deb.debian.org/debian|https://mirrors.sjtug.sjtu.edu.cn/debian|g&amp;#34;&lt;/span&gt; /etc/apt/sources.list
sudo sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;s|http://archive.raspberrypi.org/debian/|https://mirrors.sjtug.sjtu.edu.cn/raspberrypi/debian/|g&amp;#34;&lt;/span&gt; /etc/apt/sources.list.d/raspi.list
sudo apt update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;添加 Raspbian 非官方软件源 Raspbian Addons（可选）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;wget -qO- https://mirror.sjtu.edu.cn/raspbian-addons/KEY.gpg | sudo apt-key add -
echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deb https://mirror.sjtu.edu.cn/raspbian-addons/debian precise main&amp;#34;&lt;/span&gt; | sudo tee /etc/apt/sources.list.d/raspbian-addons.list
sudo apt update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;软件包更新&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo apt update &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt upgrade -y &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt autoremove -y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>raspberrypi</title>
      <link>https://sjtug.org/post/mirror-help/raspberrypi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/raspberrypi/</guid>
      <description>&lt;p&gt;raspberrypi是树莓派基金会提供的软件源，包括 ui 相关程序及部分由树莓派基金会为树莓派编写的软件。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;将&lt;code&gt;/etc/apt/sources.list.d/raspi.list&lt;/code&gt;中的&lt;code&gt;http://archive.raspberrypi.org/debian/&lt;/code&gt;更换成&lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/raspberrypi/debian/&lt;/code&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>raspbian</title>
      <link>https://sjtug.org/post/mirror-help/raspbian/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/raspbian/</guid>
      <description>&lt;p&gt;Raspberry Pi OS 是为树莓派设计，基于 Debian 的操作系统。本镜像提供了 Raspberry Pi OS 的官方软件源。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;更换软件源：&lt;/p&gt;
&lt;p&gt;编辑&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;，将所有的&lt;code&gt;deb&lt;/code&gt;与&lt;code&gt;deb-src&lt;/code&gt;之后的网址替换成&lt;code&gt;https://mirrors.sjtug.sjtu.edu.cn/raspbian/raspbian/&lt;/code&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>raspbian-addons</title>
      <link>https://sjtug.org/post/mirror-help/raspbian-addons/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/raspbian-addons/</guid>
      <description>&lt;p&gt;Raspbian Addons 是 Raspbian 非官方软件源，含有许多来自 GitHub 的开源软件，可作为对 Raspbian（Debian） 官方仓库的一个补充。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;项目主页：https://raspbian-addons.org&lt;/li&gt;
&lt;li&gt;官方文档：https://docs.raspbian-addons.org&lt;/li&gt;
&lt;li&gt;GitHub 主页：https://github.com/raspbian-addons&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;支持架构：armhf、arm64&lt;/p&gt;
&lt;h2 id=&#34;使用方法&#34;&gt;使用方法&lt;/h2&gt;
&lt;p&gt;信任仓库的 GPG 公钥&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;wget -qO- https://mirror.sjtu.edu.cn/raspbian-addons/KEY.gpg | sudo apt-key add -
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;添加该仓库&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;deb https://mirror.sjtu.edu.cn/raspbian-addons/debian precise main&amp;#34;&lt;/span&gt; | sudo tee /etc/apt/sources.list.d/raspbian-addons.list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;更新软件包缓存&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sudo apt update
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>rocky</title>
      <link>https://sjtug.org/post/mirror-help/rocky/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/rocky/</guid>
      <description>&lt;p&gt;使用方法：运行下面的指令一键替换并备份。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;sed -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s|^mirrorlist=|#mirrorlist=|g&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s|^#baseurl=http://dl.rockylinux.org/$contentdir|baseurl=https://mirrors.sjtug.sjtu.edu.cn/rocky|g&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    -i.bak &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    /etc/yum.repos.d/Rocky-*.repo
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最后运行 &lt;code&gt;dnf makecache&lt;/code&gt; 生成缓存&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ros</title>
      <link>https://sjtug.org/post/mirror-help/ros/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/ros/</guid>
      <description>&lt;p&gt;使用方式：&lt;/p&gt;
&lt;p&gt;可使用&lt;code&gt;gedit&lt;/code&gt;等文本编辑器修改&lt;code&gt;/etc/apt/sources.list.d/ros-latest.list&lt;/code&gt;。修改后使用&lt;code&gt;sudo apt update&lt;/code&gt;更新软件源。&lt;/p&gt;
&lt;p&gt;Ubuntu 18.04 (ROS Melodic)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb https://mirrors.sjtug.sjtu.edu.cn/ros/ubuntu bionic main
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ubuntu 20.04 (ROS Noetic)&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb https://mirrors.sjtug.sjtu.edu.cn/ros/ubuntu focal main
&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    
    <item>
      <title>rust-static</title>
      <link>https://sjtug.org/post/mirror-help/rust-static/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/rust-static/</guid>
      <description>&lt;p&gt;rust-static储存了rust的工具链及&lt;code&gt;rustup&lt;/code&gt;本身的镜像。&lt;/p&gt;
&lt;p&gt;使用方法：安装&lt;code&gt;rustup&lt;/code&gt;，将以下环境变量加入&lt;code&gt;~/.bashrc&lt;/code&gt;或类似文件中：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;export RUSTUP_DIST_SERVER&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://mirror.sjtu.edu.cn/rust-static
export RUSTUP_UPDATE_ROOT&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;https://mirror.sjtu.edu.cn/rust-static/rustup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>ubuntu</title>
      <link>https://sjtug.org/post/mirror-help/ubuntu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/ubuntu/</guid>
      <description>&lt;p&gt;Ubuntu是一个基于Debian的Linux发行版，包含了常用的大量软件包。Ubuntu的目标在于为一般用户提供一个最新同时又相当稳定，主要以自由软件建构而成的作业系统。Ubuntu目前具有庞大的社群力量支持，用户可以方便地从社群获得帮助。&lt;/p&gt;
&lt;p&gt;SJTUG镜像源可以加速软件包的安装。&lt;/p&gt;
&lt;p&gt;本镜像仅包含 32/64 位 x86 架构处理器的软件包，在 ARM(arm64, armhf)、PowerPC(ppc64el)、RISC-V(riscv64) 和 S390x 等架构的设备上（对应官方源为 ports.ubuntu.com）请使用 ubuntu-ports 镜像。&lt;/p&gt;
&lt;p&gt;使用方式：&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;sudo nano /etc/apt/sources.list&lt;/code&gt;打开镜像源列表文件。将类似于&lt;code&gt;http://archive.ubuntu.com/ubuntu&lt;/code&gt;或&lt;code&gt;http://cn.archive.ubuntu.com/ubuntu&lt;/code&gt;的地址改成&lt;code&gt;https://mirror.sjtu.edu.cn/ubuntu&lt;/code&gt;，之后按&lt;code&gt;Ctrl-O 回车&lt;/code&gt;保存，按&lt;code&gt;Ctrl-X&lt;/code&gt;退出。最后执行&lt;code&gt;sudo apt update&lt;/code&gt;即可。&lt;/p&gt;
&lt;p&gt;镜像站一天同步一次 Ubuntu 镜像。为了取得最新的安全更新，我们不建议您将 &lt;code&gt;security.ubuntu.com&lt;/code&gt; 换成镜像源。&lt;/p&gt;
&lt;p&gt;您也可使用&lt;code&gt;sudo sed -i &#39;s/http:\/\/archive.ubuntu.com/https:\/\/mirror.sjtu.edu.cn/g&#39; /etc/apt/sources.list&lt;/code&gt;或&lt;code&gt;sudo sed -i &#39;s/http:\/\/cn.archive.ubuntu.com/https:\/\/mirror.sjtu.edu.cn/g&#39; /etc/apt/sources.list&lt;/code&gt;指令直接批量修改。&lt;/p&gt;
&lt;p&gt;以下为修改后的镜像源列表文件的示例。可使用&lt;code&gt;gedit&lt;/code&gt;等文本编辑器修改&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;。修改后使用&lt;code&gt;sudo apt update&lt;/code&gt;更新软件源。&lt;/p&gt;
&lt;p&gt;从 Ubuntu 24.04 起，Ubuntu 的软件源配置文件变更为 DEB822 格式，在此格式下使用镜像源时，须注意替换&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;对应路径为&lt;code&gt;/etc/apt/sources.list.d/ubuntu.sources&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;Ubuntu 18.04&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb https://mirror.sjtu.edu.cn/ubuntu/ bionic main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ bionic main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu/ bionic-security main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ bionic-security main restricted universe multiverse

# deb https://mirror.sjtu.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ubuntu 20.04&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb https://mirror.sjtu.edu.cn/ubuntu/ focal main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ focal main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu/ focal-updates main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ focal-updates main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu/ focal-backports main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ focal-backports main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu/ focal-security main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ focal-security main restricted universe multiverse

# deb https://mirror.sjtu.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ focal-proposed main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ubuntu 22.04&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb https://mirror.sjtu.edu.cn/ubuntu/ jammy main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ jammy main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ jammy-updates main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ jammy-backports main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu/ jammy-security main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ jammy-security main restricted universe multiverse

# deb https://mirror.sjtu.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ jammy-proposed main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ubuntu 24.04 (DEB822 格式) &lt;code&gt;/etc/apt/sources.list.d/ubuntu.sources&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Types: deb
URIs: https://mirror.sjtu.edu.cn/ubuntu/
Suites: noble noble-updates noble-backports
Components: main restricted universe multiverse
Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

# Types: deb-src
# URIs: https://mirror.sjtu.edu.cn/ubuntu/
# Suites: noble noble-updates noble-backports
# Components: main restricted universe multiverse
# Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

Types: deb
URIs: https://mirror.sjtu.edu.cn/ubuntu/
Suites: noble-security
Components: main restricted universe multiverse
Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

# Types: deb-src
# URIs: https://mirror.sjtu.edu.cn/ubuntu/
# Suites: noble-security
# Components: main restricted universe multiverse
# Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

# Types: deb
# URIs: https://mirror.sjtu.edu.cn/ubuntu/
# Suites: noble-proposed
# Components: main restricted universe multiverse
# Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

# Types: deb-src
# URIs: https://mirror.sjtu.edu.cn/ubuntu/
# Suites: noble-proposed
# Components: main restricted universe multiverse
# Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ubuntu 24.04 (旧格式，不推荐使用) &lt;code&gt;/etc/apt/sources.list&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb https://mirror.sjtu.edu.cn/ubuntu/ noble main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ noble main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu/ noble-updates main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ noble-updates main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu/ noble-backports main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ noble-backports main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu/ noble-security main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ noble-security main restricted universe multiverse

# deb https://mirror.sjtu.edu.cn/ubuntu/ noble-proposed main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ noble-proposed main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中&lt;code&gt;deb-src&lt;/code&gt;为源码镜像，默认注释以提高速度。可将原镜像列表备份后替换为上述内容。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu-cdimage</title>
      <link>https://sjtug.org/post/mirror-help/ubuntu-cdimage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/ubuntu-cdimage/</guid>
      <description>&lt;p&gt;Ubuntu 是一个基于 Debian 的 Linux 发行版。 Ubuntu 的目标在于为一般用户提供一个最新同时又相当稳定，主要以自由软件建构而成的作业系统。 Ubuntu 目前具有庞大的社群力量支持，用户可以方便地从社群获得帮助。&lt;/p&gt;
&lt;p&gt;本镜像提供现在维护版本的每日构建版本、 Ubuntu 原版的 server 版本和 Ubuntu 衍生版本，提供这些版本的多个架构支持。&lt;/p&gt;
&lt;p&gt;Ubuntu 衍生版现在包括 Kubuntu(KDE) 、 Xubuntu(Xfce) 、 Ubuntu Budgie 、 Ubuntu Studio 、 Lubuntu(LXDE) 、 Ubuntu Kylin （优麒麟）、Ubuntu MATE 、Ubuntu Budgie(Budgie)，可以进入相关目录下载衍生版的镜像。&lt;/p&gt;
&lt;p&gt;你可以查看 &lt;a href=&#34;https://wiki.ubuntu.com/UbuntuFlavors&#34;&gt;https://wiki.ubuntu.com/UbuntuFlavors&lt;/a&gt; 现在所支持的 Ubuntu 衍生版本和已经不受到支持的 Ubuntu 衍生版本。&lt;/p&gt;
&lt;p&gt;如果你正在寻找原版的桌面版本,你可以在 &lt;a href=&#34;https://mirror.sjtu.edu.cn/ubuntu-cd/&#34;&gt;https://mirror.sjtu.edu.cn/ubuntu-cd/&lt;/a&gt; 获取，
也可以在这查看使用帮助 &lt;a href=&#34;https://mirror.sjtu.edu.cn/docs/ubuntu-cd&#34;&gt;https://mirror.sjtu.edu.cn/docs/ubuntu-cd&lt;/a&gt;。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu-cloud-images</title>
      <link>https://sjtug.org/post/mirror-help/ubuntu-cloud-images/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/ubuntu-cloud-images/</guid>
      <description>&lt;p&gt;本镜像为 OpenStack, LXD 等公有云使用的 Ubuntu 镜像，收录官方的云 Ubuntu 镜像，由 Canonical 定制，提供 Ubuntu 认证镜像，可在 OpenStack, LXD 等公有云上运行。&lt;/p&gt;
&lt;p&gt;本镜像包含 KVM, Hyper-V, Xen 等虚拟结构的官方定制镜像。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用方法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;可以使用 &lt;a href=&#34;https://mirror.sjtu.edu.cn/ubuntu-cloud-images/locator&#34;&gt;https://mirror.sjtu.edu.cn/ubuntu-cloud-images/locator/&lt;/a&gt; 查找公有云使用的镜像。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu-ports</title>
      <link>https://sjtug.org/post/mirror-help/ubuntu-ports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/ubuntu-ports/</guid>
      <description>&lt;p&gt;使用方式：&lt;/p&gt;
&lt;p&gt;可使用&lt;code&gt;gedit&lt;/code&gt;等文本编辑器修改&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;。修改后使用&lt;code&gt;sudo apt update&lt;/code&gt;更新软件源。&lt;/p&gt;
&lt;p&gt;从 Ubuntu 24.04 起，Ubuntu 的软件源配置文件变更为 DEB822 格式，在此格式下使用镜像源时，须注意替换&lt;code&gt;/etc/apt/sources.list&lt;/code&gt;对应路径为&lt;code&gt;/etc/apt/sources.list.d/ubuntu.sources&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;Ubuntu 18.04&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb https://mirror.sjtu.edu.cn/ubuntu-ports/ bionic main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu-ports/ bionic main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu-ports/ bionic-updates main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu-ports/ bionic-updates main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu-ports/ bionic-backports main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu-ports/ bionic-backports main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu-ports/ bionic-security main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu-ports/ bionic-security main restricted universe multiverse

# deb https://mirror.sjtu.edu.cn/ubuntu-ports/ bionic-proposed main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu-ports/ bionic-proposed main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ubuntu 20.04&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb https://mirror.sjtu.edu.cn/ubuntu-ports/ focal main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu-ports/ focal main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu-ports/ focal-updates main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu-ports/ focal-backports main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu-ports/ focal-security main restricted universe multiverse

# deb https://mirror.sjtu.edu.cn/ubuntu-ports/ focal-proposed main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu-ports/ focal-proposed main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ubuntu 22.04&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb https://mirror.sjtu.edu.cn/ubuntu-ports/ jammy main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu-ports/ jammy main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu-ports/ jammy-updates main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu-ports/ jammy-updates main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu-ports/ jammy-backports main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu-ports/ jammy-backports main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu-ports/ jammy-security main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu-ports/ jammy-security main restricted universe multiverse

# deb https://mirror.sjtu.edu.cn/ubuntu-ports/ jammy-proposed main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu-ports/ jammy-proposed main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ubuntu 24.04 (DEB822 格式) &lt;code&gt;/etc/apt/sources.list.d/ubuntu.sources&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Types: deb
URIs: https://mirror.sjtu.edu.cn/ubuntu/
Suites: noble noble-updates noble-backports
Components: main restricted universe multiverse
Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

# Types: deb-src
# URIs: https://mirror.sjtu.edu.cn/ubuntu/
# Suites: noble noble-updates noble-backports
# Components: main restricted universe multiverse
# Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

Types: deb
URIs: https://mirror.sjtu.edu.cn/ubuntu/
Suites: noble-security
Components: main restricted universe multiverse
Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

# Types: deb-src
# URIs: https://mirror.sjtu.edu.cn/ubuntu/
# Suites: noble-security
# Components: main restricted universe multiverse
# Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

# Types: deb
# URIs: https://mirror.sjtu.edu.cn/ubuntu/
# Suites: noble-proposed
# Components: main restricted universe multiverse
# Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg

# Types: deb-src
# URIs: https://mirror.sjtu.edu.cn/ubuntu/
# Suites: noble-proposed
# Components: main restricted universe multiverse
# Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Ubuntu 24.04 (旧格式，不推荐使用) &lt;code&gt;/etc/apt/sources.list&lt;/code&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;deb https://mirror.sjtu.edu.cn/ubuntu/ noble main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ noble main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu/ noble-updates main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ noble-updates main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu/ noble-backports main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ noble-backports main restricted universe multiverse
deb https://mirror.sjtu.edu.cn/ubuntu/ noble-security main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ noble-security main restricted universe multiverse

# deb https://mirror.sjtu.edu.cn/ubuntu/ noble-proposed main restricted universe multiverse
# deb-src https://mirror.sjtu.edu.cn/ubuntu/ noble-proposed main restricted universe multiverse
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中&lt;code&gt;deb-src&lt;/code&gt;为源码镜像，默认注释以提高速度。可将原镜像列表备份后替换为上述内容。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ubuntu-releases</title>
      <link>https://sjtug.org/post/mirror-help/ubuntu-releases/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/ubuntu-releases/</guid>
      <description>&lt;p&gt;Ubuntu 是一个基于 Debian 的 Linux 发行版。 Ubuntu 的目标在于为一般用户提供一个最新同时又相当稳定，主要以自由软件建构而成的作业系统。 Ubuntu 目前具有庞大的社群力量支持，用户可以方便地从社群获得帮助。&lt;/p&gt;
&lt;p&gt;本镜像主要收录还在生命周期内 x86 和 arm 架构的镜像，包括开发版，不包括超过 End of Standard Support 后进入 ESM 的镜像。&lt;/p&gt;
&lt;p&gt;您可以通过 &lt;a href=&#34;https://wiki.ubuntu.com/Releases&#34;&gt;https://wiki.ubuntu.com/Releases&lt;/a&gt; 查看现在还在生命周期内的镜像。&lt;/p&gt;
&lt;p&gt;更多衍生发行版和其他架构非桌面版本请至 &lt;a href=&#34;https://mirror.sjtu.edu.cn/ubuntu-cdimage/&#34;&gt;https://mirror.sjtu.edu.cn/ubuntu-cdimage/&lt;/a&gt; 查看，或者在 &lt;a href=&#34;https://mirror.sjtu.edu.cn/docs/ubuntu-cdimage&#34;&gt;https://mirror.sjtu.edu.cn/docs/ubuntu-cdimage&lt;/a&gt; 获取该镜像使用帮助。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>voidlinux</title>
      <link>https://sjtug.org/post/mirror-help/voidlinux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://sjtug.org/post/mirror-help/voidlinux/</guid>
      <description>&lt;p&gt;Void linux 是基于 Linux 内核独立开发的通用操作系统。其特色在于一份二进制/源代码混合式包管理系统，这使得用户能快速安装、更新、移除软件，或者是借助 XBPS 源代码集合从源码直接生成软件。该发行的其他特性包括对 Raspberry Pi 单板计算机（armv6 和 armv7）的支持，每日更新的滚动式开发模式，可以选择 glibc 和 musl 作为 C 库，以及名为 runit 的原生 BSD 风格 init 系统。&lt;/p&gt;
&lt;p&gt;使用方法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;mkdir -p /etc/xbps.d
cp /usr/share/xbps.d/*-repository-*.conf /etc/xbps.d/
sed -i &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;s|https://alpha.de.repo.voidlinux.org|https://mirror.sjtu.edu.cn/voidlinux|g&amp;#39;&lt;/span&gt; /etc/xbps.d/*-repository-*.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;之后可用 &lt;code&gt;xbps-query -L&lt;/code&gt; 检查是否正确替换。&lt;/p&gt;
&lt;p&gt;运行 &lt;code&gt;xbps-install -Su&lt;/code&gt; 刷新镜像并更新系统。&lt;/p&gt;
&lt;p&gt;请前往&lt;a href=&#34;https://docs.voidlinux.org/xbps/repositories/mirrors/changing.html&#34;&gt;官方教程&lt;/a&gt;获取更多信息。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>